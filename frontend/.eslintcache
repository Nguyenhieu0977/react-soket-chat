[{"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\index.js":"1","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\useChat.js":"2","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\App.js":"3","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\login\\Login.js":"4","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\Reducer.js":"5","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\signup\\SignupReducer.js":"6","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\signup\\SignupTypes.js":"7","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\Root.js":"8","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\signup\\Signup.js":"9","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\Dashboard.js":"10","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\login\\LoginTypes.js":"11","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\signup\\SignupActions.js":"12","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\login\\LoginReducer.js":"13","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\utils\\Utils.js":"14","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\login\\LoginActions.js":"15","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\utils\\RequireAuth.js":"16","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\useJitsi.js":"17","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JisiReducer.js":"18","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiActions.js":"19","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiTypes.js":"20","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiMeet.js":"21","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\ControlList.js":"22","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarTypes.js":"23","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarActions.js":"24","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarReducer.js":"25","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\FormCalendar.js":"26","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarMeet.js":"27","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarListItem.js":"28","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarList.js":"29","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarListDetail.js":"30","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarBreadcrumb.js":"31","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarPagination.js":"32","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\EditCalendar.js":"33","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarAdd.js":"34","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserReducer.js":"35","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserActions.js":"36","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserData.js":"37","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarAddRoom.js":"38","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarSeclectUser.js":"39","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserTypes.js":"40","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarEditRoom.js":"41","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarSeclectUserEdit.js":"42","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarToday.js":"43","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarJitsi.js":"44","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\ControlList.js":"45","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarModal.js":"46","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\common\\Menubar.js":"47","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\common\\Footer.js":"48","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\common\\Header.js":"49","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\CalendarJitsi.js":"50","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\CalendarToday.js":"51","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarHome.js":"52","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\CalendarNext.js":"53","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiMeetAdmin.js":"54","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\ControlListAdmin.js":"55","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiControl.js":"56","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiMeetClient.js":"57","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserCreate.js":"58","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserPagination.js":"59","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserList.js":"60","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserListItem.js":"61","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserAdd.js":"62","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserProfileAdd.js":"63","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\ProfileReducer.js":"64","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\ProfileModal.js":"65","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserUpdate.js":"66","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\ProfileUpdate.js":"67","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\ProfilesReducer.js":"68","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UnitsReducer.js":"69","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\Recursive.js":"70","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\UpdateProfile.js":"71"},{"size":470,"mtime":1633963250811,"results":"72","hashOfConfig":"73"},{"size":5075,"mtime":1620554417056,"results":"74","hashOfConfig":"73"},{"size":1955,"mtime":1633961455488,"results":"75","hashOfConfig":"73"},{"size":4154,"mtime":1633962415905,"results":"76","hashOfConfig":"73"},{"size":1028,"mtime":1633962593617,"results":"77","hashOfConfig":"73"},{"size":1604,"mtime":1621785362241,"results":"78","hashOfConfig":"73"},{"size":266,"mtime":1624420792924,"results":"79","hashOfConfig":"73"},{"size":1608,"mtime":1625231001787,"results":"80","hashOfConfig":"73"},{"size":3776,"mtime":1621785491052,"results":"81","hashOfConfig":"73"},{"size":20784,"mtime":1633961853344,"results":"82","hashOfConfig":"73"},{"size":262,"mtime":1633026571729,"results":"83","hashOfConfig":"73"},{"size":1335,"mtime":1621785454435,"results":"84","hashOfConfig":"73"},{"size":800,"mtime":1633271312153,"results":"85","hashOfConfig":"73"},{"size":968,"mtime":1624075298432,"results":"86","hashOfConfig":"73"},{"size":3372,"mtime":1633280570780,"results":"87","hashOfConfig":"73"},{"size":1401,"mtime":1626446428549,"results":"88","hashOfConfig":"73"},{"size":2239,"mtime":1620840983269,"results":"89","hashOfConfig":"73"},{"size":1565,"mtime":1626015503858,"results":"90","hashOfConfig":"73"},{"size":1236,"mtime":1626015401684,"results":"91","hashOfConfig":"73"},{"size":302,"mtime":1626015562419,"results":"92","hashOfConfig":"73"},{"size":17982,"mtime":1632492246011,"results":"93","hashOfConfig":"73"},{"size":8475,"mtime":1626025531030,"results":"94","hashOfConfig":"73"},{"size":248,"mtime":1624368903692,"results":"95","hashOfConfig":"73"},{"size":2071,"mtime":1624791053823,"results":"96","hashOfConfig":"73"},{"size":1187,"mtime":1624730562242,"results":"97","hashOfConfig":"73"},{"size":7438,"mtime":1624532070163,"results":"98","hashOfConfig":"73"},{"size":1233,"mtime":1633964227740,"results":"99","hashOfConfig":"73"},{"size":4256,"mtime":1633964782516,"results":"100","hashOfConfig":"73"},{"size":8622,"mtime":1632919611980,"results":"101","hashOfConfig":"73"},{"size":8603,"mtime":1633964764569,"results":"102","hashOfConfig":"73"},{"size":2332,"mtime":1624875065229,"results":"103","hashOfConfig":"73"},{"size":1445,"mtime":1624459144695,"results":"104","hashOfConfig":"73"},{"size":3346,"mtime":1624598475918,"results":"105","hashOfConfig":"73"},{"size":3858,"mtime":1624690920689,"results":"106","hashOfConfig":"73"},{"size":2693,"mtime":1632647243573,"results":"107","hashOfConfig":"73"},{"size":7071,"mtime":1632647923760,"results":"108","hashOfConfig":"73"},{"size":387,"mtime":1624638867247,"results":"109","hashOfConfig":"73"},{"size":14352,"mtime":1633963920243,"results":"110","hashOfConfig":"73"},{"size":1291,"mtime":1633964805731,"results":"111","hashOfConfig":"73"},{"size":2114,"mtime":1632632721758,"results":"112","hashOfConfig":"73"},{"size":15967,"mtime":1633964709528,"results":"113","hashOfConfig":"73"},{"size":1320,"mtime":1633964814156,"results":"114","hashOfConfig":"73"},{"size":4532,"mtime":1633964831808,"results":"115","hashOfConfig":"73"},{"size":5874,"mtime":1633963344573,"results":"116","hashOfConfig":"73"},{"size":7836,"mtime":1633964860839,"results":"117","hashOfConfig":"73"},{"size":1678,"mtime":1624937991915,"results":"118","hashOfConfig":"73"},{"size":2675,"mtime":1633961370555,"results":"119","hashOfConfig":"73"},{"size":954,"mtime":1633962741976,"results":"120","hashOfConfig":"73"},{"size":5106,"mtime":1632927322072,"results":"121","hashOfConfig":"73"},{"size":6545,"mtime":1626188103811,"results":"122","hashOfConfig":"73"},{"size":7157,"mtime":1633962091151,"results":"123","hashOfConfig":"73"},{"size":6027,"mtime":1626195319934,"results":"124","hashOfConfig":"73"},{"size":3800,"mtime":1626195599178,"results":"125","hashOfConfig":"73"},{"size":47086,"mtime":1633282404557,"results":"126","hashOfConfig":"73"},{"size":7673,"mtime":1626459418681,"results":"127","hashOfConfig":"73"},{"size":8348,"mtime":1628692010077,"results":"128","hashOfConfig":"73"},{"size":10575,"mtime":1633281929709,"results":"129","hashOfConfig":"73"},{"size":880,"mtime":1628946750939,"results":"130","hashOfConfig":"73"},{"size":1437,"mtime":1628946734060,"results":"131","hashOfConfig":"73"},{"size":7947,"mtime":1633962810682,"results":"132","hashOfConfig":"73"},{"size":4729,"mtime":1630862414555,"results":"133","hashOfConfig":"73"},{"size":5394,"mtime":1632759852219,"results":"134","hashOfConfig":"73"},{"size":4305,"mtime":1629017697881,"results":"135","hashOfConfig":"73"},{"size":2036,"mtime":1632587774767,"results":"136","hashOfConfig":"73"},{"size":5052,"mtime":1630223764672,"results":"137","hashOfConfig":"73"},{"size":4714,"mtime":1630214595028,"results":"138","hashOfConfig":"73"},{"size":7021,"mtime":1632590954679,"results":"139","hashOfConfig":"73"},{"size":1241,"mtime":1632538664281,"results":"140","hashOfConfig":"73"},{"size":1356,"mtime":1630253783055,"results":"141","hashOfConfig":"73"},{"size":799,"mtime":1630751442353,"results":"142","hashOfConfig":"73"},{"size":6353,"mtime":1633961963184,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1epqyat",{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"149"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"149"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"204"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"158"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"149"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"158"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"149"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"158"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"149"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"149"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"149"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"158"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"158"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"204"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"158"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"158"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\index.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\useChat.js",["318","319","320","321","322","323","324"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFullScreen } from \"react-browser-hooks\";\r\n\r\n\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport { toastOnError } from \"./utils/Utils\";\r\n\r\nconst USER_JOIN_CHAT_EVENT = \"USER_JOIN_CHAT_EVENT\";\r\nconst USER_LEAVE_CHAT_EVENT = \"USER_LEAVE_CHAT_EVENT\";\r\nconst NEW_CHAT_MESSAGE_EVENT = \"NEW_CHAT_MESSAGE_EVENT\";\r\nconst START_TYPING_MESSAGE_EVENT = \"START_TYPING_MESSAGE_EVENT\";\r\nconst STOP_TYPING_MESSAGE_EVENT = \"STOP_TYPING_MESSAGE_EVENT\";\r\nconst JITSI_MUTE_ALL = \"JITSI_MUTE_ALL\";\r\nconst JITSI_MUTE_ONE = \"JITSI_MUTE_ONE\";\r\nconst JITSI_FULL_DESKTOP = \"JITSI_FULL_DESKTOP\";\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nconst useChat = (roomId) => {\r\n  const user_auth = useSelector((state) => state.auth);\r\n  const [messages, setMessages] = useState([]);\r\n  const [fullDesktop, setFullDesktop] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [user, setUser] = useState();\r\n  const socketRef = useRef();\r\n  // console.log(user_auth.user.username)\r\n  const { toggle, fullScreen } = useFullScreen();\r\n  // console.log(fullDesktop)\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      setUser({\r\n            name: user_auth.user.username,\r\n            picture: \"assets/images/avatars/user.jpg\",\r\n          });\r\n    // axios\r\n    // .get(\"/api/v1/users/me/\")\r\n    // .then(response => {\r\n    //   setUser({\r\n    //     name: response.data.username,\r\n    //     picture: \"assets/images/avatars/user.jpg\",\r\n    //   });\r\n    // })\r\n    // .catch(error => {\r\n    //   toastOnError(error);\r\n    // });\r\n    \r\n  };\r\n\r\n    fetchUser();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const response = await axios.get(\r\n        `${SOCKET_SERVER_URL}/rooms/${roomId}/users`\r\n      );\r\n      const result = response.data.users;\r\n      setUsers(result);\r\n    };\r\n\r\n    fetchUsers();\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      const response = await axios.get(\r\n        `${SOCKET_SERVER_URL}/rooms/${roomId}/messages`\r\n      );\r\n      const result = response.data.messages;\r\n      setMessages(result);\r\n    };\r\n\r\n    fetchMessages();\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      return;\r\n    }\r\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n      query: { roomId, name: user.name, picture: user.picture },\r\n    });\r\n\r\n    socketRef.current.on(\"connect\", () => {\r\n      console.log(socketRef.current.id);\r\n    });\r\n\r\n    socketRef.current.on(USER_JOIN_CHAT_EVENT, (user) => {\r\n      if (user.id === socketRef.current.id) return;\r\n      setUsers((users) => [...users, user]);\r\n    });\r\n\r\n    socketRef.current.on(USER_LEAVE_CHAT_EVENT, (user) => {\r\n      setUsers((users) => users.filter((u) => u.id !== user.id));\r\n    });\r\n\r\n    socketRef.current.on(JITSI_FULL_DESKTOP, (data) => {\r\n        setFullDesktop(data.fullScreen)\r\n    });\r\n    \r\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n      const incomingMessage = {\r\n        ...message,\r\n        ownedByCurrentUser: message.senderId === socketRef.current.id,\r\n      };\r\n      setMessages((messages) => [...messages, incomingMessage]);\r\n    });\r\n\r\n    socketRef.current.on(START_TYPING_MESSAGE_EVENT, (typingInfo) => {\r\n      if (typingInfo.senderId !== socketRef.current.id) {\r\n        const user = typingInfo.user;\r\n        setTypingUsers((users) => [...users, user]);\r\n      }\r\n    });\r\n\r\n    socketRef.current.on(STOP_TYPING_MESSAGE_EVENT, (typingInfo) => {\r\n      if (typingInfo.senderId !== socketRef.current.id) {\r\n        const user = typingInfo.user;\r\n        setTypingUsers((users) => users.filter((u) => u.name !== user.name));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [roomId, user]);\r\n\r\n  const sendFullDesktop = (fullScreen) => {\r\n    if (!socketRef.current) return;\r\n    socketRef.current.emit(JITSI_FULL_DESKTOP, {\r\n      senderId: socketRef.current.id,\r\n      // user,\r\n      fullScreen,\r\n    });\r\n  };\r\n\r\n\r\n  const sendMessage = (messageBody) => {\r\n    if (!socketRef.current) return;\r\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n      body: messageBody,\r\n      senderId: socketRef.current.id,\r\n      user: user,\r\n    });\r\n  };\r\n\r\n  const startTypingMessage = () => {\r\n    if (!socketRef.current) return;\r\n    socketRef.current.emit(START_TYPING_MESSAGE_EVENT, {\r\n      senderId: socketRef.current.id,\r\n      user,\r\n    });\r\n  };\r\n\r\n  const stopTypingMessage = () => {\r\n    if (!socketRef.current) return;\r\n    socketRef.current.emit(STOP_TYPING_MESSAGE_EVENT, {\r\n      senderId: socketRef.current.id,\r\n      user,\r\n    });\r\n  };\r\n\r\n  return {\r\n    messages,\r\n    user,\r\n    users,\r\n    typingUsers,\r\n    fullDesktop,\r\n    sendFullDesktop,\r\n    sendMessage,\r\n    startTypingMessage,\r\n    stopTypingMessage,\r\n  };\r\n};\r\n\r\nexport default useChat;\r\n",["325","326"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\App.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\login\\Login.js",["327","328","329","330","331"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\Reducer.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\signup\\SignupReducer.js",[],["332","333"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\signup\\SignupTypes.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\Root.js",[],["334","335"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\signup\\Signup.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\Dashboard.js",["336","337","338","339","340","341","342","343"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\login\\LoginTypes.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\signup\\SignupActions.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\login\\LoginReducer.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\utils\\Utils.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\login\\LoginActions.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\utils\\RequireAuth.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\useJitsi.js",["344","345"],"import { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useJitsi = ({\r\n  domain = 'localhost:8443',\r\n  parentNode,\r\n  subject,\r\n  password,\r\n  displayName,\r\n  onMeetingEnd,\r\n  ...options\r\n}) => {\r\n\r\n\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  const [jitsi, setJitsi] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!window.JitsiMeetExternalAPI) {\r\n      setError('JitsiMeetExternalAPI is not available, check if https://meet.jit.si/external_api.js was loaded')\r\n      return\r\n    }\r\n\r\n    options.parentNode = document.getElementById(parentNode)\r\n    if (!options.parentNode) {\r\n      setError(`Parent node is not available, check container have the correct id: \"${parentNode}\"`)\r\n      return\r\n    }\r\n\r\n    const client = new window.JitsiMeetExternalAPI(domain, {...options})\r\n    setJitsi(client)\r\n    setLoading(false)\r\n    setError(null)\r\n\r\n    subject && client.executeCommand('subject', subject)\r\n\r\n    client.addEventListener('videoConferenceJoined', () => {\r\n      password && client.executeCommand('password', password)\r\n      displayName && client.executeCommand('displayName', displayName)\r\n    })\r\n\r\n    client.addEventListener('passwordRequired', () => {\r\n      password && client.executeCommand('password', password)\r\n    })\r\n    onMeetingEnd && client.addEventListener('readyToClose', onMeetingEnd)\r\n\r\n    return () => jitsi && jitsi.dispose()\r\n  }, [window.JitsiMeetExternalAPI])\r\n\r\n  return {jitsi, error, loading}\r\n}\r\n\r\nuseJitsi.propTypes = {\r\n  options: PropTypes.shape({\r\n    domain: PropTypes.string,\r\n    roomName: PropTypes.string.isRequired,\r\n    subject: PropTypes.string,\r\n    password: PropTypes.string,\r\n    displayName: PropTypes.string,\r\n    onMeetingEnd: PropTypes.func,\r\n    width: PropTypes.string,\r\n    height: PropTypes.string,\r\n    parentNode: PropTypes.string,\r\n    configOverwrite: PropTypes.object,\r\n    interfaceConfigOverwrite: PropTypes.object,\r\n    noSSL: PropTypes.bool,\r\n    jwt: PropTypes.string,\r\n    onload: PropTypes.func,\r\n    invitees: PropTypes.array,\r\n    devices: PropTypes.object,\r\n    userInfo: PropTypes.object\r\n  })\r\n}\r\n\r\nexport default useJitsi",["346","347"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JisiReducer.js",["348"],"import moment from 'moment';\r\n\r\nimport { TOGGLE_AUDIO_ALL, TOGGLE_AUDIO, SET_JITSI_STORE, TOGGLE_VIDEO_ALL, TOGGLE_FULL_ALL, GET_MEET_ROOM } from \"./JitsiTypes\";\r\n\r\nconst initialState = {\r\n  jitsiState: {\r\n    stateAudioAll: false,\r\n    stateVideoAll: false,\r\n    stateFullAll: false,\r\n    stateTileViewAll: false,\r\n    stateAudio: false,\r\n    stateCamera: false,\r\n    stateChat: false,\r\n    stateCameraMirror: false,\r\n    stateTileView: false,\r\n    stateFull: false,\r\n    stateRaiseHand: false,\r\n    stateFilmStrip: false,\r\n  },\r\n  jitsiStrore: {},\r\n  meetroom: {}\r\n};\r\n\r\nexport const jitsiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_JITSI_STORE:\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        jitsiStrore: action.payload\r\n      };\r\n    case TOGGLE_AUDIO_ALL:\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        stateAudioAll: action.payload\r\n      };\r\n    case TOGGLE_AUDIO:\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        stateAudio: action.payload\r\n      };\r\n\r\n    case TOGGLE_VIDEO_ALL:\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        stateVideoAll: action.payload\r\n      };\r\n    case TOGGLE_FULL_ALL:\r\n      // console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        stateFullAll: action.payload\r\n      };\r\n      case GET_MEET_ROOM:\r\n        return {\r\n          ...state,\r\n          meetroom: action.payload\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiActions.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiTypes.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiMeet.js",["349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter, useHistory, useParams } from \"react-router-dom\";\r\nimport { useFullScreen } from \"react-browser-hooks\";\r\nimport { setJitsiStore } from \"../jitsi/JitsiActions\"\r\n\r\nimport ProgressComponent from '@material-ui/core/CircularProgress';\r\n\r\nimport socketIOClient from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n// import { toastOnError } from \"../../utils/Utils\";\r\nimport UserList from \"../chat/UserList\";\r\nimport ControlList from \"./ControlList\";\r\nimport { logout } from \"../login/LoginActions\";\r\nimport { getMeetRoom } from \"./JitsiActions\"\r\n\r\nconst USER_JOIN_CHAT_EVENT = \"USER_JOIN_CHAT_EVENT\";\r\nconst USER_LEAVE_CHAT_EVENT = \"USER_LEAVE_CHAT_EVENT\";\r\nconst JITSI_AUDIO_ALL = \"JITSI_AUDIO_ALL\";\r\nconst JITSI_AUDIO_ONE = \"JITSI_AUDIO_ONE\";\r\nconst SVR_JITSI_AUDIO_ONE = \"SVR_JITSI_AUDIO_ONE\";\r\nconst JITSI_VIDEO_ALL = \"JITSI_VIDEO_ALL\";\r\nconst JITSI_VIDEO_ONE = \"JITSI_VIDEO_ONE\";\r\nconst SVR_JITSI_VIDEO_ONE = \"SVR_JITSI_VIDEO_ONE\";\r\nconst JITSI_FULL_DESKTOP = \"JITSI_FULL_DESKTOP\";\r\nconst JITSI_FULL_ONE = \"JITSI_FULL_ONE\";\r\nconst SVR_JITSI_FULL_ONE = \"SVR_JITSI_FULL_ONE\";\r\nconst JITSI_SHARESCREEN_ONE = \"JITSI_SHARESCREEN_ONE\";\r\nconst SVR_JITSI_SHARESCREEN_ONE = \"SVR_JITSI_SHARESCREEN_ONE\";\r\n\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nconst JitsiMeet = () => {\r\n\r\n    const { Id } = useParams();\r\n    const user_auth = useSelector((state) => state.auth);\r\n    const roomMeet = useSelector(state => state.jitsi.meetroom)\r\n    // console.log(roomMeet)\r\n    const { jitsiState } = useSelector((state) => state.jitsi);\r\n    console.log(user_auth)\r\n    console.log(jitsiState.stateAudio)\r\n    const [stateAudioAll, setStateAudioAll] = useState(false);\r\n    const [stateAudio, setStateAudio] = useState(false);\r\n    const [stateVideoAll, setStateVideoAll] = useState(false);\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [user, setUser] = useState(user_auth.user.last_name + \" \" + user_auth.user.first_name);\r\n    const socketRef = useRef();\r\n    const { toggle, fullScreen } = useFullScreen();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getMeetRoom(Id));\r\n    }, [])\r\n\r\n    const handleLogout = (event) => {\r\n        event.preventDefault();\r\n        dispatch(logout())\r\n    }\r\n\r\n    const domain = 'meet.jit.si';\r\n    let api = {};\r\n    const [room, setRoom] = useState(\"CNTTQK7\");\r\n    const [isAudioMuted, setIsAudioMuted] = useState(false);\r\n    const [isVideoMuted, setIsVideoMuted] = useState(false);\r\n    const [isTileView, setIsTileView] = useState(false);\r\n    const [dominantSpeaker, setDominantSpeaker] = useState();\r\n    const [displayName2, setDisplayName2] = useState();\r\n    const [participants, setParticipants] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n\r\n    const jitsiContainerStyle = {\r\n        display: (loading ? 'none' : 'block'),\r\n        width: '100%',\r\n        height: '100%',\r\n    }\r\n\r\n    const startMeet = () => {\r\n        const options = {\r\n            roomName: Id,\r\n            width: '100%',\r\n            height: \"100%\",\r\n            configOverwrite: { prejoinPageEnabled: false },\r\n            interfaceConfigOverwrite: {\r\n                // overwrite interface properties\r\n                filmStripOnly: false,\r\n                SHOW_JITSI_WATERMARK: false,\r\n                SHOW_WATERMARK_FOR_GUESTS: false,\r\n                DISABLE_DOMINANT_SPEAKER_INDICATOR: true,\r\n                TILE_VIEW_MAX_COLUMNS: 2,\r\n                TOOLBAR_BUTTONS: ['microphone', 'camera', 'chat', 'hangup', 'fullscreen', 'tileview', 'desktop', 'sharedvideo'],\r\n                // TOOLBAR_BUTTONS: [\r\n                //     'microphone', 'camera', 'desktop', 'embedmeeting', 'fullscreen', 'fodeviceselection', 'hangup', 'profile', 'chat', 'recording',\r\n                //     'livestreaming', 'etherpad', 'sharedvideo', 'settings', 'raisehand', 'videoquality', 'filmstrip', 'invite', 'feedback', 'stats', 'shortcuts',\r\n                //     'tileview', 'videobackgroundblur', 'download', 'help', 'mute-everyone', 'security'\r\n                // ],\r\n            },\r\n            parentNode: document.querySelector('#jitsi-iframe'),\r\n            userInfo: {\r\n                displayName: user,\r\n            }\r\n        }\r\n        api = new window.JitsiMeetExternalAPI(domain, options);\r\n        api.addEventListener('videoConferenceJoined', () => {\r\n            // console.log('Local User Joined');\r\n            setLoading(false);\r\n        });\r\n        api.addEventListeners({\r\n            readyToClose: handleClose,\r\n            participantLeft: handleParticipantLeft,\r\n            participantJoined: handleParticipantJoined,\r\n            videoConferenceJoined: handleVideoConferenceJoined,\r\n            videoConferenceLeft: handleVideoConferenceLeft,\r\n            audioMuteStatusChanged: handleMuteStatus,\r\n            videoMuteStatusChanged: handleVideoStatus,\r\n            tileViewChanged: handleTileViewStatus,\r\n            // displayNameChange: handleDisplayName,\r\n            dominantSpeakerChanged: handleDominantSpeaker,\r\n        });\r\n        api.executeCommand('subject', roomMeet.Subject);\r\n        api.executeCommand('setLargeVideoParticipant', 'abcd1234');\r\n        api.executeCommand('avatarUrl', 'assets/images/avatars/user.jpg');\r\n        // console(api.getNumberOfParticipants())\r\n\r\n\r\n        dispatch(setJitsiStore(api));\r\n    }\r\n\r\n    const handleClose = () => {\r\n        console.log(\"handleClose\");\r\n    }\r\n    const handleParticipantLeft = async (participant) => {\r\n        console.log(\"handleParticipantLeft\", participant); // { id: \"2baa184e\" }\r\n        const data = await getParticipants();\r\n    }\r\n    const handleParticipantJoined = async (participant) => {\r\n        console.log(\"handleParticipantJoined\", participant); // { id: \"2baa184e\", displayName: \"Shanu Verma\", formattedDisplayName: \"Shanu Verma\" }\r\n        const data = await getParticipants();\r\n        setParticipants(data)\r\n\r\n    }\r\n    console.log(participants)\r\n\r\n    const handleVideoConferenceJoined = async (participant) => {\r\n        console.log(\"handleVideoConferenceJoined\", participant); // { roomName: \"bwb-bfqi-vmh\", id: \"8c35a951\", displayName: \"Akash Verma\", formattedDisplayName: \"Akash Verma (me)\"}\r\n        const data = await getParticipants();\r\n    }\r\n    const handleVideoConferenceLeft = () => {\r\n        // console.log(\"handleVideoConferenceLeft\");\r\n        return history.push('/');\r\n    }\r\n\r\n    const handleMuteStatus = (muted) => {\r\n        // console.log(\"handleMuteStatus\", muted); // { muted: true } \r\n        // console.log(muted); // { muted: true } \r\n        setIsAudioMuted(muted.muted)\r\n    }\r\n    console.log(isAudioMuted)\r\n\r\n    const handleVideoStatus = (video) => {\r\n        // console.log(\"handleVideoStatus\", video); // { muted: true }\r\n        setIsVideoMuted(video.muted)\r\n    }\r\n    console.log(isVideoMuted)\r\n\r\n    const handleTileViewStatus = (tileview) => {\r\n        console.log(\"handleTileViewStatus\", tileview); // { muted: true }\r\n        setIsTileView(tileview.enabled)\r\n    }\r\n    // console.log(isTileView)\r\n\r\n    // const handleDisplayName = ({id, displayname}) => {\r\n    //     console.log(\"handleDisplayName\", {id, displayname}); \r\n    //     setDisplayName2({id, displayname})\r\n    // }\r\n    const handleDominantSpeaker = (speaker) => {\r\n        console.log(\"handleDominantSpeaker\", speaker);\r\n        setDominantSpeaker(speaker.id)\r\n        const dispName = api.getDisplayName(speaker.id)\r\n        setDisplayName2(dispName)\r\n        console.log(dispName)\r\n\r\n    }\r\n    // console.log(dominantSpeaker)\r\n    // console.log(displayName2)\r\n\r\n    const getParticipants = () => {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve(api.getParticipantsInfo()); // get all participants\r\n            }, 500)\r\n        });\r\n    }\r\n\r\n    // custom events\r\n\r\n    const executeCommand = (e) => {\r\n        e.preventDefault();\r\n        api.executeCommand('muteEveryone');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window.JitsiMeetExternalAPI) {\r\n            startMeet();\r\n        } else {\r\n            alert('JitsiMeetExternalAPI not loaded');\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            const response = await axios.get(\r\n                `${SOCKET_SERVER_URL}/rooms/${Id}/users`\r\n            );\r\n            const result = response.data.users;\r\n            setUsers(result);\r\n        };\r\n\r\n        fetchUsers();\r\n    }, [Id]);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            return;\r\n        }\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n            query: { Id, name: user, picture: \"user.picture\" },\r\n        });\r\n\r\n        socketRef.current.on(\"connect\", () => {\r\n            console.log(socketRef.current.id);\r\n        });\r\n\r\n        socketRef.current.on(USER_JOIN_CHAT_EVENT, (user) => {\r\n            if (user.id === socketRef.current.id) return;\r\n            setUsers((users) => [...users, user]);\r\n        });\r\n\r\n        socketRef.current.on(USER_LEAVE_CHAT_EVENT, (user) => {\r\n            setUsers((users) => users.filter((u) => u.id !== user.id));\r\n        });\r\n\r\n        socketRef.current.on(JITSI_FULL_DESKTOP, (data) => {\r\n            // dispatch(setFullAll(data.fullScreen));\r\n            // api.executeCommand('toggleTileView');\r\n        });\r\n\r\n        socketRef.current.on(SVR_JITSI_FULL_ONE, (data) => {\r\n            // dispatch(setFullAll(data.fullScreen));\r\n            console.log(data)\r\n            // toggle()\r\n        });\r\n\r\n        socketRef.current.on(SVR_JITSI_SHARESCREEN_ONE, (data) => {\r\n            api.executeCommand('toggleShareScreen');\r\n        });\r\n\r\n        socketRef.current.on(JITSI_AUDIO_ALL, (data) => {\r\n            api.executeCommand('muteEveryone');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_AUDIO_ONE, (data) => {\r\n            console.log(data)\r\n            api.executeCommand('toggleAudio');\r\n            setStateAudio(data.stateAudio)\r\n        });\r\n\r\n        socketRef.current.on(JITSI_VIDEO_ALL, (data) => {\r\n            api.executeCommand('toggleVideo')\r\n        });\r\n        socketRef.current.on(SVR_JITSI_VIDEO_ONE, (data) => {\r\n            api.executeCommand('toggleVideo');\r\n        });\r\n\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n        };\r\n    }, [Id, user]);\r\n\r\n    // const handleAudioJitsi = (event) => {\r\n    //     event.preventDefault();\r\n    //     // setAudioAllJitsi(!audioAllJitsi)\r\n    //     if (!socketRef.current) return;\r\n    //     socketRef.current.emit(JITSI_AUDIO_ALL, {\r\n    //         senderId: socketRef.current.id,\r\n    //     });\r\n\r\n    // }\r\n\r\n    // const handleVideoJitsi = (event) => {\r\n    //     event.preventDefault();\r\n    //     if (!socketRef.current) return;\r\n    //     socketRef.current.emit(JITSI_VIDEO_ALL, {\r\n    //         senderId: socketRef.current.id,\r\n    //     });\r\n    // }\r\n\r\n    // const handleFullDesktop = (event) => {\r\n    //     // event.preventDefault();\r\n    //     // toggle()\r\n    //     if (!socketRef.current) return;\r\n    //     socketRef.current.emit(JITSI_FULL_DESKTOP, {\r\n    //         senderId: socketRef.current.id,\r\n    //     });\r\n    // };\r\n\r\n    const handleShareScreenJitsi = (event) => {\r\n        // event.preventDefault();\r\n        // toggle()\r\n        if (!socketRef.current) return;\r\n        socketRef.current.emit(JITSI_SHARESCREEN_ONE, {\r\n            senderId: socketRef.current.id,\r\n        });\r\n    };\r\n\r\n\r\n    const audioClick = (id) => {\r\n        if (audioClick) {\r\n            if (!socketRef.current) return;\r\n            socketRef.current.emit(JITSI_AUDIO_ONE, {\r\n                id,\r\n                stateAudio: !stateAudio,\r\n                // senderId: socketRef.current.id,\r\n            });\r\n            console.log(stateAudio)\r\n        }\r\n    }\r\n\r\n    const cameraClick = (id) => {\r\n        if (cameraClick) {\r\n            if (!socketRef.current) return;\r\n            socketRef.current.emit(JITSI_VIDEO_ONE, {\r\n                id,\r\n            })\r\n        }\r\n    }\r\n\r\n    const fullClick2 = (id) => {\r\n        if (fullClick2) {\r\n            if (!socketRef.current) return;\r\n            socketRef.current.emit(JITSI_FULL_ONE, {\r\n                id,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container ace-save-state\" id=\"main-container\">\r\n            {/* <div id=\"sidebar\" className=\"sidebar responsive  ace-save-state sidebar-fixed sidebar-scroll\" style={{ marginLeft: \"0px\", width: \"16%\", height: \"100%\", borderLeft: \"solid 1px\", borderLeftColor: \"#2E6589\" }}> */}\r\n            {user_auth.user.is_staff &&\r\n                <div id=\"sidebar\" className=\"sidebar                  responsive                    ace-save-state sidebar-fixed sidebar-scroll\" data-sidebar=\"true\" data-sidebar-scroll=\"true\" data-sidebar-hover=\"true\">\r\n                    {/* /.sidebar-shortcuts */}\r\n                    <div className=\"nav-wrap-up pos-rel\">\r\n                        <div className=\"nav-wrap\" style={{ maxHeight: \"100%\" }}>\r\n                            <ul className=\"nav ace-nav\" >\r\n                                <li className=\"light-blue dropdown-modal\" style={{ width: \"100%\" }}>\r\n                                    <a data-toggle=\"dropdown\" href=\"#\" className=\"dropdown-toggle\" style={{ marginLeft: \"-7px\" }}>\r\n                                        <img className=\"nav-user-photo\" src=\"assets/images/avatars/user.jpg\" alt=\"Jason's Photo\" />\r\n                                        <span className=\"user-info\"><small>Chào,</small>{user_auth.user.last_name} {user_auth.user.first_name}</span>\r\n                                        <i className=\"ace-icon fa fa-caret-down\" />\r\n                                    </a>\r\n                                    <ul className=\"user-menu dropdown-menu-right dropdown-menu dropdown-yellow dropdown-caret dropdown-close\">\r\n                                        <li>\r\n                                            <a href=\"/dashboard\"><i className=\"ace-icon fa fa-cog\" />Về trang chủ </a>\r\n                                        </li>\r\n                                        <li className=\"divider\" />\r\n                                        {/* <li onClick={this.onLogout}> */}\r\n                                        <li onClick={handleLogout}>\r\n                                            <a><i className=\"ace-icon fa fa-power-off\" />Đăng xuất</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                            <div style={{ position: 'relative', top: '0px', transitionProperty: 'top', transitionDuration: '0.15s' }}><div className=\"sidebar-shortcuts\" id=\"sidebar-shortcuts\">\r\n                                <div className=\"sidebar-shortcuts-large\" id=\"sidebar-shortcuts-large\">\r\n                                    <span className=\"menu-text\">Điều khiển hệ thống </span>\r\n                                    <ControlList isAudioMuted={isAudioMuted} isVideoMuted={isVideoMuted} isTileView={isTileView} />\r\n                                </div>\r\n                                <div className=\"sidebar-shortcuts-mini\" id=\"sidebar-shortcuts-mini\">\r\n                                    <ControlList isAudioMuted={isAudioMuted} isVideoMuted={isVideoMuted} isTileView={isTileView} />\r\n                                </div>\r\n                            </div>\r\n\r\n                                <br />\r\n                                <ul className=\"nav nav-list\">\r\n                                    <UserList users={users} audioClick={audioClick} cameraClick={cameraClick} fullClick={fullClick2} stateAudio={stateAudio}></UserList>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ace-scroll nav-scroll\">\r\n                            <div className=\"scroll-track scroll-active\" style={{ display: 'block', height: 252 }}>\r\n                                <div className=\"scroll-bar\" style={{ height: 159, top: 60, transitionProperty: 'top', transitionDuration: '0.1s' }} />\r\n                            </div>\r\n                            <div className=\"scroll-content\" style={{ maxHeight: 252 }}><div style={{ height: 400, width: 8 }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sidebar-toggle sidebar-collapse\" id=\"sidebar-collapse\">\r\n                        <i id=\"sidebar-toggle-icon\" className=\"ace-icon fa fa-angle-double-left ace-save-state\" data-icon1=\"ace-icon fa fa-angle-double-left\" data-icon2=\"ace-icon fa fa-angle-double-right\" />\r\n                    </div>\r\n                </div>\r\n            }\r\n            {roomMeet &&\r\n                <div className=\"main-content\">\r\n                    <div className=\"main-content-inner\" >\r\n                        {/* { (user_auth.user.rules == \"1\" || user_auth.user.rules == \"0\") && ( */}\r\n                        <div style={{ display: 'flex', height: '100vh', marginRight: '0px', overflow: 'scroll initial' }} >\r\n                            {loading && <ProgressComponent style={{ marginLeft: '45%', marginTop: '25%', width: \"100px\", height: \"100px\" }} />}\r\n                            <div style={{ position: 'fixed', marginLeft: '45%', marginTop: '3%', fontSize: \"18px\", color: \"blue\", fontWeight: \"bold\", backgroundColor: \"white\" }}>{displayName2}</div>\r\n                            <div id=\"jitsi-iframe\" style={jitsiContainerStyle} >\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div >\r\n\r\n    );\r\n};\r\n\r\nexport default withRouter(JitsiMeet);\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\ControlList.js",["370","371","372","373","374","375","376","377","378"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setJitsiStore, setAudioAll, setAudio, setVideoAll, setFullAll } from \"../jitsi/JitsiActions\"\r\n\r\nimport { useFullScreen } from \"react-browser-hooks\";\r\n\r\nconst ControlList = (props) => {\r\n    const {isAudioMuted, isVideoMuted, isTileView} = props\r\n\r\n    const apiStore = useSelector((state) => state.jitsi);\r\n    const jitsiState = useSelector((state) => state.jitsi);\r\n    const api = apiStore.jitsiStrore;\r\n    const [stateAudio, setStateAudio] = useState(jitsiState.stateAudio)\r\n    const [stateCamera, setStateCamera] = useState(true)\r\n    const [stateShare, setStateShare] = useState(true)\r\n    const [stateChat, setStateChat] = useState(true)\r\n    const [stateCameraMirror, setStateCameraMirror] = useState(true)\r\n    const [stateTileView, setStateTileView] = useState(true)\r\n    const [stateFull, setStateFull] = useState(true)\r\n    const [stateRaiseHand, setStateRaiseHand] = useState(true)\r\n    const [stateFilmStrip, setStateFilmStrip] = useState(true)\r\n\r\n    const [fullDesktop, setFullDesktop] = useState(false)\r\n    const [numberOfParticipants, setNumberOfParticipants] = useState()\r\n    const dispatch = useDispatch();\r\n\r\n    // useEffect(()=>{\r\n    //     // const numberOfParticipants = api.getNumberOfParticipants();\r\n    //     // setNumberOfParticipants(numberOfParticipants)\r\n    //     const infoMy = api.getParticipantsInfo()\r\n    //     console.log(infoMy)\r\n    //     console.log(infoMy[0].participantId)\r\n    // }, [api])\r\n\r\n\r\n    const { toggle, fullScreen } = useFullScreen();\r\n    const handleFullDesktop = () => {\r\n        toggle();\r\n        setFullDesktop(!fullDesktop);\r\n    }\r\n    const audioOneClick = () => {\r\n        api.executeCommand('toggleAudio');\r\n        // api.executeCommand('toggleFilmStrip');//An hien khung anh doc\r\n        // api.executeCommand('setLargeVideoParticipant', 'abcd1234');\r\n        // api.executeCommand('setVideoQuality', 1080);\r\n        // api.executeCommand('muteEveryone');\r\n        // api.dispose();\r\n        // api.executeCommand('avatarUrl', 'https://avatars0.githubusercontent.com/u/3671647');\r\n        // api.executeCommand('sendTones', {\r\n        //     tones: '12345#', // The dial pad touch tones to play. For example, '12345#'.\r\n        //     duration: 200, // Optional. The number of milliseconds each tone should play. The default is 200.\r\n        //     pause: 200 // Optional. The number of milliseconds between each tone. The default is 200.\r\n        // });\r\n        setStateAudio(!stateAudio)\r\n        dispatch(setAudio(!jitsiState.stateAudio))\r\n        console.log(jitsiState.stateAudio)\r\n    }\r\n    const videoOneClick = () => {\r\n        api.executeCommand('toggleVideo');\r\n        setStateCamera(!stateCamera)\r\n    }\r\n    const shareScreenClick = () => {\r\n        api.executeCommand('toggleShareScreen');\r\n        setStateShare(!stateShare)\r\n    }\r\n    const chatClick = () => {\r\n        api.executeCommand('toggleChat');\r\n        setStateChat(!stateChat)\r\n    }\r\n    const cameraMirrorClick = () => {\r\n        api.executeCommand('toggleCameraMirror');\r\n        // room.setLocalParticipantProperty('raised-hand', true)\r\n        setStateCameraMirror(!stateCameraMirror)\r\n    }\r\n    const tileViewClick = () => {\r\n        api.executeCommand('toggleTileView');\r\n        setStateTileView(!stateTileView)\r\n    }\r\n    const filmStripClick = () => {\r\n        api.executeCommand('toggleFilmStrip');\r\n        setStateFilmStrip(!stateFilmStrip)\r\n    }\r\n\r\n\r\n\r\n\r\n    const raiseHandClick = () => {\r\n        // const infoMy = api.getParticipantsInfo()\r\n        // console.log(infoMy)\r\n        // console.log(infoMy[0].participantId)\r\n        // const numberOfParticipants = api.getNumberOfParticipants();\r\n        // console.log(numberOfParticipants)\r\n        // api.addEventListener(\r\n        //     {\r\n        //         id: infoMy[0].participantId,         \r\n        //         handRaised: true // whether hand raised or lowered\r\n        //     }\r\n        //   );\r\n        //   console.log(handleParticipantLeft())\r\n        api.executeCommand('toggleRaiseHand');\r\n        setStateRaiseHand(!stateRaiseHand)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"navbar-buttons navbar-header \" role=\"navigation\" style={{ marginTop: '10px', textAlign: \"center\" }}>\r\n            <div className=\"pull-right action-buttons\">\r\n                <button className=\"blue\" onClick={audioOneClick} title=\"Tắt/Mở Micro\">\r\n                    {/* {jitsiState.stateAudioAll ? (<i className=\"ace-icon fa fa-microphone green bigger-160\" />) : (<i className=\"ace-icon fa fa-microphone-slash red bigger-160\" />)} */}\r\n                    {!isAudioMuted ? (<i className=\"ace-icon fa fa-microphone green bigger-160\" />) : (<i className=\"ace-icon fa fa-microphone-slash red bigger-160\" />)}\r\n                </button>\r\n                <span className=\"vbar\" />\r\n                <button className=\"blue\" onClick={videoOneClick} title=\"Tắt/Mở Camera\">\r\n                    {/* {stateCamera ? (<i className=\"ace-icon fa fa-video-camera green bigger-160\" />) : (<i className=\"ace-icon fa fa-file-movie-o red bigger-160\" />)} */}\r\n                    {!isVideoMuted ? (<i className=\"ace-icon fa fa-video-camera green bigger-160\" />) : (<i className=\"ace-icon fa fa-file-movie-o red bigger-160\" />)}\r\n                </button>\r\n                <button className=\"blue\" onClick={shareScreenClick} title=\"Chia sẻ màn hình\">\r\n                    {stateShare ? (<i className=\"ace-icon fa fa-share-square-o green bigger-160\" />) : (<i className=\"ace-icon fa fa-share-square red bigger-160\" />)}\r\n                </button>\r\n\r\n                <button className=\"blue\" onClick={chatClick} title=\"Trao đổi thông tin\">\r\n                    {stateChat ? (<i className=\"ace-icon fa  fa-comments-o  green bigger-160\" />) : (<i className=\"ace-icon fa fa-comments-o red bigger-160\" />)}\r\n\r\n                </button>\r\n                <button className=\"blue\" onClick={raiseHandClick} title=\"Đăng ký phát biểu\">\r\n                    {stateRaiseHand ? (<i className=\"ace-icon fa fa-hand-paper-o  green bigger-160\" />) : (<i className=\"ace-icon fa fa-hand-rock-o red bigger-160\" />)}\r\n                </button>\r\n                <button className=\"blue\" onClick={tileViewClick} title=\"Thay đổi giao diện hình ảnh\">\r\n                    {!isTileView ? (<i className=\"ace-icon fa fa-th-large green bigger-160\" />) : (<i className=\"ace-icon fa fa-desktop red bigger-160\" />)}\r\n\r\n                </button>\r\n                <button className=\"blue\" onClick={handleFullDesktop} title=\"Phóng to/Thu nhỏ màn hình\">\r\n                    {/* <i className=\"ace-icon fa fa-external-link-square fa fa-film green bigger-160\" /> */}\r\n                    {!fullDesktop ? (<i className=\"ace-icon fa fa-arrows-alt green bigger-160\" />) : (<i className=\"ace-icon fa fa-compress red bigger-160\" />)}\r\n\r\n                </button>\r\n                <button className=\"blue\" onClick={cameraMirrorClick} title=\"Lật hình ảnh Camera\">\r\n                    {stateCameraMirror ? (<i className=\"ace-icon fa fa-exchange  green bigger-160\" />) : (<i className=\"ace-icon fa fa-file-image-o red bigger-160\" />)}\r\n\r\n                </button>\r\n                <button className=\"blue\" onClick={filmStripClick} title=\"Hiển thị/Tắt hiển thị hình ảnh các thành viên\">\r\n                    {stateFilmStrip ? (<i className=\"ace-icon fa fa-film  green bigger-160\" />) : (<i className=\"ace-icon fa fa-film red bigger-160\" />)}\r\n\r\n                </button>\r\n                {(numberOfParticipants) && (\r\n                    <button className=\"blue\" title=\"Hiển thị/Tắt hiển thị hình ảnh các thành viên\">\r\n                        <i className=\"ace-icon fa fa-group green bigger-160\" />\r\n\r\n                        &nbsp;&nbsp; {numberOfParticipants}\r\n                    </button>\r\n                )}\r\n\r\n                <button className=\"blue\" title=\"Kết thúc cuộc họp tất cả\">\r\n                    <i className=\"ace-icon fa fa-power-off  bigger-160 green\"></i>\r\n                </button>\r\n\r\n\r\n            </div>\r\n            {/* <button href=\"/\"><span className=\"badge badge-important\">Trang chủ</span></button>\r\n                  <span className=\"badge badge-important\"><a className=\"dropdown-toggle\" href=\"/\"></a>Trang chủ</span> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ControlList;\r\n",["379","380"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarTypes.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarActions.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarReducer.js",[],["381","382"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\FormCalendar.js",["383","384","385","386","387","388"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { MultiSelectComponent, DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport Select from \"react-select\";\r\nimport { addCalendar } from \"./CalendarActions\";\r\n\r\nfunction FromCalendar({ eventType2, ownerData }) {\r\n    \r\n    const [selectedOption, setSelectedOption] = useState();\r\n    const [Subject, setSubject] = useState();\r\n    const [EventTypes, setEventTypes] = useState();\r\n    const [StartTime, setStartTime] = useState();\r\n    const [EndTime, setEndTime] = useState();\r\n    const [Location, setLocation] = useState();\r\n    const [Description, setDescription] = useState();\r\n    const [User_rooms, setUser_rooms] = useState([]);\r\n    // const [fields, setFields] = useState({ text: 'OwnerText', value: 'Id' });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = User_rooms => {\r\n        setUser_rooms(User_rooms)\r\n        // var Id_users = Array.isArray(User_room)?User_room.map(x=>x.value):[]\r\n    };\r\n\r\n    const handleChangePro = (EventTypes) => {\r\n        setEventTypes(EventTypes)\r\n    }\r\n\r\n    const addCalendarForm = (event) => {\r\n        event.preventDefault();\r\n        var User_room = Array.isArray(User_rooms) ? User_rooms.map(x => x.value) : []\r\n        var EventType = EventTypes.value\r\n        let calendarAdd = {\r\n            Subject, StartTime, EndTime, EventType, Location, Description, User_room\r\n        }\r\n        dispatch(addCalendar(calendarAdd));\r\n        //clear dataForm\r\n        setSubject(\"\")\r\n        setEventTypes(\"\")\r\n        setStartTime(\"\")\r\n        setEndTime(\"\")\r\n        setLocation(\"\")\r\n        setDescription(\"\")\r\n        setUser_rooms(\"\")\r\n    }\r\n    return (\r\n        <div className=\"widget-box\">\r\n            <div className=\"widget-header\">\r\n                <h4 className=\"widget-title\">Thêm mới cuộc họp</h4>\r\n            </div>\r\n            <div className=\"widget-body\">\r\n                <div className=\"widget-main\">\r\n                    <div className=\"row\">\r\n                        <form>\r\n                            <div className=\"col-sm-12\">\r\n                                <span className=\"bigger-110\">Tiêu đề cuộc họp</span>\r\n                                <input id=\"Summary\" className=\"e-field e-input\" type=\"text\" name=\"Subject\" value={Subject} style={{ width: '100%' }} onChange={e => setSubject(e.target.value)} />\r\n                            </div>\r\n                            <hr />\r\n\r\n                            <div className=\"col-sm-12\">\r\n                                <span className=\"bigger-110\">Thời gian bắt đầu</span>\r\n\r\n                                <DateTimePickerComponent id=\"StartTime\" format='dd/MM/yyyy hh:mm a' data-name=\"StartTime\" className=\"e-field\" value={StartTime} onChange={e => setStartTime(e.target.value)}></DateTimePickerComponent>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"col-sm-12\">\r\n                                <span className=\"bigger-110\">Thời gian kết thúc</span>\r\n\r\n                                <DateTimePickerComponent id=\"StartTime\" format='dd/MM/yyyy hh:mm a' data-name=\"EndTime\" className=\"e-field\" value={EndTime} onChange={e => setEndTime(e.target.value)} ></DateTimePickerComponent>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"col-sm-12\">\r\n                                <span className=\"bigger-110\">Địa điểm</span>\r\n                                <input id=\"Location\" className=\"e-field e-input\" type=\"text\" name=\"Location\" style={{ width: '100%' }} value={Location} onChange={e => setLocation(e.target.value)} />\r\n                            </div>\r\n\r\n                            <hr />\r\n                            <div className=\"col-sm-7\">\r\n                                <span className=\"bigger-110\">Mức độc ưu tiên</span>\r\n                                {/* <DropDownListComponent id=\"EventType\" placeholder='Chọn mức độ mưu tiên' data-name='EventType' className=\"e-field\" style={{ width: '100%' }} dataSource={eventType} fields={fields}  onChange={onChangeType} >\r\n                            </DropDownListComponent> */}\r\n                                <Select\r\n                                    value={EventTypes}\r\n                                    onChange={handleChangePro}\r\n                                    options={eventType2}\r\n                                    placeholder={\"Chọn mức độ mưu tiên\"}\r\n                                />\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"col-sm-12\">\r\n                                <span className=\"bigger-110\">Mô tả cuộc họp</span>\r\n                                <textarea id=\"Description\" className=\"e-field e-input\" name=\"Description\" rows={2} cols={50} style={{ width: '100%', height: '60px !important', resize: 'vertical' }} value={Description} onChange={e => setDescription(e.target.value)}></textarea>\r\n                            </div>\r\n\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"col-sm-12\">\r\n                                <span className=\"bigger-110\">Chọn thành viên</span>\r\n                                {/* <MultiSelectComponent id=\"User_room\" className=\"e-field\" placeholder='Chọn thành viên tham gia' data-name=\"User_room\" dataSource={ownerData} fields={fields} value={User_room} change={onChangeUser}/> */}\r\n                                <Select\r\n                                    isMulti={true}\r\n                                    value={User_rooms}\r\n                                    onChange={handleChange}\r\n                                    options={ownerData}\r\n                                    placeholder={\"Chọn thành viên tham gia\"}\r\n                                />\r\n                            </div>\r\n                            {/* <div className=\"col-sm-6\">\r\n                                {User_rooms ? (\r\n                                    <div>\r\n                                        <h3>Thành viên tham gia</h3>\r\n                                        <ul>\r\n                                            {User_rooms.map((option) =>\r\n                                                <li key={option.value}>\r\n                                                    {option.label}\r\n                                                </li>\r\n                                            )}\r\n                                        </ul>\r\n                                    </div>) : ''\r\n                                }\r\n                            </div> */}\r\n\r\n                            <div className=\"col-sm-12\">\r\n                                <button type=\"submit\" className=\"btn btn-sm btn-success\" onClick={addCalendarForm}>\r\n                                    Thêm mới\r\n                                    <i className=\"ace-icon fa fa-arrow-right icon-on-right bigger-110\" />\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FromCalendar;","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarMeet.js",["389","390","391"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarListItem.js",["392","393","394","395","396"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarList.js",["397","398","399"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { getUsers, getProfiles } from '../users/UserActions';\r\nimport { getCalendar, deleteCalendar } from \"./CalendarActions\";\r\nimport CalendarListItem from './CalendarListItem'\r\nimport CalendarPagination from './CalendarPagination';\r\nimport CalendarToday from './CalendarToday';\r\nimport moment from 'moment'\r\n\r\nimport Clock from 'react-clock';\r\nimport 'react-clock/dist/Clock.css';\r\n\r\nfunction CalendarList(props) {\r\n    const { handleUpdate } = props\r\n\r\n    const dataUser = useSelector(state => state.users.data);\r\n    const profiles = useSelector(state => state.profiles.data);\r\n    const data = useSelector((state) => state.calendars.calendars);\r\n    // const dataRoom = dataRooms.filter((item) => item.Id === Id)[0]\r\n    const [userSelected, setUserSelected] = useState([])\r\n    const [isSelected, setIsSelected] = useState(false)\r\n    const [idSelected, setIdSelected] = useState()\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const calPerPage = 5\r\n    const pageVisited = pageNumber * calPerPage\r\n\r\n    data.sort((a, b) => {\r\n        if (a.StartTime > b.StartTime) {\r\n            return -1;\r\n        }\r\n        if (a.StartTime < b.StartTime) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n\r\n    const [value, setValue] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(\r\n            () => setValue(new Date()),\r\n            1000\r\n        );\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    }, []);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCalendar())\r\n        dispatch(getUsers())\r\n        dispatch(getProfiles())\r\n    }, [])\r\n\r\n    const handleEdit = (Id, dataUserSelect) => {\r\n        setUserSelected(dataUserSelect.User_room)\r\n        setIdSelected(Id)\r\n        setIsSelected(true)\r\n    }\r\n    // console.log(idSelected)\r\n    const List_user_room = dataUser?.filter(items => userSelected.includes(items.id)).map((item, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td >\r\n                    {index + 1}\r\n                </td>\r\n                <td >\r\n                    {profiles.find(p => p.user === item.id).first_name ? profiles.find(p => p.user === item.id).first_name : item.username}\r\n                </td>\r\n                <td style={{textAlign:\"center\", color:\"green\"}}>\r\n                    {(() => {\r\n                        switch (String(item.groups)) {\r\n                            case '1':\r\n                                return <span >Quản trị hệ thống </span>\r\n                            case '2':\r\n                                return <span style={{fontWeight:\"bold\", color:\"blue\"}}>Chủ trì phòng họp </span>\r\n                            default:\r\n                                return <span >Thành viên </span>\r\n                        }\r\n                    })()}\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    const handleDel = (Id) => {\r\n        dispatch(deleteCalendar(Id))\r\n    }\r\n\r\n    const pageCount = Math.ceil(data.length / calPerPage)\r\n    const List_calendar = data\r\n        .slice(pageVisited, pageVisited + calPerPage)\r\n        .map((calendar, index) => {\r\n            const className = activeIndex === index ? 'active' : 'disable';\r\n            return (\r\n                <CalendarListItem setIsSelected={setIsSelected} setActiveIndex={setActiveIndex} className={className} idSelected={idSelected} key={index} index={index} calendar={calendar} profiles={profiles} pageVisited={pageVisited} handleEditCalendar={handleEdit} handleDelCalendar={handleDel} />\r\n            )\r\n        });\r\n\r\n    const changePage = ({ selected }) => {\r\n        setPageNumber(selected)\r\n    }\r\n    const today = new Date()\r\n\r\n    // console.log(moment(today).format(\"DD-MM-YY\").toString())\r\n\r\n    const CalendarTodays = data?.filter(x => moment(x.StartTime).format(\"DD-MM-YY\").toString() === moment(today).format(\"DD-MM-YY\").toString()).map((cal, index) => {\r\n        return (\r\n            <CalendarToday key={index} index={index} cal={cal} />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"row\" style={{ marginLeft: \"-24px\", marginRight: \"-24px\", backgroundColor:\"white\" }}>\r\n            <div className=\"col-xs-12 col-sm-8\">\r\n                <div className=\"control-group\">\r\n                    <div className=\"dataTables_wrapper form-inline no-footer\" style={{ flex: 1, maxHeight: '76vh', overflowY: 'auto' }}>\r\n                        <table id=\"simple-table\" className=\"table  table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th >TT</th>\r\n                                    <th >Tiêu đề cuộc họp</th>\r\n                                    <th >Thời gian bắt đầu</th>\r\n                                    <th >Thời gian kết thúc</th>\r\n                                    <th >Trạng thái</th>\r\n                                    <th className=\"hidden-480\" style={{ width: \"120px\" }}>\r\n                                        <button className=\"pull-right btn-sm btn-white btn-round\">\r\n                                            <Link to='/cal_add'>\r\n                                                <i className=\"menu-icon fa fa-plus\" />&nbsp;\r\n                                                <span className=\"menu-text\">Thêm mới</span>\r\n                                            </Link>\r\n                                        </button>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {List_calendar}\r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                    </div>\r\n                    <div className=\"dataTables_wrapper form-inline no-footer\" >\r\n                    <CalendarPagination pageCount={pageCount} onPageChange={changePage} counts={data?.length} pageVisited={pageVisited} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xs-12 col-sm-4\">\r\n                {isSelected ?\r\n                    <div className=\"control-group\" >\r\n                        <div className=\"dataTables_wrapper form-inline no-footer\" style={{ flex: 1, maxHeight: '84vh', overflowY: 'auto' }}>\r\n\r\n                            <table id=\"simple-table\" className=\"table  table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th style={{textAlign:\"center\"}}>TT</th>\r\n                                        <th style={{textAlign:\"center\"}}>Tên thành viên</th>\r\n                                        <th style={{textAlign:\"center\"}}>Vai trò</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody >\r\n                                    {\r\n                                        List_user_room\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"widget-box\" style={{ marginTop: \"0px\" }}>\r\n                        <div className=\"widget-header\">\r\n                        </div>\r\n                        <div className=\"widget-body\">\r\n                            <div className=\"widget-main\" >\r\n                                <div className=\"row\" >\r\n                                    <div style={{ display: 'flex', justifyContent: \"center\" }}>\r\n                                        <Clock\r\n                                            value={value}\r\n                                            size={235}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={{ backgroundColor: \"#EFF3F8\", fontSize: \"20px\", textAlign: \"center\", height: \"50px\", marginTop: \"6px\" }}>Ngày {moment().format(\"DD-MM-YYYY\")}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarList\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarListDetail.js",["400","401"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarBreadcrumb.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarPagination.js",[],["402","403"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\EditCalendar.js",["404","405","406","407","408","409","410","411","412","413","414"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ColumnSelect from 'react-column-select'\r\n\r\n\r\nfunction EditCalendar(props) {\r\n    const { eventType2, ownerData, hobbies, itemCalendar, Id_cal } = props\r\n    const [Subject, setSubject] = useState();\r\n    const [EventTypes, setEventTypes] = useState();\r\n    const [StartTime, setStartTime] = useState();\r\n    const [EndTime, setEndTime] = useState();\r\n    const [Location, setLocation] = useState();\r\n    const [Description, setDescription] = useState();\r\n    const [User_rooms, setUser_rooms] = useState(hobbies);\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [selected, setSelected] = useState([])\r\n\r\n    useEffect(() => {\r\n        setSubject(itemCalendar.Subject)\r\n        setEventTypes(itemCalendar.EventType)\r\n        setStartTime(itemCalendar.StartTime)\r\n        setEndTime(itemCalendar.EndTime)\r\n        setLocation(itemCalendar.Location)\r\n        setDescription(itemCalendar.Description)\r\n        setUser_rooms(hobbies)\r\n\r\n        return () => {\r\n            setSubject()\r\n            setEventTypes()\r\n            setStartTime()\r\n            setEndTime()\r\n            setLocation()\r\n            setDescription()\r\n            setUser_rooms()\r\n        }\r\n        // const User_room_selected = (itemCalendar.User_room) {\r\n        //     itemCalendar.User_room.map(x=>x.)\r\n        // }\r\n    }, [Id_cal])\r\n\r\n\r\n    const onChange = (values) => {\r\n        setSelected(values)\r\n\r\n    }\r\n    console.log(selected)\r\n    console.log(User_rooms)\r\n    console.log(Subject)\r\n\r\n\r\n    return (\r\n        <div className=\"widget-box\">\r\n            <div className=\"widget-header\">\r\n                <h4 className=\"widget-title\">Cập nhật cuộc họp</h4>\r\n            </div>\r\n            <div className=\"widget-body\">\r\n                <div className=\"widget-main\">\r\n                    <div className=\"row\">\r\n                        <form>\r\n                            <div className=\"col-sm-12\">\r\n                                <span className=\"bigger-110\">Chọn thành viên</span>\r\n\r\n                                <ColumnSelect\r\n                                    defaultValue={User_rooms}\r\n                                    options={ownerData}\r\n                                    onChange={onChange}\r\n                                    leftHeader='Danh sach chon thanh vien'\r\n                                    rightHeader='Danh sach thanh vien duoc chon'\r\n                                    isSearchable\r\n                                    searchFocusBorderColor=\"\"\r\n                                    theme={{\r\n                                        buttonBgColor: '#CBD5E0',\r\n                                        columnBgColor: '#CBD5E0',\r\n                                        columnBorderColor: '#cfa4ff',\r\n                                        headerBgColor: '#d6b1ff',\r\n                                        searchFocusBorderColor: '',\r\n                                        textColor: '#000000'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default EditCalendar;",["415","416"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarAdd.js",["417","418","419"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserReducer.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserActions.js",["420","421","422","423","424","425","426"],"// frontend/src/components/signup/SignupActions.js\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastOnError } from \"../../utils/Utils\";\r\n// import { isEmpty } from \"../../utils/Utils\";\r\nimport {\r\n  CREATE_USER_ERROR,\r\n  CREATE_USER_SUBMITTED,\r\n  CREATE_USER_SUCCESS,\r\n  UPDATE_USER_ERROR,\r\n  UPDATE_USER_SUBMITTED,\r\n  UPDATE_USER_SUCCESS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_ERROR,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_ERROR,\r\n  CREATE_PROFILE_ERROR,\r\n  CREATE_PROFILE_SUBMITTED,\r\n  CREATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_ERROR,\r\n  UPDATE_PROFILE_SUBMITTED,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  DELETE_PROFILE_SUCCESS,\r\n  GET_PROFILES_SUCCESS,\r\n  GET_PROFILES_REQUEST,\r\n  GET_PROFILES_ERROR,\r\n  GET_PROFILE_UNIT_SUCCESS,\r\n  GET_PROFILE_UNIT_ERROR,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_REQUEST,\r\n  GET_PROFILE_ERROR,\r\n  RESETPASSWORD_SUCCESS,\r\n  GET_UNITS_SUCCESS,\r\n  GET_UNITS_REQUEST,\r\n  GET_UNITS_ERROR,\r\n\r\n} from \"./UserTypes\";\r\n\r\nexport const createUser = userData => dispatch => {\r\n  dispatch({ type: CREATE_USER_SUBMITTED }); // set submitted state\r\n  axios\r\n    .post(\"/api/v1/register\", userData)\r\n    .then(response => {\r\n      toast.success(\r\n        // \"Tài khoản \" +  userData.username + \" được tạo thành công.\"\r\n        \"Tài khoản được tạo thành công.\"\r\n      );\r\n      dispatch({ \r\n        type: CREATE_USER_SUCCESS,\r\n        payload: response.data\r\n      });\r\n    })\r\n    .catch(error => {\r\n      if (error.resposne) {\r\n        toast.error(JSON.stringify(error.response.data));\r\n        dispatch({\r\n          type: CREATE_USER_ERROR,\r\n          errorData: error.response.data\r\n        });\r\n      } else if (error.message) {\r\n        toast.error(JSON.stringify(error.message));\r\n      } else {\r\n        toast.error(JSON.stringify(error));\r\n      }\r\n    });\r\n};\r\n\r\nexport const resetPassword = dataReset => dispatch => {\r\n  dispatch({ type: CREATE_USER_SUBMITTED }); // set submitted state\r\n  axios\r\n    .post(\"/api/v1/users/set_password/\", dataReset)\r\n    .then(response => {\r\n      toast.success(\r\n        \"Thay đổi mật khẩu thành công.\"\r\n      );\r\n      dispatch({ type: RESETPASSWORD_SUCCESS });\r\n    })\r\n    .catch(error => {\r\n        toast.error(\"Mật khẩu phải bao gồm chủ cái, số, và ký tự đặc biệt và có độ dài 8 ký tự trở lên!\");\r\n    });\r\n};\r\n\r\nexport const updateUser = (id, userData) => dispatch => {\r\n  dispatch({ type: UPDATE_USER_SUBMITTED }); // set submitted state\r\n  axios\r\n    .put(\"/api/v1/register\", (id, userData))\r\n    .then(response => {\r\n      toast.success(\r\n        \"Tài khoản \" +\r\n        userData.username +\r\n        \" được tạo thành công. Xin mời đăng nhập.\"\r\n      );\r\n      dispatch({ type: UPDATE_USER_SUCCESS });\r\n    })\r\n    .catch(error => {\r\n      if (error.resposne) {\r\n        toast.error(JSON.stringify(error.response.data));\r\n        dispatch({\r\n          type: UPDATE_USER_ERROR,\r\n          errorData: error.response.data\r\n        });\r\n      } else if (error.message) {\r\n        toast.error(JSON.stringify(error.message));\r\n      } else {\r\n        toast.error(JSON.stringify(error));\r\n      }\r\n    });\r\n};\r\n\r\nexport const getUsers = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: GET_USERS_REQUEST });\r\n\r\n    await axios\r\n      .get(\"/api/v1/users/\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_USERS_SUCCESS,\r\n          payload: response.data\r\n        });\r\n      })\r\n\r\n  } catch (error) {\r\n    console.log(error)\r\n    dispatch({\r\n      type: GET_USERS_ERROR,\r\n      message: error\r\n    })\r\n  }\r\n\r\n};\r\n\r\nexport const deleteUser = (username) => async dispatch => {\r\n  try {\r\n    await axios\r\n      .delete(`/api/v1/users/${username}/`)\r\n      .then(response => {\r\n        dispatch({\r\n          type: DELETE_USER_SUCCESS,\r\n          payload: username\r\n        });\r\n      })\r\n\r\n  } catch (error) {\r\n    console.log(error)\r\n    dispatch({\r\n      type: DELETE_USER_ERROR,\r\n      message: error\r\n    })\r\n  }\r\n\r\n};\r\n\r\n// export const getProfiles = (unit_id) => async dispatch => {\r\nexport const getProfiles = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: GET_PROFILES_REQUEST });\r\n\r\n    await axios\r\n      .get('/api/v1/profiles/')\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_PROFILES_SUCCESS,\r\n          payload: response.data\r\n        });\r\n      })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_PROFILES_ERROR,\r\n      message: error\r\n    })\r\n  }\r\n\r\n};\r\n\r\nexport const getProfileUnit = (unit_id) => async dispatch => {\r\n  try {\r\n    dispatch({ type: GET_PROFILES_REQUEST });\r\n    await axios\r\n      .get(`/api/v1/profiles/${unit_id}`)\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_PROFILES_SUCCESS,\r\n          payload: response.data\r\n        });\r\n      })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_PROFILES_ERROR,\r\n      message: error\r\n    })\r\n  }\r\n\r\n};\r\n\r\nexport const getProfile = (id) => async dispatch => {\r\n  try {\r\n    dispatch({ type: GET_PROFILE_REQUEST });\r\n\r\n    await axios\r\n      .get(`/api/v1/profile_user/${id}/`)\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_PROFILE_SUCCESS,\r\n          payload: response.data\r\n        });\r\n      })\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_PROFILE_ERROR,\r\n      message: error\r\n    })\r\n  }\r\n\r\n};\r\n\r\nexport const updateProfile = (id, userData) => async dispatch => {\r\n  // console.log(userData)\r\n  await axios\r\n    .patch(`/api/v1/profile/${id}/`, userData)\r\n    \r\n    .then(response => {\r\n      toast.success(\r\n        \"Cập nhật tài khoản thành công.\"\r\n      );\r\n      dispatch({ \r\n        type: UPDATE_PROFILE_SUCCESS,\r\n        payload: response.data\r\n      });\r\n    })\r\n    // .catch(error => {\r\n    //   if (error.resposne) {\r\n    //     toast.error(JSON.stringify(error.response.data));\r\n    //     dispatch({\r\n    //       type: UPDATE_PROFILE_ERROR,\r\n    //       errorData: error.response.data\r\n    //     });\r\n    //   } else if (error.message) {\r\n    //     toast.error(JSON.stringify(error.message));\r\n    //   } else {\r\n    //     toast.error(JSON.stringify(error));\r\n    //   }\r\n    // });\r\n    .catch(error => {\r\n      toastOnError(error);\r\n    });\r\n};\r\n\r\nexport const deleteProfile = (id) => async dispatch => {\r\n  await axios\r\n    .delete(`/api/v1/profile/${id}/`)\r\n    .then(response => {\r\n      toast.success(\r\n        \"Xóa tài khoản thành công.\"\r\n      );\r\n      dispatch({ \r\n        type: DELETE_PROFILE_SUCCESS,\r\n        payload: id\r\n      });\r\n    })\r\n    .catch(error => {\r\n      toastOnError(error);\r\n    });\r\n};\r\n\r\n\r\nexport const getUnits = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: GET_UNITS_REQUEST });\r\n\r\n    await axios\r\n      .get(\"/api/v1/unit/\")\r\n      .then(response => {\r\n        dispatch({\r\n          type: GET_UNITS_SUCCESS,\r\n          payload: response.data\r\n        });\r\n      })\r\n\r\n  } catch (error) {\r\n    console.log(error)\r\n    dispatch({\r\n      type: GET_UNITS_ERROR,\r\n      message: error\r\n    })\r\n  }\r\n\r\n};\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserData.js",["427","428"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarAddRoom.js",["429","430"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarSeclectUser.js",["431","432"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserTypes.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarEditRoom.js",["433","434","435","436","437","438","439","440","441"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarSeclectUserEdit.js",["442","443"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarToday.js",["444","445","446"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarJitsi.js",["447","448","449","450","451","452","453","454","455","456"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\ControlList.js",["457","458","459","460"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarModal.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\common\\Menubar.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\common\\Footer.js",["461"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\common\\Header.js",["462","463","464","465","466","467","468"],"// frontend/src/components/dashboard/Dashboard.js\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { getProfile, resetPassword } from '../users/UserActions';\r\nimport { logout } from \"../login/LoginActions\";\r\n\r\nconst Header = (props) => {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const profile = useSelector(state => state.profile.data);\r\n  const [resetPass, setResetPass] = useState(false)\r\n  const [passwordNew, setPasswordNew] = useState()\r\n  const [passwordOld, setPasswordOld] = useState()\r\n\r\n  const dispatch = useDispatch()\r\n  const handleLogout = (event) => {\r\n    event.preventDefault();\r\n    dispatch(logout())\r\n  }\r\n  useEffect(() => {\r\n    dispatch(getProfile(user.id))\r\n  }, [])\r\n\r\n  const handleResetPass = () => {\r\n    setResetPass(true)\r\n  }\r\n\r\n  const handleSavePass = () => {\r\n    let dataReset = {\r\n      new_password: passwordNew,\r\n      current_password: passwordOld\r\n    }\r\n    dispatch(resetPassword(dataReset))\r\n  }\r\n\r\n  return (\r\n    <div id=\"navbar\" className=\"navbar navbar-default ace-save-state navbar-fixed-top\">\r\n      <div className=\"navbar-container ace-save-state\" id=\"navbar-container\">\r\n\r\n        <div className=\"navbar-header pull-left\">\r\n          <a href=\"/\" className=\"navbar-brand\"><small><i className=\"fa fa-th-large \" /> &nbsp;&nbsp;CÔNG NGHỆ THÔNG TIN QUÂN KHU 7</small>\r\n          </a>\r\n        </div>\r\n        {user.username ? (\r\n          <>\r\n            <div className=\"navbar-buttons navbar-header pull-right\" role=\"navigation\">\r\n              <ul className=\"nav ace-nav\">\r\n\r\n                <li className=\"light-blue dropdown-modal\">\r\n                  <a data-toggle=\"dropdown\" href=\"#\" className=\"dropdown-toggle\">\r\n                    {/* className=\"user-info\"  */}\r\n                    {profile?.image &&\r\n                      <img className=\"nav-user-photo\" src={`http://localhost:8000${(profile.image).replace(\"http://127.0.0.1:8000\", \"\")}`} alt=\"Jason's Photo\" />\r\n                    }\r\n                    <span ><small>Xin chào,&nbsp;</small>{profile?.first_name ? profile.first_name : user.username}</span>\r\n                    <i className=\"ace-icon fa fa-caret-down\" />\r\n                  </a>\r\n                  <ul className='user-menu dropdown-menu-right dropdown-menu dropdown-yellow dropdown-caret dropdown-close' >\r\n\r\n                    {/* <li onClick={handleResetPass}> */}\r\n                    <li >\r\n                      <a><i className=\"ace-icon fa fa-cog\" />Thay đổi mật khẩu</a>\r\n                    </li>\r\n                    <li className=\"divider\" />\r\n\r\n                    {/* {resetPass && */}\r\n\r\n                    <li style={{ width: \"300px\" }}>\r\n                      <form>\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-addon\">\r\n                            Mật hiện tại&nbsp;&nbsp;&nbsp;&nbsp;\r\n                          </span>\r\n                          <input type=\"password\" className=\"form-control search-query\" placeholder=\"Nhập mật khẩu hiện tại\" value={passwordOld} onChange={(e) => setPasswordOld(e.target.value)} />\r\n\r\n                        </div>\r\n                        <div className=\"input-group\" >\r\n                          <span className=\"input-group-addon\">\r\n                            Mật khẩu mới&nbsp;\r\n                          </span>\r\n                          <input type=\"password\" className=\"form-control search-query\" placeholder=\"Nhập mật khẩu mới\" value={passwordNew} onChange={(e) => setPasswordNew(e.target.value)} />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                          <span className=\"input-group-addon\">\r\n                            <button type=\"button\" className=\"btn-green btn-sm\" onClick={handleSavePass}>\r\n                              <span className=\"ace-icon fa fa-save icon-on-right bigger-110\"></span>&nbsp;\r\n                              Lưu thay đổi\r\n                            </button>\r\n                          </span>\r\n\r\n                        </div>\r\n                      </form>\r\n\r\n                    </li>\r\n                    {/* } */}\r\n                    <li onClick={handleLogout}>\r\n                      <a><i className=\"ace-icon fa fa-power-off\" />Đăng xuất</a>\r\n                    </li>\r\n\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </>\r\n\r\n        ) : (\r\n          <div className=\"navbar-buttons navbar-header pull-right\" role=\"navigation\">\r\n            <ul className=\"nav ace-nav\">\r\n              <li className=\"light-blue dropdown-modal\">\r\n                <Link data-toggle=\"dropdown\" to=\"/login\" className=\"dropdown-toggle\">\r\n                  <span className=\"user-info\">Đăng nhập</span>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\CalendarJitsi.js",["469","470","471","472","473","474","475","476","477","478","479"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport { useFullScreen } from \"react-browser-hooks\";\r\nimport { setJitsiStore } from \"../jitsi/JitsiActions\"\r\n\r\nimport ProgressComponent from '@material-ui/core/CircularProgress';\r\n\r\n\r\nfunction CalendarJitsi(props) {\r\n    const { Id, Subject } = props;\r\n\r\n    const user_auth = useSelector((state) => state.auth);\r\n    const roomMeet = useSelector(state => state.jitsi.meetroom)\r\n    // console.log(roomMeet)\r\n    const { jitsiState } = useSelector((state) => state.jitsi);\r\n    console.log(user_auth)\r\n    console.log(jitsiState.stateAudio)\r\n\r\n    const [user, setUser] = useState(user_auth.user.last_name + \" \" + user_auth.user.first_name);\r\n\r\n    const { toggle, fullScreen } = useFullScreen();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const domain = 'meet.jit.si';\r\n    let api = {};\r\n    // const [room, setRoom] = useState(\"CNTTQK7\");\r\n    const [isAudioMuted, setIsAudioMuted] = useState(false);\r\n    const [isVideoMuted, setIsVideoMuted] = useState(false);\r\n    const [isTileView, setIsTileView] = useState(false);\r\n    const [dominantSpeaker, setDominantSpeaker] = useState();\r\n    const [displayName2, setDisplayName2] = useState();\r\n    const [participants, setParticipants] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n\r\n    const jitsiContainerStyle = {\r\n        display: (loading ? 'none' : 'block'),\r\n        width: '100%',\r\n        height: '100%',\r\n    }\r\n\r\n    const startMeet = () => {\r\n        const options = {\r\n            roomName: Id,\r\n            width: '100%',\r\n            height: \"100%\",\r\n            configOverwrite: { prejoinPageEnabled: false },\r\n            interfaceConfigOverwrite: {\r\n                // overwrite interface properties\r\n                filmStripOnly: false,\r\n                SHOW_JITSI_WATERMARK: false,\r\n                SHOW_WATERMARK_FOR_GUESTS: false,\r\n                DISABLE_DOMINANT_SPEAKER_INDICATOR: true,\r\n                TILE_VIEW_MAX_COLUMNS: 2,\r\n                TOOLBAR_BUTTONS: ['microphone', 'camera', 'chat', 'hangup', 'fullscreen', 'tileview', 'desktop', 'sharedvideo'],\r\n            },\r\n            parentNode: document.querySelector('#jitsi-iframe'),\r\n            userInfo: {\r\n                displayName: user,\r\n            }\r\n        }\r\n        api = new window.JitsiMeetExternalAPI(domain, options);\r\n        api.addEventListener('videoConferenceJoined', () => {\r\n            // console.log('Local User Joined');\r\n            setLoading(false);\r\n        });\r\n        api.addEventListeners({\r\n            readyToClose: handleClose,\r\n            participantLeft: handleParticipantLeft,\r\n            participantJoined: handleParticipantJoined,\r\n            videoConferenceJoined: handleVideoConferenceJoined,\r\n            videoConferenceLeft: handleVideoConferenceLeft,\r\n            audioMuteStatusChanged: handleMuteStatus,\r\n            videoMuteStatusChanged: handleVideoStatus,\r\n            tileViewChanged: handleTileViewStatus,\r\n            // displayNameChange: handleDisplayName,\r\n            dominantSpeakerChanged: handleDominantSpeaker,\r\n        });\r\n        api.executeCommand('subject', Subject);\r\n        api.executeCommand('setLargeVideoParticipant', 'abcd1234');\r\n        api.executeCommand('avatarUrl', 'assets/images/avatars/user.jpg');\r\n        // console(api.getNumberOfParticipants())\r\n\r\n\r\n        dispatch(setJitsiStore(api));\r\n    }\r\n\r\n    const handleClose = () => {\r\n        console.log(\"handleClose\");\r\n    }\r\n    const handleParticipantLeft = async (participant) => {\r\n        console.log(\"handleParticipantLeft\", participant); // { id: \"2baa184e\" }\r\n        const data = await getParticipants();\r\n    }\r\n    const handleParticipantJoined = async (participant) => {\r\n        console.log(\"handleParticipantJoined\", participant); // { id: \"2baa184e\", displayName: \"Shanu Verma\", formattedDisplayName: \"Shanu Verma\" }\r\n        const data = await getParticipants();\r\n        setParticipants(data)\r\n\r\n    }\r\n    console.log(participants)\r\n\r\n    const handleVideoConferenceJoined = async (participant) => {\r\n        console.log(\"handleVideoConferenceJoined\", participant); // { roomName: \"bwb-bfqi-vmh\", id: \"8c35a951\", displayName: \"Akash Verma\", formattedDisplayName: \"Akash Verma (me)\"}\r\n        const data = await getParticipants();\r\n    }\r\n    const handleVideoConferenceLeft = () => {\r\n        // console.log(\"handleVideoConferenceLeft\");\r\n        return history.push('/dashboard');\r\n    }\r\n\r\n    const handleMuteStatus = (muted) => {\r\n        // console.log(\"handleMuteStatus\", muted); // { muted: true } \r\n        // console.log(muted); // { muted: true } \r\n        setIsAudioMuted(muted.muted)\r\n    }\r\n    console.log(isAudioMuted)\r\n\r\n    const handleVideoStatus = (video) => {\r\n        // console.log(\"handleVideoStatus\", video); // { muted: true }\r\n        setIsVideoMuted(video.muted)\r\n    }\r\n    console.log(isVideoMuted)\r\n\r\n    const handleTileViewStatus = (tileview) => {\r\n        console.log(\"handleTileViewStatus\", tileview); // { muted: true }\r\n        setIsTileView(tileview.enabled)\r\n    }\r\n    // console.log(isTileView)\r\n    const handleDominantSpeaker = (speaker) => {\r\n        console.log(\"handleDominantSpeaker\", speaker);\r\n        setDominantSpeaker(speaker.id)\r\n        const dispName = api.getDisplayName(speaker.id)\r\n        setDisplayName2(dispName)\r\n        console.log(dispName)\r\n\r\n    }\r\n    // console.log(dominantSpeaker)\r\n\r\n    const getParticipants = () => {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve(api.getParticipantsInfo()); // get all participants\r\n            }, 500)\r\n        });\r\n    }\r\n\r\n    // custom events\r\n\r\n    const executeCommand = (e) => {\r\n        e.preventDefault();\r\n        api.executeCommand('muteEveryone');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window.JitsiMeetExternalAPI) {\r\n            startMeet();\r\n        } else {\r\n            alert('JitsiMeetExternalAPI not loaded');\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ display: 'flex', marginRight: '0px', overflow: 'scroll initial', height: '60vh'  }} >\r\n            {loading && <ProgressComponent style={{ marginLeft: '45%', marginTop: '20%', width: '5%', height: '5%' }} />}\r\n\r\n            <div id=\"jitsi-iframe\" style={jitsiContainerStyle} ></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(CalendarJitsi);\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\CalendarToday.js",["480","481"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\calendar\\CalendarHome.js",["482","483","484","485","486","487","488"],"// import './index.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, WorkWeek, Month, Inject, Resize, DragAndDrop, ResourcesDirective, ResourceDirective, } from '@syncfusion/ej2-react-schedule';\r\n\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { MultiSelectComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { isNullOrUndefined, L10n } from '@syncfusion/ej2-base';\r\nimport \"./material.css\";\r\nimport { addCalendar, getCalendar, updateCalendar, deleteCalendar } from \"./CalendarActions\";\r\n\r\n\r\nL10n.load({\r\n    'en-US': {\r\n        'schedule': {\r\n            'saveButton': 'Lưu',\r\n            'cancelButton': 'Đóng',\r\n            'deleteButton': 'Xóa',\r\n            'newEvent': 'Thêm mới Lịch hội nghị!',\r\n            'editEvent': 'Chỉnh sửa Lịch hội nghị!',\r\n            'deleteEvent': 'Xóa Lịch hội nghị!',\r\n            'editButton': 'Chỉnh sửa',\r\n            'cancelButton': 'Thoát',\r\n\r\n        },\r\n    }\r\n});\r\n\r\nfunction CalendarHome() {\r\n    const [fields, setFields] = useState({ text: 'OwnerText', value: 'Id' });\r\n    const dispatch = useDispatch();\r\n    const data = useSelector((state) => state.calendars.calendars); //.results\r\n\r\n    useEffect(() => {\r\n        dispatch(getCalendar())\r\n    }, [])\r\n\r\n    const eventType = [\r\n        { OwnerText: \"Ưu tiên cao\", Id: 0, OwnerColor: '#ffaa00' },\r\n        { OwnerText: \"Ưu tiên trung bình\", Id: 1, OwnerColor: '#f8a398' },\r\n        { OwnerText: \"Ưu tiên thấp\", Id: 2, OwnerColor: '#7499e1' }\r\n    ]\r\n\r\n    function onEventRendered(args) {\r\n        switch (args.data.EventType) {\r\n            case 1:\r\n                args.element.style.backgroundColor = '#F57F17';\r\n                break;\r\n            case 2:\r\n                args.element.style.backgroundColor = '#7fa900';\r\n                break;\r\n            case 3:\r\n                args.element.style.backgroundColor = '#8e24aa';\r\n                break;\r\n        }\r\n    }\r\n    let ownerData = [\r\n        { OwnerText: 'Nancy', Id: 1, OwnerColor: '#ffaa00' },\r\n        { OwnerText: 'Steven', Id: 2, OwnerColor: '#f8a398' },\r\n        { OwnerText: 'Michael', Id: 3, OwnerColor: '#7499e1' }\r\n    ];\r\n    const dataEventClose = (args) => {\r\n        if (args.type !== 'Editor' && !isNullOrUndefined(args.data)) {\r\n            dispatch(addCalendar(args.data));\r\n        } else{\r\n            dispatch(updateCalendar(args.data));\r\n        }\r\n    }\r\n\r\n    function editorTemplate(props) {\r\n        return ((props !== undefined) ? <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}><tbody>\r\n            <tr><td className=\"e-textlabel\">Tiêu đề</td><td style={{ colspan: '4' }}>\r\n                <input id=\"Summary\" className=\"e-field e-input\" type=\"text\" name=\"Subject\" style={{ width: '100%' }} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Trạng thái</td><td style={{ colspan: '4' }}>\r\n                <DropDownListComponent id=\"EventType\" placeholder='Chọn mức độ mưu tiên' data-name='EventType' className=\"e-field\" style={{ width: '100%' }} dataSource={eventType} fields={fields}  >\r\n                </DropDownListComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Thời gian bắt đầu</td><td style={{ colspan: '4' }}>\r\n                <DateTimePickerComponent id=\"StartTime\" format='dd/MM/yyyy hh:mm a' data-name=\"StartTime\" className=\"e-field\" ></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Thời gian kết thúc</td><td style={{ colspan: '4' }}>\r\n                <DateTimePickerComponent id=\"EndTime\" format='dd/MM/yyyy hh:mm a' data-name=\"EndTime\" className=\"e-field\" ></DateTimePickerComponent>\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Thành viên tham gia</td><td colSpan={4}>\r\n                <MultiSelectComponent id=\"User_room\" className=\"e-field\" placeholder='Chọn thành viên tham gia' data-name=\"User_room\" dataSource={ownerData} fields={fields} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Địa điểm</td><td style={{ colspan: '4' }}>\r\n                <input id=\"Location\" className=\"e-field e-input\" type=\"text\" name=\"Location\" style={{ width: '100%' }} />\r\n            </td></tr>\r\n            <tr><td className=\"e-textlabel\">Mô tả nội dung họp</td><td style={{ colspan: '4' }}>\r\n                <textarea id=\"Description\" className=\"e-field e-input\" name=\"Description\" rows={2} cols={50} style={{ width: '100%', height: '60px !important', resize: 'vertical' }} ></textarea>\r\n            </td></tr>\r\n        </tbody>\r\n        </table> : <div></div>);\r\n    }\r\n\r\n    return (\r\n        <ScheduleComponent width='100%' height='78vh'\r\n            selectedDate={new Date()}\r\n            eventSettings={{ dataSource: data }}\r\n            editorTemplate={editorTemplate}\r\n            showQuickInfo={false}\r\n            eventRendered={onEventRendered}\r\n            popupClose={dataEventClose}\r\n            currentView='Month'\r\n        >\r\n            {/* <ResourcesDirective>\r\n                                <ResourceDirective field='OwnerId' title='Owner' name='Owners' allowMultiple={false} dataSource={ownerData} textField='OwnerText' idField='Id' allowGroupEdit={false} colorField='OwnerColor'></ResourceDirective>\r\n                            </ResourcesDirective> */}\r\n            <ViewsDirective>\r\n                <ViewDirective option='Day' />\r\n                <ViewDirective option='Week' />\r\n                <ViewDirective option='WorkWeek' />\r\n                <ViewDirective option='Month' />\r\n            </ViewsDirective>\r\n            <Inject services={[Day, Week, WorkWeek, Month, Resize, DragAndDrop]} />\r\n        </ScheduleComponent>\r\n    );\r\n}\r\n\r\nexport default CalendarHome;","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\CalendarNext.js",["489","490","491","492"],"import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CalendarNext(props) {\r\n    const { index, cal } = props;\r\n    const [status, setStatus] = useState(\"Chưa diễn ra\")\r\n    const [statusNum, setStatusNum] = useState(3)\r\n    const [classType, setClassType] = useState(\"search-promotion label label-blue arrowed-in arrowed-in-right\")\r\n\r\n    useEffect(() => {\r\n        var datenow = new Date()\r\n        var date1 = new Date(cal.StartTime);\r\n        var date2 = new Date(cal.EndTime);\r\n        var date3 = date1 - datenow\r\n        var date4 = date2 - datenow\r\n        if (date4 <= 0) {\r\n            setStatus(\"Đã kết thúc\")\r\n            setStatusNum(0)\r\n            setClassType(\"search-promotion label label-danger arrowed-in arrowed-in-right\")\r\n        }\r\n        if (date3 <= 0 && date4 >= 0) {\r\n            setStatus(\"Đang diễn ra\")\r\n            setStatusNum(1)\r\n            setClassType(\"search-promotion label label-success arrowed-in arrowed-in-right\")\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {cal && index===0 || index===1 ?\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12\" key={index} style={{ height: \"35vh\" }}>\r\n                    <div className=\"thumbnail search-thumbnail\">\r\n                        <span className={classType}><b>{status}</b></span>\r\n                        <img className=\"media-object\" alt=\"100%x200\" style={{ minHeight: \"15vh\", width: '100%', display: 'block' }} src=\"assets/images/myimg/HNTT.jpg\" data-holder-rendered=\"true\" />\r\n                        {/* <iframe src=\"https://meet.jit.si/Hieu\" style={{ height: \"200px\", width: \"100%\", border: \"0px\" }}></iframe> */}\r\n                        <div className=\"caption\">\r\n                            {/* <div className=\"clearfix\">\r\n                                <Link to={`/hnth/${cal.Id}`} >\r\n                                    <span className=\"pull-right label label-grey info-label\">{cal.Subject}</span>\r\n                                </Link>\r\n                            </div> */}\r\n                            <Link to={`/hnth/${cal.Id}`} >\r\n                            <h5 className=\"search-title\">\r\n                                {cal.Subject}\r\n                            </h5>\r\n                            </Link>\r\n                            {/* <p>{cal.Description}</p> */}\r\n                            <span >Thời gian từ {moment(cal.StartTime).format(\"hh:mm A - DD/MM/YYYY\").toString()}</span> &nbsp;\r\n                            <span >đến {moment(cal.EndTime).format(\"hh:mm A - DD/MM/YYYY\").toString()}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            : <div className=\"col-xs-12 col-sm-12 col-md-12\" key={index} style={{ height: \"23vh\" }}>\r\n            <div className=\"thumbnail search-thumbnail\">\r\n                <div className=\"caption\">\r\n                    {/* <div className=\"clearfix\">\r\n                        <Link to={`/hnth/${cal.Id}`} >\r\n                            <span className=\"pull-right label label-grey info-label\">{cal.Subject}</span>\r\n                        </Link>\r\n                    </div> */}\r\n                    <Link to={`/hnth/${cal.Id}`} >\r\n                    <h5 >\r\n                        Nội dung: {cal.Subject}\r\n                    </h5>\r\n                    </Link>\r\n                    <p>{cal.Description}</p>\r\n                    <span >Thời gian từ {moment(cal.StartTime).format(\"hh:mm A - DD/MM/YYYY\").toString()}</span> &nbsp;\r\n                    <span >đến {moment(cal.EndTime).format(\"hh:mm A - DD/MM/YYYY\").toString()}</span>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CalendarNext\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiMeetAdmin.js",["493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter, useHistory, useParams } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport ProgressComponent from '@material-ui/core/CircularProgress';\r\nimport { getMeetRoom } from \"./JitsiActions\"\r\nimport Header from \"../common/Header\";\r\nimport Menubar from \"../common/Menubar\";\r\nimport Footer from \"../common/Footer\";\r\nimport { getUsers, getProfiles, getProfile} from '../users/UserActions';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport CropOriginalIcon from '@material-ui/icons/CropOriginal';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport moment from 'moment';\r\nimport Clock from 'react-clock';\r\nimport 'react-clock/dist/Clock.css';\r\nconst USER_JOIN_CHAT_EVENT = \"USER_JOIN_CHAT_EVENT\";\r\nconst USER_LEAVE_CHAT_EVENT = \"USER_LEAVE_CHAT_EVENT\";\r\nconst JITSI_AUDIO_ONE = \"JITSI_AUDIO_ONE\";\r\nconst SVR_JITSI_AUDIO_ONE = \"SVR_JITSI_AUDIO_ONE\";\r\nconst JITSI_AUDIO_ALL = \"JITSI_AUDIO_ALL\";\r\nconst SVR_JITSI_AUDIO_ALL = \"SVR_JITSI_AUDIO_ALL\";\r\nconst JITSI_VIDEO_ONE = \"JITSI_VIDEO_ONE\";\r\nconst SVR_JITSI_VIDEO_ONE = \"SVR_JITSI_VIDEO_ONE\";\r\nconst JITSI_VIDEO_ALL = \"JITSI_VIDEO_ALL\";\r\nconst SVR_JITSI_VIDEO_ALL = \"SVR_JITSI_VIDEO_ALL\";\r\nconst JITSI_FILMSTRIP = \"JITSI_FILMSTRIP\";\r\nconst SVR_JITSI_FILMSTRIP = \"SVR_JITSI_FILMSTRIP\";\r\nconst JITSI_TOGGLE_VIEW = \"JITSI_TOGGLE_VIEW\";\r\nconst SVR_JITSI_TOGGLE_VIEW = \"SVR_JITSI_TOGGLE_VIEW\";\r\nconst JITSI_TOGGLE_DESKTOP = \"JITSI_TOGGLE_DESKTOP\";\r\nconst SVR_JITSI_TOGGLE_DESKTOP = \"SVR_JITSI_TOGGLE_DESKTOP\";\r\nconst SVR_JITSI_HANGUP = \"SVR_JITSI_HANGUP\";\r\nconst JITSI_HANGUP = \"JITSI_HANGUP\";\r\nconst SVR_JITSI_HANGUP_ALL = \"SVR_JITSI_HANGUP_ALL\";\r\nconst JITSI_HANGUP_ALL = \"JITSI_HANGUP_ALL\";\r\nconst JITSI_STOP_SHARE = \"JITSI_STOP_SHARE\";\r\nconst SVR_JITSI_STOP_SHARE = \"SVR_JITSI_STOP_SHARE\";\r\nconst JITSI_TILE_VIEW = \"JITSI_TILE_VIEW\";\r\nconst SVR_JITSI_TILE_VIEW = \"SVR_JITSI_TILE_VIEW\";\r\n\r\n\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nconst JitsiMeetAdmin = () => {\r\n    const { roomId } = useParams();\r\n    const user_auth = useSelector((state) => state.auth.user);\r\n    // const profile = useSelector((state) => state.auth.profileUser);\r\n    const roomMeet = useSelector(state => state.jitsi.meetroom)\r\n    const dataUser = useSelector(state => state.users.data);\r\n    const profiles = useSelector(state => state.profiles.data);\r\n    // const profile = useSelector(state => state.profile.data);\r\n    const profile = useSelector((state) => state.auth.profile);\r\n    // console.log(profile)\r\n    const fullname = profile.last_name\r\n    const [users, setUsers] = useState([]);\r\n    const socketRef = useRef();\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(getUsers())\r\n        // dispatch(getProfile(user_auth.id))\r\n        dispatch(getProfiles())\r\n        dispatch(getMeetRoom(roomId));\r\n    }, [])\r\n\r\n    const [value, setValue] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(\r\n            () => setValue(new Date()),\r\n            1000\r\n        );\r\n        return () => {\r\n            clearInterval(interval);\r\n        }\r\n    }, []);\r\n\r\n    const domain = 'meet.jit.si';\r\n    let api = {};\r\n    const [_api, setApi] = useState();\r\n    const [room, setRoom] = useState(\"CNTTQK7\");\r\n\r\n    const [isAudioMuted, setIsAudioMuted] = useState();\r\n    const [isAudioMutedAll, setIsAudioMutedAll] = useState(false);\r\n    const [isVideoMuted, setIsVideoMuted] = useState();\r\n    const [isTileView, setIsTileView] = useState(false);\r\n    const [isTileViews, setIsTileViews] = useState([]);\r\n    const [isFilmstrip, setIsFilmstrip] = useState(false);\r\n    const [isFullDestop, setIsFullDestop] = useState(false);\r\n    const [dominantSpeaker, setDominantSpeaker] = useState();\r\n    // const [meId, setMeId] = useState();\r\n\r\n    const [jitsiUser, setJitsiUser] = useState();\r\n\r\n    // const [raiseHand, setRaiseHand] = useState();\r\n    const [raiseHandNew, setRaiseHandNew] = useState([]);\r\n    const [sharingParticipants, setSharingParticipants] = useState([]);\r\n    // const [endpointTextMessageReceived, setEndpointTextMessageReceived] = useState();\r\n\r\n    const [numberOfParticipants, setNumberOfParticipants] = useState();\r\n    // const [incomingMessage, setIncomingMessage] = useState();\r\n    const incomingMessages = ['microphone', 'camera', 'chat', 'hangup', 'fullscreen', 'tileview'];\r\n    // const [outgoingMessage, setOutgoingMessage] = useState();\r\n\r\n    // const [displayName2, setDisplayName2] = useState();\r\n    // const [displayName3, setDisplayName3] = useState();\r\n    const [participants, setParticipants] = useState([]);\r\n    const [idLeave, setIdLeave] = useState();\r\n    const [availableDevices, setAvailableDevices] = useState([]);\r\n    // const [stateAudioAll, setStateAudioAll] = useState(false);\r\n    // const [audio_Input, setAudio_Input] = useState();\r\n    // const [audio_Output, setAudio_Output] = useState();\r\n    const [video_Input, setVideo_Input] = useState();\r\n    // const [webcamId, setWebcamId] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n\r\n    const jitsiContainerStyle = {\r\n        display: (loading ? 'none' : 'block'),\r\n        width: '100%',\r\n        height: '100%',\r\n    }\r\n\r\n    const startMeet = () => {\r\n        const options = {\r\n            roomName: 'cnttqk7',\r\n            // password:password,\r\n            width: '100%',\r\n            height: \"100%\",\r\n            configOverwrite: {\r\n                localRecording: {\r\n                    enabled: true,\r\n                },\r\n                fileRecordingsServiceEnabled: true,\r\n                fileRecordingsEnabled: true,\r\n                prejoinPageEnabled: false,\r\n            },\r\n            interfaceConfigOverwrite: {\r\n                filmStripOnly: false,\r\n                SHOW_JITSI_WATERMARK: false,\r\n                SHOW_WATERMARK_FOR_GUESTS: false,\r\n                DISABLE_DOMINANT_SPEAKER_INDICATOR: true,\r\n                TILE_VIEW_MAX_COLUMNS: 4,\r\n                TOOLBAR_BUTTONS: ['microphone', 'camera', 'chat', 'hangup', 'desktop', 'tileview', 'fullscreen'],\r\n            },\r\n            parentNode: document.querySelector('#jitsi-iframe'),\r\n            userInfo: { displayName: fullname, }\r\n        }\r\n        api = new window.JitsiMeetExternalAPI(domain, options);\r\n        setApi(api)\r\n        api.addEventListener('videoConferenceJoined', (object) => {\r\n            // setMeId(object.id)\r\n            setLoading(false);\r\n        });\r\n        api.addEventListeners({\r\n            readyToClose: handleClose,\r\n            participantLeft: handleParticipantLeft,\r\n            participantJoined: handleParticipantJoined,\r\n            videoConferenceJoined: handleVideoConferenceJoined,\r\n            videoConferenceLeft: handleVideoConferenceLeft,\r\n            audioMuteStatusChanged: handleMuteStatus,\r\n            videoMuteStatusChanged: handleVideoStatus,\r\n            tileViewChanged: handleTileViewStatus,\r\n            filmstripDisplayChanged: handleFilmstripDisplayChanged,\r\n            dominantSpeakerChanged: handleDominantSpeaker,\r\n            // avatarChanged: handleAvatarChanged,\r\n            raiseHandUpdated: handleRaiseHandUpdated,\r\n            // endpointTextMessageReceived: handleEndpointTextMessageReceived,\r\n            // incomingMessage: incomingMessageListener,\r\n            // outgoingMessage: outgoingMessageListener,\r\n            contentSharingParticipantsChanged: handleContentSharingParticipantsChanged,\r\n        });\r\n        api.executeCommand('subject', roomMeet.Subject);\r\n        api.executeCommand('toggleTileView')\r\n        // api.executeCommand('avatarUrl', 'assets/images/avatars/user.jpg');\r\n        // api.getCurrentDevices().then(devices => {\r\n        //     setCurrentDevices(devices)\r\n        // });\r\n        api.getAvailableDevices().then(devices => {\r\n            setAvailableDevices(devices)\r\n        });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        console.log(\"handleClose\");\r\n    }\r\n    const handleParticipantLeft = async (participant) => {\r\n        // console.log(\"handleParticipantLeft\", participant); // { id: \"2baa184e\" }\r\n        setIdLeave(participant)\r\n    }\r\n    // console.log(_api)\r\n    const handleParticipantJoined = async (participant) => {\r\n        // console.log(\"handleParticipantJoined\", participant); // { id: \"2baa184e\", displayName: \"Shanu Verma\", formattedDisplayName: \"Shanu Verma\" }\r\n        // setMe_Id(participant)\r\n        console.log(participant)\r\n        const data = await getParticipants();\r\n        setParticipants(data)\r\n        const data2 = await getNumberOf();\r\n        setNumberOfParticipants(data2)\r\n    }\r\n    const handleVideoConferenceJoined = async (participant) => {\r\n        // console.log(\"handleVideoConferenceJoined\", participant); // { roomName: \"bwb-bfqi-vmh\", id: \"8c35a951\", displayName: \"Akash Verma\", formattedDisplayName: \"Akash Verma (me)\"}\r\n        // const data = await getParticipants();\r\n        setJitsiUser(participant)\r\n    }\r\n    // console.log(jitsiUser?.id)\r\n    const handleVideoConferenceLeft = () => {\r\n        // console.log(\"handleVideoConferenceLeft\");\r\n        return history.push('/');\r\n    }\r\n    const handleMuteStatus = (muted) => {\r\n        // console.log(\"handleMuteStatus\", muted); // { muted: true } \r\n        setIsAudioMuted(muted)\r\n    }\r\n    // console.log(isAudioMuted)\r\n    const handleVideoStatus = (video) => {\r\n        // console.log(\"handleVideoStatus\", video); // { muted: true }\r\n        setIsVideoMuted(video)\r\n    }\r\n    // console.log(isVideoMuted)\r\n    const handleTileViewStatus = (tileview) => {\r\n        // console.log(\"handleTileViewStatus\", tileview); // { enabled: true }\r\n        setIsTileView(tileview.enabled)\r\n    }\r\n    const handleFilmstripDisplayChanged = (filmstrip) => {\r\n        // console.log(\"handleTileViewStatus\", filmstrip); // { muted: true }\r\n        setIsFilmstrip(filmstrip.visible)\r\n    }\r\n    //Tao nut lenh dieu khien chung\r\n    const handleMuteAudioAll = () => {\r\n        _api.executeCommand('muteEveryone');\r\n        setIsAudioMutedAll(!isAudioMutedAll)\r\n    }\r\n    // Tao nut lenh dieu khien cuc bo\r\n    const handleToggleCameraMirror = () => {\r\n        _api.executeCommand('toggleCameraMirror');\r\n    }\r\n    //Các lenh chua duoc\r\n    // const handleSetVideoQuality = () => {\r\n    //     _api.executeCommand('setVideoQuality', 720);//Chua duoc\r\n    // }\r\n    // const handleSendTones = () => {//Khong duoc\r\n    //     _api.executeCommand('sendTones', {\r\n    //         tones: '12345#',\r\n    //         duration: 200,\r\n    //         pause: 200\r\n    //     });\r\n    // }\r\n    // const handlesStartShareVideo = () => {\r\n    //     _api.executeCommand('startShareVideo', \"assets/vdeos/videoqk7.mp4\");//Chua duoc\r\n    // }\r\n    // const handlesStopShareVideo = () => {\r\n    //     _api.executeCommand('stopShareVideo');//Chua duoc\r\n    // }\r\n    // Nhan thong bao\r\n    // function incomingMessageListener(object) {\r\n    //     incomingMessages.push(object)\r\n    //     setIncomingMessage(incomingMessages)\r\n    // }\r\n    // useEffect(() => {\r\n    //     incomingMessages.push(incomingMessage)\r\n    // }, [incomingMessage])\r\n    // function outgoingMessageListener(object) {\r\n    //     setOutgoingMessage(object)\r\n    // }\r\n    // console.log(incomingMessage)\r\n    // console.log(availableDevices)\r\n    //Gui thong bao chua duoc\r\n    // const handleEndpointTextMessageReceived = (message) => {\r\n    //     console.log(\"handleEndpointTextMessageReceived\", message); //Chua duoc\r\n    //     setEndpointTextMessageReceived(message)\r\n    // }\r\n    const handleContentSharingParticipantsChanged = (data) => {\r\n        console.log(\"handleContentSharingParticipantsChanged\", data);\r\n        setSharingParticipants(data.data)\r\n    }\r\n    // console.log(sharingParticipants)\r\n\r\n    // console.log(endpointTextMessageReceived)\r\n    // const handleSendChatMessage = () => {\r\n    //     // _api.executeCommand('sendEndpointTextMessage', '99eafe21', 'text'); //Khong duoc\r\n    //     _api.executeCommand('sendChatMessage',\r\n    //         {\r\n    //             message: 'Hieu gui sao khong dc',\r\n    //             to: '89e539fa',\r\n    //             ignorePrivacy: false\r\n    //         });\r\n    // }\r\n\r\n    // const handleRemoveEventListeners = () => {\r\n    //     _api.removeEventListeners('incomingMessage');//chua duoc\r\n    // }\r\n    // const handleToggleCamera = () => {\r\n    //     _api.executeCommand('toggleCamera');//chua duoc\r\n    // }\r\n    const handleToggleVirtualBackgroundDialog = () => {\r\n        _api.executeCommand('toggleVirtualBackgroundDialog');//chua duoc\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window.JitsiMeetExternalAPI && Object.entries(profile).length !== 0) {\r\n            startMeet();\r\n        } \r\n        // else {\r\n        //     alert('JitsiMeetExternalAPI not loaded');\r\n        // }\r\n    }, [profile])\r\n\r\n    //Nhan va tao bang Thanh vien join\r\n    const handleDominantSpeaker = (speaker) => {\r\n        console.log(\"DominantSpeaker\", speaker);\r\n        setDominantSpeaker(speaker.id)\r\n        // const dispName = api.getDisplayName(speaker.id)\r\n        // setDisplayName2(dispName)\r\n    }\r\n    // const handleAvatarChanged = (aV) => {\r\n        // console.log(\"handleAvatarChanged\", aV);\r\n        // console.log(aV.id);\r\n        // const dispName = api.getDisplayName(aV.id)\r\n        // setDisplayName3(dispName)\r\n    // }\r\n    const handleRaiseHandUpdated = (raise) => {\r\n        // setRaiseHand(raise)\r\n        const index = raiseHandNew.findIndex((rH) => rH.id === raise.id)\r\n        if (index !== -1) {\r\n            const rHCopy = [...raiseHandNew]\r\n            rHCopy[index].handRaised\r\n                ? rHCopy[index].handRaised = false\r\n                : rHCopy[index].handRaised = true\r\n            setRaiseHandNew([...raiseHandNew, rHCopy])\r\n        } else {\r\n            raiseHandNew.push(raise)\r\n            setRaiseHandNew([...raiseHandNew, raiseHandNew])\r\n        }\r\n\r\n    }\r\n    // console.log(raiseHandNew)\r\n    const getParticipants = () => {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve(api.getParticipantsInfo()); // get all participants\r\n            }, 500)\r\n        });\r\n    }\r\n    const getNumberOf = () => {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                resolve(api.getNumberOfParticipants());\r\n            }, 500)\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    //Nhan va tao select box Audio, Camera\r\n    // const audioInputs = availableDevices.audioInput?.map(au => {\r\n    //     return { \"value\": au.deviceId, \"label\": au.label }\r\n    // })\r\n    // const videoInputs = availableDevices.videoInput?.map(v => {\r\n    //     return { \"value\": v.deviceId, \"label\": v.label }\r\n    // })\r\n    // const audioOutputs = availableDevices.audioOutput?.map(v => {\r\n    //     return { \"value\": v.deviceId, \"label\": v.label }\r\n    // })\r\n    // const handleAudioInput = (audio_Input) => {\r\n    //     setAudio_Input(audio_Input)\r\n    //     _api.setVideoInputDevice(audio_Input.lable, audio_Input.value);\r\n    //     console.log(video_Input)\r\n    // }\r\n    // const handleVideoInput = (video_Input) => {\r\n    //     setVideo_Input(video_Input)\r\n    //     setWebcamId(video_Input.value)\r\n    //     _api.setVideoInputDevice(video_Input.lable, video_Input.value);\r\n    //     // console.log(audio_Input)\r\n    // }\r\n    // const handleAudioOutput = (audio_Output) => {\r\n    //     setAudio_Output(audio_Output)\r\n    //     _api.setVideoInputDevice(audio_Output.lable, audio_Output.value);\r\n    // }\r\n    // const videoConstraints = {\r\n    //     deviceId: webcamId\r\n    // };\r\n\r\n    //Socket IO\r\n    useEffect(() => {\r\n        if (!fullname || !jitsiUser?.id) {\r\n            return;\r\n        }\r\n        // socketRef.current = socketIOClient(SOCKET_SERVER_URL);\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n            query: { roomId, userId: user_auth.id, fullname, jitsiUserId: jitsiUser?.id, isAudioMuted: isAudioMuted.muted, isVideoMuted: isVideoMuted.muted, isTileView },\r\n        });\r\n        socketRef.current.on(\"connect\", () => {\r\n            console.log(socketRef.current.id);\r\n        });\r\n        socketRef.current.on(USER_JOIN_CHAT_EVENT, (users) => {\r\n            // if (user.socketId === socketRef.current.id) return;\r\n            setUsers(users);\r\n        });\r\n        socketRef.current.on(USER_LEAVE_CHAT_EVENT, (user) => {\r\n            setUsers((users) => users.filter((u) => u.userId !== user_auth.id));\r\n        });\r\n        socketRef.current.on(SVR_JITSI_AUDIO_ONE, (id) => {\r\n            // const index = participants.findIndex(p=>p.participantId===id)\r\n            // if(index !==-1) \r\n            _api.executeCommand('toggleAudio');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_STOP_SHARE, (id) => {\r\n            _api.executeCommand('toggleShareScreen');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_TILE_VIEW, (id) => {\r\n            _api.executeCommand('toggleTileView');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_AUDIO_ALL, (data) => {\r\n            if (data === roomId)\r\n                _api.executeCommand('toggleAudio');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_VIDEO_ONE, (id) => {\r\n            // console.log(id)\r\n            _api.executeCommand('toggleVideo');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_VIDEO_ALL, (data) => {\r\n            if (data === roomId)\r\n                _api.executeCommand('toggleVideo');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_FILMSTRIP, (data) => {\r\n            if (data === roomId)\r\n                _api.executeCommand('toggleFilmStrip');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_TOGGLE_VIEW, (data) => {\r\n            if (data === roomId)\r\n                _api.executeCommand('toggleTileView');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_HANGUP_ALL, (data) => {\r\n            if (data === roomId)\r\n                _api.executeCommand('hangup');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_HANGUP, (data) => {\r\n            _api.executeCommand('hangup');\r\n        });\r\n        socketRef.current.on(SVR_JITSI_TOGGLE_DESKTOP, (data) => {\r\n            if (data.isFullDestop) {\r\n                _api.executeCommand('setLargeVideoParticipant', data.id);\r\n            } else {\r\n                _api.executeCommand('setLargeVideoParticipant');\r\n            }\r\n\r\n        });\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n        };\r\n    }, [roomId, jitsiUser, isAudioMuted, isVideoMuted, isTileView]);\r\n\r\n    const audioClick = (id) => {\r\n        // console.log(users)\r\n        // console.log(id)\r\n        if (audioClick) {\r\n            if (!socketRef.current) return;\r\n            socketRef.current.emit(JITSI_AUDIO_ONE,\r\n                // idSocket: socketRef.current.id,\r\n                id\r\n            );\r\n        }\r\n    }\r\n    const videoClick = (id) => {\r\n        if (videoClick) {\r\n            if (!socketRef.current) return;\r\n            socketRef.current.emit(JITSI_VIDEO_ONE,\r\n                id\r\n            );\r\n        }\r\n    }\r\n    const stopShareVideoClick = (id) => {\r\n        if (stopShareVideoClick) {\r\n            if (!socketRef.current) return;\r\n            socketRef.current.emit(JITSI_STOP_SHARE,\r\n                id\r\n            );\r\n        }\r\n    }\r\n    const tileViewClick = (id) => {\r\n        if (tileViewClick) {\r\n            if (!socketRef.current) return;\r\n            socketRef.current.emit(JITSI_TILE_VIEW,\r\n                id\r\n            );\r\n        }\r\n    }\r\n    const handleMuteEveryoneCamera = () => {\r\n        if (handleMuteEveryoneCamera) {\r\n            if (!socketRef.current) return;\r\n            socketRef.current.emit(JITSI_VIDEO_ALL,\r\n                roomId\r\n            );\r\n        }\r\n    }\r\n    const handleMuteEveryone = () => {\r\n        if (handleMuteEveryone) {\r\n            if (!socketRef.current) return;\r\n            socketRef.current.emit(JITSI_AUDIO_ALL,\r\n                roomId\r\n            );\r\n        }\r\n    }\r\n    const handleToggleFilmStrip = () => {\r\n        if (!socketRef.current) return;\r\n        socketRef.current.emit(JITSI_FILMSTRIP,\r\n            roomId\r\n        );\r\n    }\r\n    const handleToggleTileView = () => {\r\n        if (!socketRef.current) return;\r\n        socketRef.current.emit(JITSI_TOGGLE_VIEW,\r\n            roomId\r\n        );\r\n    }\r\n    // const handleToggleDesktopClick = (id) => {\r\n    //     if (!socketRef.current) return;\r\n    //     if(handleToggleDesktopClick){\r\n    //         socketRef.current.emit(JITSI_TOGGLE_DESKTOP,\r\n    //             id\r\n    //         );\r\n    //     }\r\n    //     // setIsFullDestop()\r\n    // }\r\n    const handleLargeVideoParticipant = (id) => {\r\n        if (!socketRef.current) return;\r\n        setIsFullDestop(!isFullDestop)\r\n        socketRef.current.emit(JITSI_TOGGLE_DESKTOP,\r\n            { id, roomId, isFullDestop }\r\n        );\r\n    }\r\n    // console.log(isFullDestop)\r\n    const handleHangupAll = () => {\r\n        if (!socketRef.current) return;\r\n        socketRef.current.emit(JITSI_HANGUP_ALL,\r\n            roomId\r\n        );\r\n    }\r\n    const handleHangup = (id) => {\r\n        if (!socketRef.current) return;\r\n        socketRef.current.emit(JITSI_HANGUP,\r\n            id\r\n        );\r\n    }\r\n    const participantView = participants.map((p, index) => {\r\n        if (p.participantId !== idLeave?.id)\r\n            return (\r\n                <tr key={index}>\r\n                    {/* <td>{index + 1}</td> */}\r\n                    <td style={{ color: \"green\", fontWeight: \"bold\" }}>{p.displayName}</td>\r\n                    {/* <td>{p.participantId}</td> */}\r\n                    <td>\r\n                        {raiseHandNew?.find((rH) => rH?.id === p.participantId)?.handRaised ? <i className=\"ace-icon fa fa-hand-paper-o  green bigger-120\" /> : \"\"}\r\n                        &nbsp;{p.participantId === dominantSpeaker ? (<i className=\"ace-icon fa fa-volume-up green bigger-120\" />) : \"\"}\r\n                        &nbsp;{sharingParticipants?.find((sP) => sP === p.participantId) ? <i className=\"ace-icon fa fa-share  green bigger-120\" /> : \" \"}\r\n                    </td>\r\n\r\n                    {/* {raiseHand?.find((rH)=> rH.id === p.participantId)?.handRaised} */}\r\n                    <td>\r\n                        <span className=\"vbar\" />\r\n                        <button className=\"blue\" onClick={() => audioClick(p.participantId)} title=\"Tắt/Mở míc thành viên\">\r\n                            {users?.find((u) => u?.jitsiUserId === p.participantId)?.isAudioMuted !== 'true' ? (<i className=\"ace-icon fa fa-microphone green\" />) : (<i className=\"ace-icon fa fa-microphone-slash red\" />)}\r\n                            {/* {users.find((u)=>u.jitsiUserId===p.participantId)?.userId} */}\r\n                        </button>\r\n                        <span className=\"vbar\" />\r\n                        <button className=\"blue\" onClick={() => videoClick(p.participantId)} title=\"Tắt/Mở Camera thành viên\">\r\n                            {users?.find((u) => u?.jitsiUserId === p.participantId)?.isVideoMuted !== 'true' ? (<i className=\"ace-icon fa fa-video-camera green\" />) : (<i className=\"ace-icon fa fa-video-camera red\" />)}\r\n                        </button>\r\n                        <span className=\"vbar\" />\r\n                        <button className=\"blue\" onClick={() => stopShareVideoClick(p.participantId)} title=\"Tắt/Mở chia sẻ màn hình thành viên\">\r\n                            {sharingParticipants?.find((sP) => sP === p.participantId) ? <i className=\"ace-icon fa fa-share  green \" /> : <i className=\"ace-icon fa fa-share \" />}\r\n                        </button>\r\n                        <span className=\"vbar\" />\r\n                        <button className=\"blue\" onClick={() => tileViewClick(p.participantId)} title=\"Thiết lập kiểu hiển thị thành viên\">\r\n                            {users?.find((u) => u?.jitsiUserId === p.participantId)?.isTileView === 'true' ? (<i className=\"ace-icon fa fa-th green\" />) : (<i className=\"ace-icon fa fa-th red\" />)}\r\n                        </button>\r\n                        <span className=\"vbar\" />\r\n                        {/* <button className=\"blue\" onClick={() => handleLargeVideoParticipant(p.participantId)}>\r\n                            <i className=\"ace-icon fa fa-image red \" />\r\n                        </button> */}\r\n                        <span className=\"vbar\" />\r\n                        <button className=\"blue\" onClick={() => handleHangup(p.participantId)} title=\"Ngắt kết nối thành viên\">\r\n                            <i className=\"ace-icon fa fa-power-off red \" />\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n    });\r\n    const ps = participants.map(p => {\r\n        if (p.participantId !== idLeave?.id)\r\n            return p?.displayName\r\n    })\r\n    const rU = roomMeet.User_room\r\n    const List_user_room = dataUser && rU && dataUser.filter(items => rU.includes(items.id))\r\n    const List_user_room_filter = List_user_room && profiles && List_user_room.filter(items => !ps.includes(profiles?.find(p => p.user === items.id)?.last_name)).map((item, index) => {\r\n        return (\r\n            <tr key={index} >\r\n                {/* <td >\r\n                    {index + ps?.length + 1}\r\n                </td> */}\r\n                <td >\r\n                {profiles && profiles.find(p => p.user === item.id)?.last_name ? profiles?.find(p => p.user === item.id)?.last_name : item.username}\r\n                </td>\r\n                <td >\r\n                    <span ></span>\r\n                </td>\r\n                <td >\r\n                    <span ></span>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"main-container ace-save-state\" id=\"main-container\">\r\n                <Menubar />\r\n                <div className=\"main-content\">\r\n                    <div className=\"main-content-inner\" >\r\n                        {roomMeet &&\r\n                            <div className=\"row\">\r\n                                {loading && <><b style={{ marginLeft: '40%', marginTop: '30%', width: \"100px\", height: \"100px\" }}>Đang kết nối vào hệ thống ...</b> <br/><ProgressComponent style={{ marginLeft: '45%', marginTop: '25%', width: \"100px\", height: \"100px\" }} /></>}\r\n\r\n                                {/* { (user_auth.user.rules == \"1\" || user_auth.user.rules == \"0\") && ( */}\r\n                                {/* <div style={{ display: 'flex', height: '100vh', marginRight: '0px', overflow: 'scroll initial' }} > */}\r\n\r\n                                <div className=\"col-xs-12 col-sm-7\"  >\r\n                                    <div className=\"widget-box\" style={{ display: (loading ? 'none' : 'block'), marginRight: '0px' }}>\r\n                                        {/* <div className=\"widget-header\">\r\n                                            <h4 className=\"widget-title\" style={{ textAlign: \"center\" }}>{roomMeet.Subject}</h4>\r\n                                        </div> */}\r\n                                        <div className=\"row\" style={{ display: 'flex', height: '56vh', marginRight: '0px', justifyContent: \"center\" }}>\r\n                                            {/* {displayName2 && dominantSpeaker !== meId && <div style={{ position: 'fixed', marginTop: '47vh', fontSize: \"18px\", fontWeight: \"bold\", backgroundColor: \"gray\", color: \"white\" }}>&nbsp;{displayName2}&nbsp;</div>}\r\n                                            {displayName3 && dominantSpeaker === meId && <div style={{ position: 'fixed', marginTop: '47vh', fontSize: \"18px\", fontWeight: \"bold\", backgroundColor: \"gray\", color: \"white\" }}>&nbsp;{displayName3}&nbsp;</div>} */}\r\n                                            <div id=\"jitsi-iframe\" style={jitsiContainerStyle} ></div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"widget-box\" style={{ display: (loading ? 'none' : 'block'), marginRight: '0px' }}>\r\n                                        <div class=\"widget-header\">\r\n                                            <h5 class=\"widget-title\"><i class=\"ace-icon fa fa-cog\"></i>Thiết lập giao diện hiện thị cho hệ thống</h5>\r\n                                        </div>\r\n                                        <div class=\"widget-body\">\r\n                                            <div className=\"widget-main\" >\r\n                                                <div className=\"row\" style={{ marginLeft: \"-12px\", marginRight: \"-12px\" }} >\r\n                                                    <div className=\"col-xs-12 col-sm-6\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n                                                        <div className=\"profile-user-info profile-user-info-striped\">\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" > Chọn giao diện </div>\r\n                                                                <div className=\"profile-info-value\" style={{ width: \"180px\" }} >\r\n                                                                    <span>\r\n                                                                        <button className=\"pull-center btn-sm btn-white btn-round\" type=\"button\" onClick={handleToggleTileView} title=\"Chọn một hoặc nhiều hình ảnh thành viên\">\r\n                                                                            &nbsp;&nbsp;{isTileView && isTileView ? <CropOriginalIcon style={{ fontSize: 17 }} /> : <AppsIcon style={{ fontSize: 17 }} />}&nbsp;&nbsp;\r\n                                                                        </button>\r\n                                                                        {isTileView === false &&\r\n                                                                            <button className=\"pull-center btn-sm btn-white btn-round\" type=\"button\" onClick={handleToggleFilmStrip} title=\"Tắt/Mở màn hình các thành viên\">\r\n                                                                                &nbsp;&nbsp;{isFilmstrip && isFilmstrip ? <AccountBoxIcon style={{ fontSize: 17 }} /> : <RecentActorsIcon style={{ fontSize: 17 }} />}&nbsp;&nbsp;\r\n                                                                            </button>\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" >Đảo chiều Camera tại chổ</div>\r\n                                                                <div className=\"profile-info-value\">\r\n                                                                    <span>\r\n                                                                        <button className=\"btn-sm btn-white btn-round\" type=\"button\" onClick={handleToggleCameraMirror} title=\"Đảo chiều Camera\">\r\n                                                                            &nbsp;&nbsp;<i className=\"ace-icon fa fa-camera-retro green bigger-120\" />&nbsp;\r\n                                                                        </button>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" >Thiết lập Market</div>\r\n                                                                <div className=\"profile-info-value\">\r\n                                                                    <span>\r\n                                                                        <button className=\"pull-center btn-sm btn-white btn-round\" type=\"button\" onClick={handleToggleVirtualBackgroundDialog}>\r\n                                                                            &nbsp;&nbsp;<i className=\"ace-icon fa fa-image green bigger-120\" />&nbsp;\r\n\r\n                                                                        </button>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-xs-12 col-sm-6\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n                                                        <div className=\"profile-user-info profile-user-info-striped\">\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" style={{ width: \"210px\" }} >Tắt míc tất cả các thành viên </div>\r\n                                                                <div className=\"profile-info-value\" >\r\n                                                                    <span>\r\n                                                                        {/* {isAudioMutedAll &&\r\n                                                                            <button className=\" btn-sm btn-white btn-round\" type=\"button\" onClick={handleMuteEveryone} title=\"Mở míc tất cả các thành viên\">\r\n                                                                                &nbsp;&nbsp;<i className=\"ace-icon fa fa-microphone green bigger-120\" />&nbsp;&nbsp;\r\n                                                                            </button>\r\n                                                                        } */}\r\n                                                                        {/* { !isAudioMutedAll && */}\r\n                                                                        <button className=\" btn-sm btn-white btn-round\" type=\"button\" onClick={handleMuteAudioAll} title=\"Tắt míc tất cả các thành viên\">\r\n                                                                            &nbsp;&nbsp;<i className=\"ace-icon fa fa-microphone-slash red bigger-120\" />&nbsp;&nbsp;\r\n                                                                        </button>\r\n                                                                        {/* } */}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" >Tắt Camera tất cả các thành viên </div>\r\n                                                                <div className=\"profile-info-value\">\r\n                                                                    <span>\r\n                                                                        <button className=\" btn-sm btn-white btn-round\" type=\"button\" onClick={handleMuteEveryoneCamera} title=\"Tắt Camera tất cả các thành viên\">\r\n                                                                            &nbsp;&nbsp;<i className=\"ace-icon fa fa-video-camera red bigger-120\" />&nbsp;\r\n                                                                        </button>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {/* <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" >Phóng to/Thu nhỏ màn hình</div>\r\n                                                                <div className=\"profile-info-value\">\r\n                                                                    <span>\r\n                                                                        <button className=\"pull-center btn-sm btn-white btn-round\" type=\"button\" onClick={handleToggleDesktop} title=\"Phóng to/thu nhỏ màn hình\">\r\n                                                                            &nbsp;&nbsp;{!fs.fullScreen ? (<i className=\"ace-icon fa fa-arrows-alt green bigger-120\" />) : <i className=\"ace-icon fa fa-compress red bigger-120\" />}&nbsp;&nbsp;\r\n                                                                        </button>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div> */}\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" >Ngắt tất cả các thành viên</div>\r\n                                                                <div className=\"profile-info-value\">\r\n                                                                    <span>\r\n                                                                        {/* <button className=\"pull-center btn-sm btn-white btn-round\" type=\"button\" onClick={fs.toggle} title=\"Phóng to/thu nhỏ màn hình\"> */}\r\n                                                                        <button className=\"pull-center btn-sm btn-white btn-round\" type=\"button\" onClick={handleHangupAll} title=\"Tắt phiên họp tất cả các thành viên\">\r\n                                                                            &nbsp;&nbsp;<i className=\"ace-icon fa fa-power-off red bigger-120\" />&nbsp;&nbsp;\r\n                                                                        </button>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-xs-12 col-sm-5\" style={{ display: (loading ? 'none' : 'block') }} >\r\n                                    <div class=\"widget-box\">\r\n                                        <div class=\"widget-header\">\r\n                                            <h5 class=\"widget-title\"><i class=\"ace-icon fa fa-desktop\"></i>THÔNG TIN PHÒNG HỌP</h5>\r\n                                        </div>\r\n                                        <div class=\"widget-body\">\r\n                                            <div className=\"widget-main\">\r\n                                                <div class=\"row\" style={{ marginLeft: \"-12px\", marginRight: \"-12px\" }}>\r\n                                                    <div className=\"col-xs-12 col-sm-9\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n                                                        <div className=\"profile-user-info profile-user-info-striped\">\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" >Tiêu đề hội nghị </div>\r\n                                                                <div className=\"profile-info-value\" style={{ minWidth: \"200px\" }}>\r\n                                                                    <span>{roomMeet.Subject}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" > Địa điểm chủ trì </div>\r\n                                                                <div className=\"profile-info-value\">\r\n                                                                    <span> {roomMeet.Location}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\" > Thời gian bắt đầu </div>\r\n                                                                <div className=\"profile-info-value\">\r\n                                                                    <span>{moment(roomMeet.StartTime).format(\"hh:mm A - DD/MM/YYYY\").toString()}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"profile-info-row\">\r\n                                                                <div className=\"profile-info-name\"> Thời gian kết thúc </div>\r\n                                                                <div className=\"profile-info-value\">\r\n                                                                    <span>{moment(roomMeet.EndTime).format(\"hh:mm A - DD/MM/YYYY\").toString()}</span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n                                                    <div className=\"col-xs-12 col-sm-3\" style={{ display: 'flex', paddingLeft: \"0px\", paddingRight: \"0px\", justifyContent: \"center\" }}>\r\n                                                            <Clock\r\n                                                                value={value}\r\n                                                                size={120}\r\n                                                            />\r\n                                                        </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div class=\"widget-box\">\r\n                                        <div class=\"widget-header\">\r\n                                            <h5 class=\"widget-title\"><i class=\"ace-icon fa fa-credit-card \"></i>Danh sách thành viên hội nghị: {numberOfParticipants} / {List_user_room_filter?.length} thành viên</h5>\r\n                                        </div><div class=\"widget-body\">\r\n                                            <div className=\"widget-main\" style={{ flex: 1, maxHeight: '55vh', overflowY: 'auto' }}>\r\n                                                <div class=\"row\">\r\n                                                    {/* <JitsiControl _api={_api} roomId={roomId} jitsiUser={jitsiUser} participants={participants} raiseHandNew={raiseHandNew} dominantSpeaker={dominantSpeaker} isAudioMuted={isAudioMuted} isVideoMuted={isVideoMuted} List_user_room={List_user_room} idLeave={idLeave} isFilmstrip={isFilmstrip} isTileView={isTileView} handleToggleTileView={handleToggleTileView} /> */}\r\n                                                    <div className=\"control-group\">\r\n                                                        <div className=\"dataTables_wrapper form-inline no-footer\">\r\n                                                            <table id=\"simple-table\" className=\"table  table-bordered table-hover\">\r\n                                                                <thead>\r\n                                                                    <tr>\r\n                                                                        {/* <th >TT</th> */}\r\n                                                                        <th >Tên thành viên</th>\r\n                                                                        <th >Trạng thái</th>\r\n                                                                        <th >Thao tác</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    {participantView}\r\n\r\n                                                                    {List_user_room_filter}\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                </div>\r\n                                                {/* <div className=\"col-xs-12 col-sm-4\" style={{ marginLeft: \"-10px\", paddingRight: \"0px\" }}>\r\n                            \r\n                        </div> */}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div >\r\n                </div >\r\n                <Footer />\r\n            </div >\r\n        </>\r\n    );\r\n};\r\nexport default withRouter(JitsiMeetAdmin);\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\ControlListAdmin.js",["510","511","512","513","514","515","516"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setAudio } from \"../jitsi/JitsiActions\"\r\n\r\nimport { useFullScreen } from \"react-browser-hooks\";\r\n\r\nconst ControlListAdmin = (props) => {\r\n    const {isAudioMuted, isVideoMuted, isTileView} = props\r\n\r\n    const [stateCamera, setStateCamera] = useState(true)\r\n    const [stateShare, setStateShare] = useState(true)\r\n    const [stateChat, setStateChat] = useState(true)\r\n    const [stateCameraMirror, setStateCameraMirror] = useState(true)\r\n    const [stateTileView, setStateTileView] = useState(true)\r\n    const [stateFull, setStateFull] = useState(true)\r\n    const [stateRaiseHand, setStateRaiseHand] = useState(true)\r\n    const [stateFilmStrip, setStateFilmStrip] = useState(true)\r\n\r\n    const [fullDesktop, setFullDesktop] = useState(false)\r\n    const [numberOfParticipants, setNumberOfParticipants] = useState()\r\n    \r\n    const { toggle, fullScreen } = useFullScreen();\r\n    const handleFullDesktop = () => {\r\n        toggle();\r\n        setFullDesktop(!fullDesktop);\r\n    }\r\n    const audioOneClick = () => {\r\n        // _api.executeCommand('toggleAudio');\r\n        // api.executeCommand('toggleFilmStrip');//An hien khung anh doc\r\n        // api.executeCommand('setLargeVideoParticipant', 'abcd1234');\r\n        // api.executeCommand('setVideoQuality', 1080);\r\n        // api.executeCommand('muteEveryone');\r\n        // api.dispose();\r\n        // api.executeCommand('avatarUrl', 'https://avatars0.githubusercontent.com/u/3671647');\r\n        // api.executeCommand('sendTones', {\r\n        //     tones: '12345#', // The dial pad touch tones to play. For example, '12345#'.\r\n        //     duration: 200, // Optional. The number of milliseconds each tone should play. The default is 200.\r\n        //     pause: 200 // Optional. The number of milliseconds between each tone. The default is 200.\r\n        // });\r\n        // setStateAudio(!stateAudio)\r\n        // dispatch(setAudio(!jitsiState.stateAudio))\r\n        // console.log(jitsiState.stateAudio)\r\n    }\r\n    const videoOneClick = () => {\r\n        // _api.executeCommand('toggleVideo');\r\n        setStateCamera(!stateCamera)\r\n    }\r\n    const shareScreenClick = () => {\r\n        // _api.executeCommand('toggleShareScreen');\r\n        setStateShare(!stateShare)\r\n    }\r\n    const chatClick = () => {\r\n        // _api.executeCommand('toggleChat');\r\n        setStateChat(!stateChat)\r\n    }\r\n    const cameraMirrorClick = () => {\r\n        // _api.executeCommand('toggleCameraMirror');\r\n        // room.setLocalParticipantProperty('raised-hand', true)\r\n        setStateCameraMirror(!stateCameraMirror)\r\n    }\r\n    const tileViewClick = () => {\r\n        // _api.executeCommand('toggleTileView');\r\n        setStateTileView(!stateTileView)\r\n    }\r\n    const filmStripClick = () => {\r\n        // _api.executeCommand('toggleFilmStrip');\r\n        setStateFilmStrip(!stateFilmStrip)\r\n    }\r\n\r\n    const raiseHandClick = () => {\r\n        // const infoMy = api.getParticipantsInfo()\r\n        // console.log(infoMy)\r\n        // console.log(infoMy[0].participantId)\r\n        // const numberOfParticipants = api.getNumberOfParticipants();\r\n        // console.log(numberOfParticipants)\r\n        // api.addEventListener(\r\n        //     {\r\n        //         id: infoMy[0].participantId,         \r\n        //         handRaised: true // whether hand raised or lowered\r\n        //     }\r\n        //   );\r\n        //   console.log(handleParticipantLeft())\r\n        // _api.executeCommand('toggleRaiseHand');\r\n        setStateRaiseHand(!stateRaiseHand)\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar-buttons navbar-header \" role=\"navigation\" style={{ marginTop: '10px', textAlign: \"center\" }}>\r\n            <div className=\"pull-right action-buttons\">\r\n                <button className=\"blue\" onClick={audioOneClick} title=\"Tắt/Mở Micro\">\r\n                    {/* {jitsiState.stateAudioAll ? (<i className=\"ace-icon fa fa-microphone green bigger-160\" />) : (<i className=\"ace-icon fa fa-microphone-slash red bigger-160\" />)} */}\r\n                    {!isAudioMuted ? (<i className=\"ace-icon fa fa-microphone green bigger-160\" />) : (<i className=\"ace-icon fa fa-microphone-slash red bigger-160\" />)}\r\n                </button>\r\n                <span className=\"vbar\" />\r\n                <button className=\"blue\" onClick={videoOneClick} title=\"Tắt/Mở Camera\">\r\n                    {/* {stateCamera ? (<i className=\"ace-icon fa fa-video-camera green bigger-160\" />) : (<i className=\"ace-icon fa fa-file-movie-o red bigger-160\" />)} */}\r\n                    {!isVideoMuted ? (<i className=\"ace-icon fa fa-video-camera green bigger-160\" />) : (<i className=\"ace-icon fa fa-file-movie-o red bigger-160\" />)}\r\n                </button>\r\n                <button className=\"blue\" onClick={shareScreenClick} title=\"Chia sẻ màn hình\">\r\n                    {stateShare ? (<i className=\"ace-icon fa fa-share-square-o green bigger-160\" />) : (<i className=\"ace-icon fa fa-share-square red bigger-160\" />)}\r\n                </button>\r\n\r\n                <button className=\"blue\" onClick={chatClick} title=\"Trao đổi thông tin\">\r\n                    {stateChat ? (<i className=\"ace-icon fa  fa-comments-o  green bigger-160\" />) : (<i className=\"ace-icon fa fa-comments-o red bigger-160\" />)}\r\n\r\n                </button>\r\n                <button className=\"blue\" onClick={raiseHandClick} title=\"Đăng ký phát biểu\">\r\n                    {stateRaiseHand ? (<i className=\"ace-icon fa fa-hand-paper-o  green bigger-160\" />) : (<i className=\"ace-icon fa fa-hand-rock-o red bigger-160\" />)}\r\n                </button>\r\n                <button className=\"blue\" onClick={tileViewClick} title=\"Thay đổi giao diện hình ảnh\">\r\n                    {!isTileView ? (<i className=\"ace-icon fa fa-th-large green bigger-160\" />) : (<i className=\"ace-icon fa fa-desktop red bigger-160\" />)}\r\n\r\n                </button>\r\n                <button className=\"blue\" onClick={handleFullDesktop} title=\"Phóng to/Thu nhỏ màn hình\">\r\n                    {/* <i className=\"ace-icon fa fa-external-link-square fa fa-film green bigger-160\" /> */}\r\n                    {!fullDesktop ? (<i className=\"ace-icon fa fa-arrows-alt green bigger-160\" />) : (<i className=\"ace-icon fa fa-compress red bigger-160\" />)}\r\n\r\n                </button>\r\n                <button className=\"blue\" onClick={cameraMirrorClick} title=\"Lật hình ảnh Camera\">\r\n                    {stateCameraMirror ? (<i className=\"ace-icon fa fa-exchange  green bigger-160\" />) : (<i className=\"ace-icon fa fa-file-image-o red bigger-160\" />)}\r\n\r\n                </button>\r\n                <button className=\"blue\" onClick={filmStripClick} title=\"Hiển thị/Tắt hiển thị hình ảnh các thành viên\">\r\n                    {stateFilmStrip ? (<i className=\"ace-icon fa fa-film  green bigger-160\" />) : (<i className=\"ace-icon fa fa-film red bigger-160\" />)}\r\n\r\n                </button>\r\n                {(numberOfParticipants) && (\r\n                    <button className=\"blue\" title=\"Hiển thị/Tắt hiển thị hình ảnh các thành viên\">\r\n                        <i className=\"ace-icon fa fa-group green bigger-160\" />\r\n\r\n                        &nbsp;&nbsp; {numberOfParticipants}\r\n                    </button>\r\n                )}\r\n\r\n\r\n            </div>\r\n            {/* <button href=\"/\"><span className=\"badge badge-important\">Trang chủ</span></button>\r\n                  <span className=\"badge badge-important\"><a className=\"dropdown-toggle\" href=\"/\"></a>Trang chủ</span> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ControlListAdmin;\r\n",["517","518"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiControl.js",["519","520","521","522","523","524","525","526","527","528","529"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\jitsi\\JitsiMeetClient.js",["530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserCreate.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserPagination.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserList.js",["576","577","578","579","580","581","582","583","584","585","586","587","588"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserListItem.js",["589","590","591","592","593"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// import CalendarListDetail from './CalendarListDetail';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n    },\r\n    large: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction UserListItem(props) {\r\n    const classes = useStyles();\r\n    const { index, pageVisited, user, handleDelUser, handleEditUser } = props\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEdit = (id) => {\r\n        handleEditUser(id)\r\n    }\r\n    const handleDel = (id, user) => {\r\n        handleDelUser(id, user)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr key={index}>\r\n                <td style={{ textAlign: \"center\" }}>\r\n                    {index + pageVisited + 1}\r\n                </td>\r\n                <td style={{ textAlign: \"center\" }}>\r\n                    <div className={classes.root}>\r\n                        {/* <Avatar alt={user.last_name} src={user.image} className={classes.small} style={{margin:\"0px\"}} /> */}\r\n                        <Avatar alt={user.last_name} src={`http://localhost:8000${user.image}`} style={{margin:\"-6px\", }} />\r\n                        {/* <Avatar alt=\"Khac Hieu\" src={user.image} className={classes.large} /> */}\r\n                    </div>\r\n                </td>\r\n                <td >\r\n                    <span >{user.first_name}</span>\r\n                </td>\r\n                <td >\r\n                    <span >{user.last_name}</span>\r\n                </td>\r\n                <td style={{ textAlign: \"center\" }} >\r\n                    {(() => {\r\n                        switch (String(user.groups)) {\r\n                            case '1': return <span>Quản trị hệ thống</span>;\r\n                            case '2': return <span>Chủ trì phòng họp</span>;\r\n                            case '3': return <span>Thành viên</span>;\r\n                            default: return <span>Thành viên</span>;\r\n                        }\r\n                    })()}\r\n\r\n                </td>\r\n                <td style={{ textAlign: \"center\" }}>\r\n                    {user.phone &&\r\n                        <span>{user.phone} </span>\r\n                    }\r\n                </td>\r\n                <td style={{ textAlign: \"center\" }}>\r\n                    {user.date_joined &&\r\n                        <span>{moment(user.date_joined).format(\"hh:mm A - DD/MM/YYYY\").toString()} </span>\r\n                    }\r\n                </td>\r\n                <td style={{ textAlign: \"center\", color: \"green\" }}>\r\n                    {(() => {\r\n                        switch (user.is_active) {\r\n                            case true: return <span>Đã kích hoạt</span>;\r\n                            default: return <span>Chưa kích hoạt</span>;\r\n                        }\r\n                    })()}\r\n                    <span>{user.is_active}</span>\r\n                </td>\r\n                <td>\r\n                    <div className=\"hidden-sm hidden-xs \">\r\n                        <button className='btn-xs btn-success' >\r\n                            <i className='ace-icon bigger-120 fa fa-eye' title=\"Xem chi tiết\" />\r\n                        </button>\r\n                        <button className='btn-xs btn-btn-info' onClick={() => handleEdit(user.id)}>\r\n                            {/* <Link to={`/user_edit/${user.id}`}> */}\r\n                            <i className=\"ace-icon fa fa-pencil bigger-120\" />\r\n                            {/* </Link> */}\r\n                        </button>\r\n                        <button className=\"btn-xs btn-danger\">\r\n                            <i className=\"ace-icon fa fa-trash-o bigger-120\" onClick={() => handleDel(user.id, user.user)} />\r\n                        </button>\r\n                        {/* <button className=\"btn-xs btn-warning\">\r\n                            <i className=\"ace-icon fa fa-flag bigger-120\" />\r\n                        </button> */}\r\n                    </div>\r\n\r\n                </td>\r\n            </tr>\r\n            {/* {Id ? <CalendarListDetail  calendar={props.calendar} idSelected={idSelected} isActive={isActive} isActive2={isActive2} pageVisited={pageVisited} index={index} handleEditCalendar={handleEditCalendar}/> : \"\"} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListItem\r\n\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserAdd.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserProfileAdd.js",["594","595","596","597"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\"; // new import\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Form, FormControl, } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport { createUser } from \"./UserActions\"; // new import\r\n\r\nfunction UserProfileAdd() {\r\n  const [first_name, setFirst_name] = useState()\r\n  const [last_name, setLast_name] = useState()\r\n  const [email, setEmail] = useState()\r\n  const [groups, setGroups] = useState()\r\n  const [username, setUsername] = useState()\r\n  const [password, setPassword] = useState()\r\n  const [re_password, setRe_password] = useState()\r\n  const dispatch = useDispatch();\r\n\r\n  const groupsFix = [\r\n    { value: 1, label: \"Quản trị hệ thống\" },\r\n    { value: 2, label: \"Chủ trì phòng họp\" },\r\n    { value: 3, label: \"Thành viên\" }\r\n  ]\r\n\r\n  const handleChangePro = (groups) => {\r\n    setGroups(groups)\r\n  }\r\n\r\n  const onSignupClick = () => {\r\n    const userData = {\r\n      first_name: first_name,\r\n      last_name: last_name,\r\n      email: email,\r\n      groups: groups,\r\n      username: username,\r\n      password: password,\r\n      re_password: re_password\r\n    };\r\n    dispatch(createUser(userData)); // <-- signup new user request\r\n  };\r\n\r\n  return (\r\n    <Col md=\"12\">\r\n      <Form>\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Tên thường dùng</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            placeholder=\"Nhập Tên thường dùng\"\r\n            value={username}\r\n            onChange={e => setFirst_name(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Họ và tên lót</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            placeholder=\"Nhập Họ và tên lót\"\r\n            value={last_name}\r\n            onChange={e => setLast_name(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Địa chỉ Mail</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"email\"\r\n            placeholder=\"Nhập Địa chỉ Mail\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n      \r\n\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Chọn Vai trò</Form.Label>\r\n          <Select\r\n            value={groups}\r\n            onChange={handleChangePro}\r\n            options={groupsFix}\r\n            placeholder={\"Chọn Vai trò\"}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"passwordId\">\r\n          <Form.Label>Nhập mật khẩu</Form.Label>\r\n          <Form.Control\r\n            isInvalid={createUser.passwordError}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Nhập mật khẩu\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {createUser.passwordError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"re_passwordId\">\r\n          <Form.Label>Nhập lại mật khẩu:</Form.Label>\r\n          <Form.Control\r\n            isInvalid={createUser.re_passwordError}\r\n            type=\"password\"\r\n            name=\"re_password\"\r\n            placeholder=\"Nhập lại mật khẩu\"\r\n            value={re_password}\r\n            onChange={e => setRe_password(e.target.value)}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {createUser.re_passwordError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n      <div style={{ backgroundColor: \"#EFF3F8\", fontSize: \"20px\", textAlign: \"center\", height: \"50px\", marginTop: \"6px\" }}>\r\n        <button type=\"submit\" className=\"btn-sm btn-success\" onClick={onSignupClick} style={{  marginTop: \"6px\" }}>\r\n          <i className=\"ace-icon fa fa-plus icon-on-right bigger-110\" />&nbsp;\r\n          Thêm mới\r\n        </button>\r\n      </div>\r\n\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default withRouter(UserProfileAdd)",["598","599"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\ProfileReducer.js",["600","601","602"],"// frontend/src/components/SignupReducer.js\r\n\r\n// import needed actions\r\nimport {\r\n  CREATE_PROFILE_ERROR,\r\n  CREATE_PROFILE_SUBMITTED,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_SUBMITTED,\r\n  UPDATE_PROFILE_ERROR,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_REQUEST,\r\n  GET_PROFILE_ERROR,\r\n} from \"./UserTypes\";\r\n\r\n// define the initial state of the signup store\r\nconst initialState = {\r\n  responseting: false,\r\n  success: false,\r\n  messege: null,\r\n  data: [],\r\n  first_nameError: \"\",\r\n  last_nameError: \"\",\r\n  imageError: \"\",\r\n  isSubimtted: false\r\n};\r\n\r\n// define how action will change the state of the store\r\nexport const profileReducer = (state = initialState, action) => {\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case GET_PROFILE_REQUEST:\r\n      return {\r\n        ...state,\r\n        responseting: true,\r\n      };\r\n    case GET_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        responseting: false,\r\n        success: true,\r\n        data: action.payload\r\n      };\r\n    case UPDATE_PROFILE_SUBMITTED:\r\n      return {\r\n        first_nameError: \"\",\r\n        last_nameError: \"\",\r\n        imageError: \"\",\r\n        isSubimtted: true\r\n      };\r\n    case UPDATE_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        responseting: false,\r\n        success: false,\r\n        messege: action.payload\r\n      };\r\n\r\n    case UPDATE_PROFILE_ERROR:\r\n      const errorState = {\r\n        first_nameError: \"\",\r\n        last_nameError: \"\",\r\n        imageError: \"\",\r\n        isSubimtted: false\r\n      };\r\n      if (action.errorData.hasOwnProperty(\"first_name\")) {\r\n        errorState.first_nameError = action.errorData[\"first_name\"];\r\n      }\r\n      if (action.errorData.hasOwnProperty(\"last_name\")) {\r\n        errorState.last_nameError = action.errorData[\"last_name\"];\r\n      }\r\n      if (action.errorData.hasOwnProperty(\"iamge\")) {\r\n        errorState.imageError = action.errorData[\"image\"];\r\n      }\r\n      return errorState;\r\n    default:\r\n      return state;\r\n\r\n  }\r\n}","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\ProfileModal.js",["603","604","605","606","607","608","609","610","611"],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UserUpdate.js",[],"D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\ProfileUpdate.js",["612","613","614","615","616","617","618"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\"; // new import\r\nimport { Col, Form, FormControl, } from \"react-bootstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Select from \"react-select\";\r\nimport { getProfile, getProfiles, updateProfile } from \"./UserActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n}));\r\n\r\nfunction ProfileUpdate(props) {\r\n  const classes = useStyles();\r\n  const profile = useSelector(state => state.profile.data)\r\n  console.log(profile)\r\n  console.log(props.id)\r\n  const [first_name, setFirst_name] = useState()\r\n  const [last_name, setLast_name] = useState()\r\n  const [email, setEmail] = useState()\r\n  const [groups, setGroups] = useState()\r\n  const [unit_id, setUnit_id] = useState()\r\n  const [phone, setPhone] = useState()\r\n  const [city, setCity] = useState()\r\n  const [sort_id, setSort_id] = useState()\r\n  const [user, setUser] = useState()\r\n  const src = \"http://127.0.0.1:8000/media/profiles/profile-pic.jpg\"\r\n  const [image, setImage] = useState(src)\r\n  const [imagePreviewUrl, setImagePreviewUrl] = useState(null)\r\n  const dispatch = useDispatch();\r\n\r\n  const groupsFix = [\r\n    { value: 1, label: \"Quản trị hệ thống\" },\r\n    { value: 2, label: \"Chủ trì phòng họp\" },\r\n    { value: 3, label: \"Thành viên\" }\r\n  ]\r\n\r\n  const handleChangePro = (groups) => {\r\n    setGroups(groups)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFirst_name(profile.first_name ? profile.first_name : \"\")\r\n    setLast_name(profile.last_name ? profile.last_name : \"\")\r\n    setEmail(profile.email ? profile.email : \"\")\r\n    setGroups(profile.groups ? profile.groups : \"\")\r\n    setUnit_id(profile.unit_id ? profile.unit_id : 1)\r\n    setPhone(profile.phone ? profile.phone : \"\")\r\n    setSort_id(profile.sort_id ? profile.sort_id : \"\")\r\n    setImage(profile.image ? profile.image : src)\r\n    setUser(profile.user)\r\n  }, [profile.id])\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getProfiles())\r\n  // }, [])\r\n\r\n\r\n  const onUpdateClick = () => {\r\n    let form_data = new FormData();\r\n    if(image.name){\r\n      form_data.append('image', image, image.name)\r\n    }\r\n    form_data.append('id', props.id)\r\n    form_data.append('first_name', first_name)\r\n    form_data.append('last_name', last_name)\r\n    form_data.append('groups', groups.value?groups.value: groups)\r\n    form_data.append('unit_id', unit_id)\r\n    form_data.append('phone', phone)\r\n    form_data.append('sort_id', sort_id)\r\n    form_data.append('user', user)\r\n    dispatch(updateProfile(props.id, form_data)); // <-- signup new user request\r\n    props.setOpen2(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.setOpen2(false);\r\n  }\r\n\r\n  const handleChangeImage = (e) =>{\r\n    setImage(e.target.files[0])\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n     setImagePreviewUrl(reader.result)\r\n    }\r\n    reader.readAsDataURL(e.target.files[0])\r\n  }\r\n\r\n  console.log(image)\r\n\r\n  return (\r\n    <Col md=\"12\">\r\n      <Form>\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Họ và tên</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            placeholder=\"Nhập Tên thường dùng\"\r\n            value={first_name}\r\n            onChange={e => setFirst_name(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Tên hiển thị</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            placeholder=\"Nhập Họ và tên lót\"\r\n            value={last_name}\r\n            onChange={e => setLast_name(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Số điện thoại</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            placeholder=\"Nhập Số điện thoại\"\r\n            value={phone}\r\n            onChange={e => setPhone(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Chọn Vai trò</Form.Label>\r\n          <Select\r\n            value={groups}\r\n            onChange={handleChangePro}\r\n            options={groupsFix}\r\n            placeholder={\"Chọn Vai trò\"}\r\n            defaultValue={groupsFix[2]}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Đơn vị</Form.Label>\r\n          <Select\r\n            value={unit_id}\r\n            onChange={handleChangePro}\r\n            options={groupsFix}\r\n            placeholder={\"Chọn Đơn vị\"}\r\n          />\r\n        </Form.Group>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-sm-9\" style={{marginLeft:\"-12px\"}}>\r\n            <Form.Group controlId=\"usernameId\">\r\n              <Form.Label>Chọn Vai trò</Form.Label>\r\n              <input\r\n                className='form-control'\r\n                type='file'\r\n                onChange={handleChangeImage}\r\n              // accept=\"image/png, image/jpeg\" \r\n              />\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"col-xs-12 col-sm-3\">\r\n          <div className={classes.root}>\r\n            {/* <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" className={classes.small} />\r\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" /> */}\r\n            <Avatar alt=\"Khac Hieu\" src={imagePreviewUrl?imagePreviewUrl:image} className={classes.large} />\r\n          </div>\r\n          </div>\r\n          \r\n\r\n        </div>\r\n\r\n        <Form.Group controlId=\"usernameId\">\r\n          <Form.Label>Thứ tự hiển thị</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"sort_id\"\r\n            placeholder=\"Nhập Địa chỉ Mail\"\r\n            value={sort_id}\r\n            onChange={e => setSort_id(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n      </Form>\r\n      <div style={{ backgroundColor: \"#EFF3F8\", fontSize: \"20px\", textAlign: \"center\", height: \"50px\", marginTop: \"6px\" }}>\r\n        <button type=\"submit\" className=\"btn-sm btn-success\" onClick={onUpdateClick} style={{ marginTop: \"6px\" }}>\r\n          <i className=\"ace-icon fa fa-plus icon-on-right bigger-110\" />&nbsp;\r\n          Cập nhật\r\n        </button>\r\n        <button type=\"submit\" className=\"btn-sm \" onClick={handleClose} style={{ marginTop: \"6px\" }}>\r\n          <i className=\"ace-icon fa fa-close icon-on-right bigger-110\" />&nbsp;\r\n          Đóng\r\n        </button>\r\n      </div>\r\n\r\n    </Col>\r\n  );\r\n}\r\nexport default withRouter(ProfileUpdate)","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\ProfilesReducer.js",["619"],"// frontend/src/components/SignupReducer.js\r\n\r\n// import needed actions\r\nimport {\r\n  GET_PROFILES_SUCCESS,\r\n  GET_PROFILES_REQUEST,\r\n  UPDATE_PROFILES_SUCCESS,\r\n  DELETE_PROFILE_SUCCESS,\r\n} from \"./UserTypes\";\r\n\r\n// define the initial state of the signup store\r\nconst initialState = {\r\n  responseting: false,\r\n  success: false,\r\n  messege: null,\r\n  data: [],\r\n  isSubimtted: false\r\n};\r\n\r\n// define how action will change the state of the store\r\nexport const profilesReducer = (state = initialState, action) => {\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case GET_PROFILES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        responseting: false,\r\n        success: true,\r\n        data: action.payload\r\n      };\r\n    case UPDATE_PROFILES_SUCCESS:\r\n      const updateProfile = state.data.map(p=>{\r\n        if(action.payload.id === p.id){\r\n          return { ...p, ...action.payload };\r\n        }\r\n        return p\r\n      })\r\n      return {\r\n        ...state,\r\n        data: updateProfile\r\n      };\r\n      case DELETE_PROFILE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          data: state.data.filter(p => p.id !== action.payload)\r\n        };\r\n      \r\n     \r\n    default:\r\n      return state;\r\n\r\n  }\r\n}\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\UnitsReducer.js",["620","621"],"// frontend/src/components/SignupReducer.js\r\n\r\n// import needed actions\r\nimport {\r\n  CREATE_UNIT_ERROR,\r\n  CREATE_UNIT_SUBMITTED,\r\n  CREATE_UNIT_SUCCESS,\r\n  GET_UNITS_REQUEST,\r\n  GET_UNITS_SUCCESS,\r\n  GET_UNITS_ERROR,\r\n} from \"./UserTypes\";\r\n\r\n// define the initial state of the signup store\r\nconst initialState = {\r\n  responseting: false,\r\n  success: false,\r\n  messege: null,\r\n  data: [],\r\n  isSubimtted: false\r\n};\r\n\r\n// define how action will change the state of the store\r\nexport const unitsReducer = (state = initialState, action) => {\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case GET_UNITS_REQUEST:\r\n      return {\r\n        ...state,\r\n        responseting: true,\r\n      };\r\n    case GET_UNITS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        responseting: false,\r\n        success: true,\r\n        data: action.payload\r\n      };\r\n    case GET_UNITS_ERROR:\r\n      return {\r\n        ...state,\r\n        responseting: false,\r\n        success: false,\r\n        messege: action.payload\r\n      };\r\n    case CREATE_UNIT_SUBMITTED:\r\n      return {\r\n        isSubimtted: true\r\n      };\r\n    case CREATE_UNIT_ERROR:\r\n      const errorState = {\r\n        isSubimtted: false\r\n      };\r\n      \r\n    case CREATE_UNIT_SUCCESS:\r\n      return {\r\n        isSubimtted: false\r\n      };\r\n     \r\n    default:\r\n      return state;\r\n\r\n  }\r\n}","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\users\\Recursive.js",["622"],"import React from 'react'\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nfunction Recursive(props) {\r\n\r\n    const {item, children} = props\r\n    const uId=item.id\r\n    const Test =(id) =>{\r\n        \r\n        \r\n    }\r\n\r\n\r\n    let childitems = null;\r\n    if (children) {\r\n        childitems = children.map((childitem, index) => {\r\n            return (\r\n                <Recursive item={childitem} children={childitem.children} key={index} />\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <li key={uId} style={{cursor: 'pointer'}}>\r\n            \r\n            <NavLink to={`/user-create/${uId}/`} activeStyle={{color:\"green\"}}>{item.unit_name}</NavLink>\r\n            {childitems ? <ul >{childitems}</ul> : null}\r\n        </li>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Recursive)\r\n","D:\\DRF-REACT-2021\\d-j-login\\react-socket-chat\\client\\src\\components\\dashboard\\UpdateProfile.js",["623"],{"ruleId":"624","severity":1,"message":"625","line":2,"column":10,"nodeType":"626","messageId":"627","endLine":2,"endColumn":20},{"ruleId":"624","severity":1,"message":"628","line":10,"column":10,"nodeType":"626","messageId":"627","endLine":10,"endColumn":22},{"ruleId":"624","severity":1,"message":"629","line":17,"column":7,"nodeType":"626","messageId":"627","endLine":17,"endColumn":21},{"ruleId":"624","severity":1,"message":"630","line":18,"column":7,"nodeType":"626","messageId":"627","endLine":18,"endColumn":21},{"ruleId":"624","severity":1,"message":"631","line":31,"column":11,"nodeType":"626","messageId":"627","endLine":31,"endColumn":17},{"ruleId":"624","severity":1,"message":"632","line":31,"column":19,"nodeType":"626","messageId":"627","endLine":31,"endColumn":29},{"ruleId":"633","severity":1,"message":"634","line":54,"column":6,"nodeType":"635","endLine":54,"endColumn":8,"suggestions":"636"},{"ruleId":"637","replacedBy":"638"},{"ruleId":"639","replacedBy":"640"},{"ruleId":"624","severity":1,"message":"641","line":2,"column":27,"nodeType":"626","messageId":"627","endLine":2,"endColumn":36},{"ruleId":"642","severity":1,"message":"643","line":45,"column":29,"nodeType":"644","endLine":45,"endColumn":40},{"ruleId":"642","severity":1,"message":"643","line":47,"column":29,"nodeType":"644","endLine":47,"endColumn":56},{"ruleId":"642","severity":1,"message":"643","line":57,"column":29,"nodeType":"644","endLine":57,"endColumn":44},{"ruleId":"642","severity":1,"message":"643","line":59,"column":29,"nodeType":"644","endLine":59,"endColumn":56},{"ruleId":"637","replacedBy":"645"},{"ruleId":"639","replacedBy":"646"},{"ruleId":"637","replacedBy":"647"},{"ruleId":"639","replacedBy":"648"},{"ruleId":"624","severity":1,"message":"649","line":37,"column":9,"nodeType":"626","messageId":"627","endLine":37,"endColumn":16},{"ruleId":"633","severity":1,"message":"650","line":83,"column":6,"nodeType":"635","endLine":83,"endColumn":17,"suggestions":"651"},{"ruleId":"633","severity":1,"message":"652","line":100,"column":6,"nodeType":"635","endLine":100,"endColumn":8,"suggestions":"653"},{"ruleId":"624","severity":1,"message":"654","line":107,"column":9,"nodeType":"626","messageId":"627","endLine":107,"endColumn":20},{"ruleId":"655","severity":1,"message":"656","line":115,"column":256,"nodeType":"657","messageId":"658","endLine":115,"endColumn":258},{"ruleId":"655","severity":1,"message":"656","line":124,"column":156,"nodeType":"657","messageId":"658","endLine":124,"endColumn":158},{"ruleId":"642","severity":1,"message":"643","line":209,"column":104,"nodeType":"644","endLine":209,"endColumn":158},{"ruleId":"642","severity":1,"message":"643","line":221,"column":104,"nodeType":"644","endLine":221,"endColumn":158},{"ruleId":"624","severity":1,"message":"625","line":3,"column":10,"nodeType":"626","messageId":"627","endLine":3,"endColumn":20},{"ruleId":"633","severity":1,"message":"659","line":51,"column":6,"nodeType":"635","endLine":51,"endColumn":35,"suggestions":"660"},{"ruleId":"637","replacedBy":"661"},{"ruleId":"639","replacedBy":"662"},{"ruleId":"624","severity":1,"message":"663","line":1,"column":8,"nodeType":"626","messageId":"627","endLine":1,"endColumn":14},{"ruleId":"624","severity":1,"message":"664","line":1,"column":38,"nodeType":"626","messageId":"627","endLine":1,"endColumn":49},{"ruleId":"624","severity":1,"message":"665","line":42,"column":12,"nodeType":"626","messageId":"627","endLine":42,"endColumn":25},{"ruleId":"624","severity":1,"message":"666","line":42,"column":27,"nodeType":"626","messageId":"627","endLine":42,"endColumn":43},{"ruleId":"624","severity":1,"message":"667","line":44,"column":12,"nodeType":"626","messageId":"627","endLine":44,"endColumn":25},{"ruleId":"624","severity":1,"message":"668","line":44,"column":27,"nodeType":"626","messageId":"627","endLine":44,"endColumn":43},{"ruleId":"624","severity":1,"message":"669","line":47,"column":18,"nodeType":"626","messageId":"627","endLine":47,"endColumn":25},{"ruleId":"624","severity":1,"message":"631","line":49,"column":13,"nodeType":"626","messageId":"627","endLine":49,"endColumn":19},{"ruleId":"624","severity":1,"message":"632","line":49,"column":21,"nodeType":"626","messageId":"627","endLine":49,"endColumn":31},{"ruleId":"633","severity":1,"message":"670","line":55,"column":8,"nodeType":"635","endLine":55,"endColumn":10,"suggestions":"671"},{"ruleId":"624","severity":1,"message":"672","line":64,"column":12,"nodeType":"626","messageId":"627","endLine":64,"endColumn":16},{"ruleId":"624","severity":1,"message":"673","line":64,"column":18,"nodeType":"626","messageId":"627","endLine":64,"endColumn":25},{"ruleId":"624","severity":1,"message":"674","line":68,"column":12,"nodeType":"626","messageId":"627","endLine":68,"endColumn":27},{"ruleId":"624","severity":1,"message":"675","line":136,"column":15,"nodeType":"626","messageId":"627","endLine":136,"endColumn":19},{"ruleId":"624","severity":1,"message":"675","line":148,"column":15,"nodeType":"626","messageId":"627","endLine":148,"endColumn":19},{"ruleId":"624","severity":1,"message":"676","line":199,"column":11,"nodeType":"626","messageId":"627","endLine":199,"endColumn":25},{"ruleId":"633","severity":1,"message":"677","line":210,"column":8,"nodeType":"635","endLine":210,"endColumn":10,"suggestions":"678"},{"ruleId":"633","severity":1,"message":"679","line":280,"column":8,"nodeType":"635","endLine":280,"endColumn":18,"suggestions":"680"},{"ruleId":"624","severity":1,"message":"681","line":309,"column":11,"nodeType":"626","messageId":"627","endLine":309,"endColumn":33},{"ruleId":"682","severity":1,"message":"683","line":359,"column":37,"nodeType":"684","endLine":359,"endColumn":131},{"ruleId":"685","severity":1,"message":"686","line":360,"column":41,"nodeType":"684","endLine":360,"endColumn":132},{"ruleId":"682","severity":1,"message":"687","line":371,"column":45,"nodeType":"684","endLine":371,"endColumn":48},{"ruleId":"624","severity":1,"message":"641","line":1,"column":27,"nodeType":"626","messageId":"627","endLine":1,"endColumn":36},{"ruleId":"624","severity":1,"message":"688","line":3,"column":10,"nodeType":"626","messageId":"627","endLine":3,"endColumn":23},{"ruleId":"624","severity":1,"message":"689","line":3,"column":25,"nodeType":"626","messageId":"627","endLine":3,"endColumn":36},{"ruleId":"624","severity":1,"message":"690","line":3,"column":48,"nodeType":"626","messageId":"627","endLine":3,"endColumn":59},{"ruleId":"624","severity":1,"message":"691","line":3,"column":61,"nodeType":"626","messageId":"627","endLine":3,"endColumn":71},{"ruleId":"624","severity":1,"message":"692","line":19,"column":12,"nodeType":"626","messageId":"627","endLine":19,"endColumn":21},{"ruleId":"624","severity":1,"message":"693","line":19,"column":23,"nodeType":"626","messageId":"627","endLine":19,"endColumn":35},{"ruleId":"624","severity":1,"message":"694","line":24,"column":34,"nodeType":"626","messageId":"627","endLine":24,"endColumn":57},{"ruleId":"624","severity":1,"message":"632","line":36,"column":21,"nodeType":"626","messageId":"627","endLine":36,"endColumn":31},{"ruleId":"637","replacedBy":"695"},{"ruleId":"639","replacedBy":"696"},{"ruleId":"637","replacedBy":"697"},{"ruleId":"639","replacedBy":"698"},{"ruleId":"624","severity":1,"message":"641","line":1,"column":27,"nodeType":"626","messageId":"627","endLine":1,"endColumn":36},{"ruleId":"624","severity":1,"message":"699","line":2,"column":23,"nodeType":"626","messageId":"627","endLine":2,"endColumn":34},{"ruleId":"624","severity":1,"message":"700","line":4,"column":10,"nodeType":"626","messageId":"627","endLine":4,"endColumn":30},{"ruleId":"624","severity":1,"message":"701","line":4,"column":32,"nodeType":"626","messageId":"627","endLine":4,"endColumn":53},{"ruleId":"624","severity":1,"message":"702","line":10,"column":12,"nodeType":"626","messageId":"627","endLine":10,"endColumn":26},{"ruleId":"624","severity":1,"message":"703","line":10,"column":28,"nodeType":"626","messageId":"627","endLine":10,"endColumn":45},{"ruleId":"624","severity":1,"message":"704","line":1,"column":17,"nodeType":"626","messageId":"627","endLine":1,"endColumn":25},{"ruleId":"624","severity":1,"message":"641","line":1,"column":27,"nodeType":"626","messageId":"627","endLine":1,"endColumn":36},{"ruleId":"624","severity":1,"message":"705","line":4,"column":8,"nodeType":"626","messageId":"627","endLine":4,"endColumn":26},{"ruleId":"624","severity":1,"message":"706","line":8,"column":22,"nodeType":"626","messageId":"627","endLine":8,"endColumn":31},{"ruleId":"624","severity":1,"message":"707","line":9,"column":23,"nodeType":"626","messageId":"627","endLine":9,"endColumn":33},{"ruleId":"624","severity":1,"message":"708","line":15,"column":12,"nodeType":"626","messageId":"627","endLine":15,"endColumn":25},{"ruleId":"633","severity":1,"message":"709","line":37,"column":8,"nodeType":"635","endLine":37,"endColumn":18,"suggestions":"710"},{"ruleId":"624","severity":1,"message":"711","line":39,"column":11,"nodeType":"626","messageId":"627","endLine":39,"endColumn":19},{"ruleId":"624","severity":1,"message":"712","line":15,"column":13,"nodeType":"626","messageId":"627","endLine":15,"endColumn":25},{"ruleId":"633","severity":1,"message":"652","line":57,"column":8,"nodeType":"635","endLine":57,"endColumn":10,"suggestions":"713"},{"ruleId":"624","severity":1,"message":"714","line":112,"column":11,"nodeType":"626","messageId":"627","endLine":112,"endColumn":25},{"ruleId":"624","severity":1,"message":"715","line":6,"column":43,"nodeType":"626","messageId":"627","endLine":6,"endColumn":54},{"ruleId":"624","severity":1,"message":"716","line":28,"column":11,"nodeType":"626","messageId":"627","endLine":28,"endColumn":27},{"ruleId":"637","replacedBy":"717"},{"ruleId":"639","replacedBy":"718"},{"ruleId":"624","severity":1,"message":"719","line":2,"column":10,"nodeType":"626","messageId":"627","endLine":2,"endColumn":21},{"ruleId":"624","severity":1,"message":"699","line":2,"column":23,"nodeType":"626","messageId":"627","endLine":2,"endColumn":34},{"ruleId":"624","severity":1,"message":"720","line":8,"column":13,"nodeType":"626","messageId":"627","endLine":8,"endColumn":23},{"ruleId":"624","severity":1,"message":"721","line":10,"column":12,"nodeType":"626","messageId":"627","endLine":10,"endColumn":22},{"ruleId":"624","severity":1,"message":"722","line":11,"column":12,"nodeType":"626","messageId":"627","endLine":11,"endColumn":21},{"ruleId":"624","severity":1,"message":"723","line":12,"column":12,"nodeType":"626","messageId":"627","endLine":12,"endColumn":19},{"ruleId":"624","severity":1,"message":"724","line":13,"column":12,"nodeType":"626","messageId":"627","endLine":13,"endColumn":20},{"ruleId":"624","severity":1,"message":"725","line":14,"column":12,"nodeType":"626","messageId":"627","endLine":14,"endColumn":23},{"ruleId":"624","severity":1,"message":"726","line":16,"column":12,"nodeType":"626","messageId":"627","endLine":16,"endColumn":25},{"ruleId":"624","severity":1,"message":"727","line":16,"column":27,"nodeType":"626","messageId":"627","endLine":16,"endColumn":43},{"ruleId":"633","severity":1,"message":"728","line":40,"column":8,"nodeType":"635","endLine":40,"endColumn":16,"suggestions":"729"},{"ruleId":"637","replacedBy":"730"},{"ruleId":"639","replacedBy":"731"},{"ruleId":"624","severity":1,"message":"641","line":1,"column":27,"nodeType":"626","messageId":"627","endLine":1,"endColumn":36},{"ruleId":"624","severity":1,"message":"732","line":13,"column":12,"nodeType":"626","messageId":"627","endLine":13,"endColumn":19},{"ruleId":"624","severity":1,"message":"733","line":13,"column":21,"nodeType":"626","messageId":"627","endLine":13,"endColumn":31},{"ruleId":"624","severity":1,"message":"734","line":18,"column":3,"nodeType":"626","messageId":"627","endLine":18,"endColumn":23},{"ruleId":"624","severity":1,"message":"735","line":19,"column":3,"nodeType":"626","messageId":"627","endLine":19,"endColumn":27},{"ruleId":"624","severity":1,"message":"736","line":20,"column":3,"nodeType":"626","messageId":"627","endLine":20,"endColumn":25},{"ruleId":"624","severity":1,"message":"737","line":21,"column":3,"nodeType":"626","messageId":"627","endLine":21,"endColumn":23},{"ruleId":"624","severity":1,"message":"738","line":22,"column":3,"nodeType":"626","messageId":"627","endLine":22,"endColumn":27},{"ruleId":"624","severity":1,"message":"739","line":28,"column":3,"nodeType":"626","messageId":"627","endLine":28,"endColumn":27},{"ruleId":"624","severity":1,"message":"740","line":29,"column":3,"nodeType":"626","messageId":"627","endLine":29,"endColumn":25},{"ruleId":"624","severity":1,"message":"741","line":1,"column":8,"nodeType":"626","messageId":"627","endLine":1,"endColumn":13},{"ruleId":"633","severity":1,"message":"652","line":11,"column":8,"nodeType":"635","endLine":11,"endColumn":10,"suggestions":"742"},{"ruleId":"633","severity":1,"message":"652","line":45,"column":8,"nodeType":"635","endLine":45,"endColumn":10,"suggestions":"743"},{"ruleId":"624","severity":1,"message":"744","line":102,"column":11,"nodeType":"626","messageId":"627","endLine":102,"endColumn":24},{"ruleId":"624","severity":1,"message":"745","line":9,"column":12,"nodeType":"626","messageId":"627","endLine":9,"endColumn":20},{"ruleId":"746","severity":1,"message":"747","line":39,"column":17,"nodeType":"748","messageId":"749","endLine":39,"endColumn":30},{"ruleId":"624","severity":1,"message":"750","line":25,"column":12,"nodeType":"626","messageId":"627","endLine":25,"endColumn":22},{"ruleId":"624","severity":1,"message":"751","line":25,"column":24,"nodeType":"626","messageId":"627","endLine":25,"endColumn":37},{"ruleId":"624","severity":1,"message":"752","line":30,"column":12,"nodeType":"626","messageId":"627","endLine":30,"endColumn":19},{"ruleId":"624","severity":1,"message":"753","line":30,"column":21,"nodeType":"626","messageId":"627","endLine":30,"endColumn":31},{"ruleId":"624","severity":1,"message":"754","line":31,"column":12,"nodeType":"626","messageId":"627","endLine":31,"endColumn":25},{"ruleId":"624","severity":1,"message":"755","line":34,"column":11,"nodeType":"626","messageId":"627","endLine":34,"endColumn":20},{"ruleId":"633","severity":1,"message":"670","line":63,"column":8,"nodeType":"635","endLine":63,"endColumn":10,"suggestions":"756"},{"ruleId":"655","severity":1,"message":"757","line":73,"column":56,"nodeType":"657","messageId":"658","endLine":73,"endColumn":58},{"ruleId":"633","severity":1,"message":"758","line":100,"column":8,"nodeType":"635","endLine":100,"endColumn":10,"suggestions":"759"},{"ruleId":"624","severity":1,"message":"745","line":9,"column":12,"nodeType":"626","messageId":"627","endLine":9,"endColumn":20},{"ruleId":"746","severity":1,"message":"747","line":36,"column":17,"nodeType":"748","messageId":"749","endLine":36,"endColumn":30},{"ruleId":"633","severity":1,"message":"760","line":29,"column":8,"nodeType":"635","endLine":29,"endColumn":24,"suggestions":"761"},{"ruleId":"682","severity":1,"message":"683","line":54,"column":33,"nodeType":"684","endLine":54,"endColumn":62},{"ruleId":"682","severity":1,"message":"683","line":74,"column":33,"nodeType":"684","endLine":74,"endColumn":62},{"ruleId":"624","severity":1,"message":"762","line":13,"column":19,"nodeType":"626","messageId":"627","endLine":13,"endColumn":27},{"ruleId":"624","severity":1,"message":"669","line":14,"column":18,"nodeType":"626","messageId":"627","endLine":14,"endColumn":25},{"ruleId":"624","severity":1,"message":"763","line":15,"column":11,"nodeType":"626","messageId":"627","endLine":15,"endColumn":20},{"ruleId":"624","severity":1,"message":"631","line":16,"column":13,"nodeType":"626","messageId":"627","endLine":16,"endColumn":19},{"ruleId":"624","severity":1,"message":"632","line":16,"column":21,"nodeType":"626","messageId":"627","endLine":16,"endColumn":31},{"ruleId":"624","severity":1,"message":"672","line":23,"column":12,"nodeType":"626","messageId":"627","endLine":23,"endColumn":16},{"ruleId":"633","severity":1,"message":"764","line":28,"column":8,"nodeType":"635","endLine":28,"endColumn":10,"suggestions":"765"},{"ruleId":"624","severity":1,"message":"675","line":83,"column":15,"nodeType":"626","messageId":"627","endLine":83,"endColumn":19},{"ruleId":"624","severity":1,"message":"675","line":92,"column":15,"nodeType":"626","messageId":"627","endLine":92,"endColumn":19},{"ruleId":"633","severity":1,"message":"677","line":122,"column":8,"nodeType":"635","endLine":122,"endColumn":10,"suggestions":"766"},{"ruleId":"624","severity":1,"message":"692","line":18,"column":12,"nodeType":"626","messageId":"627","endLine":18,"endColumn":21},{"ruleId":"624","severity":1,"message":"693","line":18,"column":23,"nodeType":"626","messageId":"627","endLine":18,"endColumn":35},{"ruleId":"624","severity":1,"message":"694","line":23,"column":34,"nodeType":"626","messageId":"627","endLine":23,"endColumn":57},{"ruleId":"624","severity":1,"message":"632","line":35,"column":21,"nodeType":"626","messageId":"627","endLine":35,"endColumn":31},{"ruleId":"682","severity":1,"message":"683","line":18,"column":9,"nodeType":"684","endLine":18,"endColumn":89},{"ruleId":"624","severity":1,"message":"767","line":12,"column":10,"nodeType":"626","messageId":"627","endLine":12,"endColumn":19},{"ruleId":"633","severity":1,"message":"650","line":23,"column":6,"nodeType":"635","endLine":23,"endColumn":8,"suggestions":"768"},{"ruleId":"624","severity":1,"message":"769","line":25,"column":9,"nodeType":"626","messageId":"627","endLine":25,"endColumn":24},{"ruleId":"682","severity":1,"message":"683","line":51,"column":19,"nodeType":"684","endLine":51,"endColumn":82},{"ruleId":"685","severity":1,"message":"686","line":54,"column":23,"nodeType":"684","endLine":54,"endColumn":162},{"ruleId":"682","severity":1,"message":"687","line":63,"column":23,"nodeType":"684","endLine":63,"endColumn":26},{"ruleId":"682","severity":1,"message":"687","line":100,"column":23,"nodeType":"684","endLine":100,"endColumn":26},{"ruleId":"624","severity":1,"message":"770","line":14,"column":11,"nodeType":"626","messageId":"627","endLine":14,"endColumn":19},{"ruleId":"624","severity":1,"message":"669","line":20,"column":18,"nodeType":"626","messageId":"627","endLine":20,"endColumn":25},{"ruleId":"624","severity":1,"message":"631","line":22,"column":13,"nodeType":"626","messageId":"627","endLine":22,"endColumn":19},{"ruleId":"624","severity":1,"message":"632","line":22,"column":21,"nodeType":"626","messageId":"627","endLine":22,"endColumn":31},{"ruleId":"624","severity":1,"message":"771","line":31,"column":12,"nodeType":"626","messageId":"627","endLine":31,"endColumn":22},{"ruleId":"624","severity":1,"message":"674","line":32,"column":12,"nodeType":"626","messageId":"627","endLine":32,"endColumn":27},{"ruleId":"624","severity":1,"message":"772","line":33,"column":12,"nodeType":"626","messageId":"627","endLine":33,"endColumn":24},{"ruleId":"624","severity":1,"message":"675","line":95,"column":15,"nodeType":"626","messageId":"627","endLine":95,"endColumn":19},{"ruleId":"624","severity":1,"message":"675","line":107,"column":15,"nodeType":"626","messageId":"627","endLine":107,"endColumn":19},{"ruleId":"624","severity":1,"message":"676","line":152,"column":11,"nodeType":"626","messageId":"627","endLine":152,"endColumn":25},{"ruleId":"633","severity":1,"message":"677","line":163,"column":8,"nodeType":"635","endLine":163,"endColumn":10,"suggestions":"773"},{"ruleId":"624","severity":1,"message":"774","line":8,"column":12,"nodeType":"626","messageId":"627","endLine":8,"endColumn":21},{"ruleId":"633","severity":1,"message":"760","line":42,"column":8,"nodeType":"635","endLine":42,"endColumn":10,"suggestions":"775"},{"ruleId":"624","severity":1,"message":"776","line":4,"column":117,"nodeType":"626","messageId":"627","endLine":4,"endColumn":135},{"ruleId":"624","severity":1,"message":"777","line":4,"column":137,"nodeType":"626","messageId":"627","endLine":4,"endColumn":154},{"ruleId":"624","severity":1,"message":"778","line":11,"column":52,"nodeType":"626","messageId":"627","endLine":11,"endColumn":66},{"ruleId":"746","severity":1,"message":"779","line":24,"column":13,"nodeType":"748","messageId":"749","endLine":24,"endColumn":27},{"ruleId":"624","severity":1,"message":"780","line":31,"column":20,"nodeType":"626","messageId":"627","endLine":31,"endColumn":29},{"ruleId":"633","severity":1,"message":"652","line":37,"column":8,"nodeType":"635","endLine":37,"endColumn":10,"suggestions":"781"},{"ruleId":"782","severity":1,"message":"783","line":46,"column":9,"nodeType":"784","messageId":"785","endLine":56,"endColumn":10},{"ruleId":"624","severity":1,"message":"774","line":8,"column":12,"nodeType":"626","messageId":"627","endLine":8,"endColumn":21},{"ruleId":"633","severity":1,"message":"760","line":28,"column":8,"nodeType":"635","endLine":28,"endColumn":10,"suggestions":"786"},{"ruleId":"787","severity":1,"message":"788","line":32,"column":18,"nodeType":"789","messageId":"790","endLine":32,"endColumn":20},{"ruleId":"787","severity":1,"message":"788","line":32,"column":31,"nodeType":"789","messageId":"790","endLine":32,"endColumn":33},{"ruleId":"624","severity":1,"message":"791","line":4,"column":8,"nodeType":"626","messageId":"627","endLine":4,"endColumn":14},{"ruleId":"624","severity":1,"message":"792","line":10,"column":33,"nodeType":"626","messageId":"627","endLine":10,"endColumn":43},{"ruleId":"633","severity":1,"message":"793","line":68,"column":8,"nodeType":"635","endLine":68,"endColumn":10,"suggestions":"794"},{"ruleId":"624","severity":1,"message":"672","line":85,"column":12,"nodeType":"626","messageId":"627","endLine":85,"endColumn":16},{"ruleId":"624","severity":1,"message":"673","line":85,"column":18,"nodeType":"626","messageId":"627","endLine":85,"endColumn":25},{"ruleId":"624","severity":1,"message":"795","line":91,"column":12,"nodeType":"626","messageId":"627","endLine":91,"endColumn":23},{"ruleId":"624","severity":1,"message":"796","line":91,"column":25,"nodeType":"626","messageId":"627","endLine":91,"endColumn":39},{"ruleId":"624","severity":1,"message":"797","line":106,"column":11,"nodeType":"626","messageId":"627","endLine":106,"endColumn":27},{"ruleId":"624","severity":1,"message":"798","line":113,"column":12,"nodeType":"626","messageId":"627","endLine":113,"endColumn":28},{"ruleId":"624","severity":1,"message":"799","line":117,"column":12,"nodeType":"626","messageId":"627","endLine":117,"endColumn":23},{"ruleId":"624","severity":1,"message":"800","line":117,"column":25,"nodeType":"626","messageId":"627","endLine":117,"endColumn":39},{"ruleId":"633","severity":1,"message":"677","line":312,"column":8,"nodeType":"635","endLine":312,"endColumn":17,"suggestions":"801"},{"ruleId":"633","severity":1,"message":"802","line":458,"column":8,"nodeType":"635","endLine":458,"endColumn":67,"suggestions":"803"},{"ruleId":"624","severity":1,"message":"804","line":504,"column":13,"nodeType":"626","messageId":"627","endLine":504,"endColumn":31},{"ruleId":"624","severity":1,"message":"805","line":532,"column":11,"nodeType":"626","messageId":"627","endLine":532,"endColumn":38},{"ruleId":"655","severity":1,"message":"656","line":552,"column":57,"nodeType":"657","messageId":"658","endLine":552,"endColumn":59},{"ruleId":"655","severity":1,"message":"656","line":596,"column":35,"nodeType":"657","messageId":"658","endLine":596,"endColumn":37},{"ruleId":"624","severity":1,"message":"699","line":2,"column":10,"nodeType":"626","messageId":"627","endLine":2,"endColumn":21},{"ruleId":"624","severity":1,"message":"719","line":2,"column":23,"nodeType":"626","messageId":"627","endLine":2,"endColumn":34},{"ruleId":"624","severity":1,"message":"806","line":3,"column":10,"nodeType":"626","messageId":"627","endLine":3,"endColumn":18},{"ruleId":"624","severity":1,"message":"692","line":15,"column":12,"nodeType":"626","messageId":"627","endLine":15,"endColumn":21},{"ruleId":"624","severity":1,"message":"693","line":15,"column":23,"nodeType":"626","messageId":"627","endLine":15,"endColumn":35},{"ruleId":"624","severity":1,"message":"694","line":20,"column":34,"nodeType":"626","messageId":"627","endLine":20,"endColumn":57},{"ruleId":"624","severity":1,"message":"632","line":22,"column":21,"nodeType":"626","messageId":"627","endLine":22,"endColumn":31},{"ruleId":"637","replacedBy":"807"},{"ruleId":"639","replacedBy":"808"},{"ruleId":"624","severity":1,"message":"809","line":4,"column":8,"nodeType":"626","messageId":"627","endLine":4,"endColumn":13},{"ruleId":"624","severity":1,"message":"625","line":5,"column":10,"nodeType":"626","messageId":"627","endLine":5,"endColumn":20},{"ruleId":"624","severity":1,"message":"810","line":5,"column":22,"nodeType":"626","messageId":"627","endLine":5,"endColumn":32},{"ruleId":"624","severity":1,"message":"811","line":5,"column":34,"nodeType":"626","messageId":"627","endLine":5,"endColumn":43},{"ruleId":"624","severity":1,"message":"771","line":21,"column":136,"nodeType":"626","messageId":"627","endLine":21,"endColumn":146},{"ruleId":"624","severity":1,"message":"812","line":21,"column":148,"nodeType":"626","messageId":"627","endLine":21,"endColumn":159},{"ruleId":"633","severity":1,"message":"802","line":86,"column":8,"nodeType":"635","endLine":86,"endColumn":55,"suggestions":"813"},{"ruleId":"633","severity":1,"message":"814","line":101,"column":8,"nodeType":"635","endLine":101,"endColumn":31,"suggestions":"815"},{"ruleId":"633","severity":1,"message":"814","line":110,"column":8,"nodeType":"635","endLine":110,"endColumn":30,"suggestions":"816"},{"ruleId":"655","severity":1,"message":"656","line":136,"column":57,"nodeType":"657","messageId":"658","endLine":136,"endColumn":59},{"ruleId":"655","severity":1,"message":"656","line":162,"column":35,"nodeType":"657","messageId":"658","endLine":162,"endColumn":37},{"ruleId":"624","severity":1,"message":"817","line":6,"column":20,"nodeType":"626","messageId":"627","endLine":6,"endColumn":31},{"ruleId":"624","severity":1,"message":"792","line":6,"column":33,"nodeType":"626","messageId":"627","endLine":6,"endColumn":43},{"ruleId":"624","severity":1,"message":"818","line":8,"column":7,"nodeType":"626","messageId":"627","endLine":8,"endColumn":27},{"ruleId":"624","severity":1,"message":"819","line":9,"column":7,"nodeType":"626","messageId":"627","endLine":9,"endColumn":28},{"ruleId":"624","severity":1,"message":"820","line":10,"column":7,"nodeType":"626","messageId":"627","endLine":10,"endColumn":22},{"ruleId":"624","severity":1,"message":"821","line":12,"column":7,"nodeType":"626","messageId":"627","endLine":12,"endColumn":22},{"ruleId":"624","severity":1,"message":"822","line":14,"column":7,"nodeType":"626","messageId":"627","endLine":14,"endColumn":22},{"ruleId":"624","severity":1,"message":"823","line":16,"column":7,"nodeType":"626","messageId":"627","endLine":16,"endColumn":22},{"ruleId":"624","severity":1,"message":"824","line":18,"column":7,"nodeType":"626","messageId":"627","endLine":18,"endColumn":22},{"ruleId":"624","severity":1,"message":"825","line":20,"column":7,"nodeType":"626","messageId":"627","endLine":20,"endColumn":24},{"ruleId":"624","severity":1,"message":"826","line":22,"column":7,"nodeType":"626","messageId":"627","endLine":22,"endColumn":27},{"ruleId":"624","severity":1,"message":"827","line":23,"column":7,"nodeType":"626","messageId":"627","endLine":23,"endColumn":31},{"ruleId":"624","severity":1,"message":"828","line":25,"column":7,"nodeType":"626","messageId":"627","endLine":25,"endColumn":19},{"ruleId":"624","severity":1,"message":"829","line":27,"column":7,"nodeType":"626","messageId":"627","endLine":27,"endColumn":23},{"ruleId":"624","severity":1,"message":"830","line":28,"column":7,"nodeType":"626","messageId":"627","endLine":28,"endColumn":23},{"ruleId":"624","severity":1,"message":"831","line":30,"column":7,"nodeType":"626","messageId":"627","endLine":30,"endColumn":22},{"ruleId":"633","severity":1,"message":"793","line":53,"column":8,"nodeType":"635","endLine":53,"endColumn":10,"suggestions":"832"},{"ruleId":"624","severity":1,"message":"672","line":66,"column":12,"nodeType":"626","messageId":"627","endLine":66,"endColumn":16},{"ruleId":"624","severity":1,"message":"673","line":66,"column":18,"nodeType":"626","messageId":"627","endLine":66,"endColumn":25},{"ruleId":"624","severity":1,"message":"833","line":69,"column":12,"nodeType":"626","messageId":"627","endLine":69,"endColumn":27},{"ruleId":"624","severity":1,"message":"834","line":69,"column":29,"nodeType":"626","messageId":"627","endLine":69,"endColumn":47},{"ruleId":"624","severity":1,"message":"795","line":72,"column":12,"nodeType":"626","messageId":"627","endLine":72,"endColumn":23},{"ruleId":"624","severity":1,"message":"796","line":72,"column":25,"nodeType":"626","messageId":"627","endLine":72,"endColumn":39},{"ruleId":"624","severity":1,"message":"812","line":73,"column":12,"nodeType":"626","messageId":"627","endLine":73,"endColumn":23},{"ruleId":"624","severity":1,"message":"835","line":73,"column":25,"nodeType":"626","messageId":"627","endLine":73,"endColumn":39},{"ruleId":"624","severity":1,"message":"836","line":74,"column":12,"nodeType":"626","messageId":"627","endLine":74,"endColumn":24},{"ruleId":"624","severity":1,"message":"837","line":74,"column":26,"nodeType":"626","messageId":"627","endLine":74,"endColumn":41},{"ruleId":"624","severity":1,"message":"674","line":75,"column":12,"nodeType":"626","messageId":"627","endLine":75,"endColumn":27},{"ruleId":"624","severity":1,"message":"838","line":75,"column":29,"nodeType":"626","messageId":"627","endLine":75,"endColumn":47},{"ruleId":"624","severity":1,"message":"839","line":80,"column":12,"nodeType":"626","messageId":"627","endLine":80,"endColumn":24},{"ruleId":"624","severity":1,"message":"840","line":80,"column":26,"nodeType":"626","messageId":"627","endLine":80,"endColumn":41},{"ruleId":"624","severity":1,"message":"841","line":81,"column":12,"nodeType":"626","messageId":"627","endLine":81,"endColumn":31},{"ruleId":"624","severity":1,"message":"842","line":81,"column":33,"nodeType":"626","messageId":"627","endLine":81,"endColumn":55},{"ruleId":"624","severity":1,"message":"843","line":84,"column":12,"nodeType":"626","messageId":"627","endLine":84,"endColumn":32},{"ruleId":"624","severity":1,"message":"694","line":84,"column":34,"nodeType":"626","messageId":"627","endLine":84,"endColumn":57},{"ruleId":"624","severity":1,"message":"797","line":86,"column":11,"nodeType":"626","messageId":"627","endLine":86,"endColumn":27},{"ruleId":"624","severity":1,"message":"844","line":91,"column":12,"nodeType":"626","messageId":"627","endLine":91,"endColumn":24},{"ruleId":"624","severity":1,"message":"845","line":91,"column":26,"nodeType":"626","messageId":"627","endLine":91,"endColumn":41},{"ruleId":"624","severity":1,"message":"846","line":92,"column":12,"nodeType":"626","messageId":"627","endLine":92,"endColumn":19},{"ruleId":"624","severity":1,"message":"847","line":92,"column":21,"nodeType":"626","messageId":"627","endLine":92,"endColumn":31},{"ruleId":"624","severity":1,"message":"798","line":93,"column":12,"nodeType":"626","messageId":"627","endLine":93,"endColumn":28},{"ruleId":"624","severity":1,"message":"848","line":93,"column":30,"nodeType":"626","messageId":"627","endLine":93,"endColumn":49},{"ruleId":"624","severity":1,"message":"799","line":97,"column":12,"nodeType":"626","messageId":"627","endLine":97,"endColumn":23},{"ruleId":"624","severity":1,"message":"800","line":97,"column":25,"nodeType":"626","messageId":"627","endLine":97,"endColumn":39},{"ruleId":"633","severity":1,"message":"677","line":185,"column":8,"nodeType":"635","endLine":185,"endColumn":17,"suggestions":"849"},{"ruleId":"633","severity":1,"message":"802","line":237,"column":8,"nodeType":"635","endLine":237,"endColumn":67,"suggestions":"850"},{"ruleId":"624","severity":1,"message":"851","line":17,"column":12,"nodeType":"626","messageId":"627","endLine":17,"endColumn":24},{"ruleId":"624","severity":1,"message":"852","line":19,"column":12,"nodeType":"626","messageId":"627","endLine":19,"endColumn":22},{"ruleId":"624","severity":1,"message":"853","line":22,"column":12,"nodeType":"626","messageId":"627","endLine":22,"endColumn":19},{"ruleId":"624","severity":1,"message":"854","line":22,"column":21,"nodeType":"626","messageId":"627","endLine":22,"endColumn":31},{"ruleId":"624","severity":1,"message":"855","line":24,"column":12,"nodeType":"626","messageId":"627","endLine":24,"endColumn":17},{"ruleId":"624","severity":1,"message":"856","line":24,"column":19,"nodeType":"626","messageId":"627","endLine":24,"endColumn":27},{"ruleId":"624","severity":1,"message":"857","line":30,"column":12,"nodeType":"626","messageId":"627","endLine":30,"endColumn":16},{"ruleId":"624","severity":1,"message":"858","line":30,"column":18,"nodeType":"626","messageId":"627","endLine":30,"endColumn":25},{"ruleId":"633","severity":1,"message":"859","line":55,"column":8,"nodeType":"635","endLine":55,"endColumn":41,"suggestions":"860"},{"ruleId":"633","severity":1,"message":"861","line":55,"column":9,"nodeType":"862","endLine":55,"endColumn":40},{"ruleId":"633","severity":1,"message":"652","line":60,"column":8,"nodeType":"635","endLine":60,"endColumn":10,"suggestions":"863"},{"ruleId":"633","severity":1,"message":"652","line":63,"column":8,"nodeType":"635","endLine":63,"endColumn":16,"suggestions":"864"},{"ruleId":"624","severity":1,"message":"865","line":65,"column":11,"nodeType":"626","messageId":"627","endLine":65,"endColumn":21},{"ruleId":"624","severity":1,"message":"704","line":1,"column":17,"nodeType":"626","messageId":"627","endLine":1,"endColumn":25},{"ruleId":"624","severity":1,"message":"641","line":1,"column":27,"nodeType":"626","messageId":"627","endLine":1,"endColumn":36},{"ruleId":"624","severity":1,"message":"699","line":2,"column":23,"nodeType":"626","messageId":"627","endLine":2,"endColumn":34},{"ruleId":"624","severity":1,"message":"866","line":3,"column":10,"nodeType":"626","messageId":"627","endLine":3,"endColumn":14},{"ruleId":"624","severity":1,"message":"711","line":31,"column":11,"nodeType":"626","messageId":"627","endLine":31,"endColumn":19},{"ruleId":"624","severity":1,"message":"699","line":2,"column":23,"nodeType":"626","messageId":"627","endLine":2,"endColumn":34},{"ruleId":"624","severity":1,"message":"866","line":4,"column":10,"nodeType":"626","messageId":"627","endLine":4,"endColumn":14},{"ruleId":"624","severity":1,"message":"867","line":5,"column":21,"nodeType":"626","messageId":"627","endLine":5,"endColumn":32},{"ruleId":"624","severity":1,"message":"868","line":14,"column":20,"nodeType":"626","messageId":"627","endLine":14,"endColumn":31},{"ruleId":"637","replacedBy":"869"},{"ruleId":"639","replacedBy":"870"},{"ruleId":"624","severity":1,"message":"734","line":5,"column":3,"nodeType":"626","messageId":"627","endLine":5,"endColumn":23},{"ruleId":"624","severity":1,"message":"735","line":6,"column":3,"nodeType":"626","messageId":"627","endLine":6,"endColumn":27},{"ruleId":"624","severity":1,"message":"871","line":12,"column":3,"nodeType":"626","messageId":"627","endLine":12,"endColumn":20},{"ruleId":"624","severity":1,"message":"699","line":2,"column":23,"nodeType":"626","messageId":"627","endLine":2,"endColumn":34},{"ruleId":"624","severity":1,"message":"867","line":4,"column":21,"nodeType":"626","messageId":"627","endLine":4,"endColumn":32},{"ruleId":"624","severity":1,"message":"872","line":9,"column":8,"nodeType":"626","messageId":"627","endLine":9,"endColumn":13},{"ruleId":"624","severity":1,"message":"873","line":33,"column":10,"nodeType":"626","messageId":"627","endLine":33,"endColumn":22},{"ruleId":"624","severity":1,"message":"868","line":39,"column":20,"nodeType":"626","messageId":"627","endLine":39,"endColumn":31},{"ruleId":"624","severity":1,"message":"874","line":40,"column":10,"nodeType":"626","messageId":"627","endLine":40,"endColumn":18},{"ruleId":"624","severity":1,"message":"875","line":40,"column":20,"nodeType":"626","messageId":"627","endLine":40,"endColumn":31},{"ruleId":"624","severity":1,"message":"876","line":41,"column":10,"nodeType":"626","messageId":"627","endLine":41,"endColumn":21},{"ruleId":"624","severity":1,"message":"877","line":41,"column":23,"nodeType":"626","messageId":"627","endLine":41,"endColumn":37},{"ruleId":"624","severity":1,"message":"867","line":4,"column":21,"nodeType":"626","messageId":"627","endLine":4,"endColumn":32},{"ruleId":"624","severity":1,"message":"792","line":8,"column":10,"nodeType":"626","messageId":"627","endLine":8,"endColumn":20},{"ruleId":"624","severity":1,"message":"817","line":8,"column":22,"nodeType":"626","messageId":"627","endLine":8,"endColumn":33},{"ruleId":"624","severity":1,"message":"878","line":34,"column":10,"nodeType":"626","messageId":"627","endLine":34,"endColumn":15},{"ruleId":"624","severity":1,"message":"879","line":38,"column":10,"nodeType":"626","messageId":"627","endLine":38,"endColumn":14},{"ruleId":"624","severity":1,"message":"880","line":38,"column":16,"nodeType":"626","messageId":"627","endLine":38,"endColumn":23},{"ruleId":"633","severity":1,"message":"881","line":66,"column":6,"nodeType":"635","endLine":66,"endColumn":18,"suggestions":"882"},{"ruleId":"624","severity":1,"message":"883","line":6,"column":3,"nodeType":"626","messageId":"627","endLine":6,"endColumn":23},{"ruleId":"624","severity":1,"message":"884","line":50,"column":13,"nodeType":"626","messageId":"627","endLine":50,"endColumn":23},{"ruleId":"885","severity":1,"message":"886","line":54,"column":5,"nodeType":"887","messageId":"888","endLine":57,"endColumn":9},{"ruleId":"624","severity":1,"message":"889","line":8,"column":11,"nodeType":"626","messageId":"627","endLine":8,"endColumn":15},{"ruleId":"624","severity":1,"message":"890","line":52,"column":18,"nodeType":"626","messageId":"627","endLine":52,"endColumn":27},"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'toastOnError' is defined but never used.","'JITSI_MUTE_ALL' is assigned a value but never used.","'JITSI_MUTE_ONE' is assigned a value but never used.","'toggle' is assigned a value but never used.","'fullScreen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user_auth.user.username'. Either include it or remove the dependency array.","ArrayExpression",["891"],"no-native-reassign",["892"],"no-negated-in-lhs",["893"],"'useEffect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["892"],["893"],["892"],["893"],"'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user.id'. Either include them or remove the dependency array.",["894"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["895"],"'handleClose' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'displayName', 'domain', 'jitsi', 'onMeetingEnd', 'options', 'parentNode', 'password', and 'subject'. Either include them or remove the dependency array. Outer scope values like 'window.JitsiMeetExternalAPI' aren't valid dependencies because mutating them doesn't re-render the component.",["896"],["892"],["893"],"'moment' is defined but never used.","'useCallback' is defined but never used.","'stateAudioAll' is assigned a value but never used.","'setStateAudioAll' is assigned a value but never used.","'stateVideoAll' is assigned a value but never used.","'setStateVideoAll' is assigned a value but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Id' and 'dispatch'. Either include them or remove the dependency array.",["897"],"'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'dominantSpeaker' is assigned a value but never used.","'data' is assigned a value but never used.","'executeCommand' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'startMeet'. Either include it or remove the dependency array.",["898"],"React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["899"],"'handleShareScreenJitsi' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setJitsiStore' is defined but never used.","'setAudioAll' is defined but never used.","'setVideoAll' is defined but never used.","'setFullAll' is defined but never used.","'stateFull' is assigned a value but never used.","'setStateFull' is assigned a value but never used.","'setNumberOfParticipants' is assigned a value but never used.",["892"],["893"],["892"],["893"],"'useSelector' is defined but never used.","'MultiSelectComponent' is defined but never used.","'DropDownListComponent' is defined but never used.","'selectedOption' is assigned a value but never used.","'setSelectedOption' is assigned a value but never used.","'useState' is defined but never used.","'CalendarBreadcrumb' is defined but never used.","'setActive' is assigned a value but never used.","'setActive2' is assigned a value but never used.","'setIsSelected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'EndTime' and 'StartTime'. Either include them or remove the dependency array.",["900"],"'dispatch' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.",["901"],"'CalendarTodays' is assigned a value but never used.","'pageVisited' is assigned a value but never used.","'videoConstraints' is assigned a value but never used.",["892"],["893"],"'useDispatch' is defined but never used.","'eventType2' is assigned a value but never used.","'EventTypes' is assigned a value but never used.","'StartTime' is assigned a value but never used.","'EndTime' is assigned a value but never used.","'Location' is assigned a value but never used.","'Description' is assigned a value but never used.","'selectedItems' is assigned a value but never used.","'setSelectedItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'hobbies', 'itemCalendar.Description', 'itemCalendar.EndTime', 'itemCalendar.EventType', 'itemCalendar.Location', 'itemCalendar.StartTime', and 'itemCalendar.Subject'. Either include them or remove the dependency array.",["902"],["892"],["893"],"'isState' is assigned a value but never used.","'setIsState' is assigned a value but never used.","'CREATE_PROFILE_ERROR' is defined but never used.","'CREATE_PROFILE_SUBMITTED' is defined but never used.","'CREATE_PROFILE_SUCCESS' is defined but never used.","'UPDATE_PROFILE_ERROR' is defined but never used.","'UPDATE_PROFILE_SUBMITTED' is defined but never used.","'GET_PROFILE_UNIT_SUCCESS' is defined but never used.","'GET_PROFILE_UNIT_ERROR' is defined but never used.","'React' is defined but never used.",["903"],["904"],"'handleFormAdd' is assigned a value but never used.","'selected' is assigned a value but never used.","no-dupe-keys","Duplicate key 'headerBgColor'.","ObjectExpression","unexpected","'User_rooms' is assigned a value but never used.","'setUser_rooms' is assigned a value but never used.","'userAdd' is assigned a value but never used.","'setUserAdd' is assigned a value but never used.","'updateSuccess' is assigned a value but never used.","'dataRoom2' is assigned a value but never used.",["905"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'data', 'dataRoom', 'eventType2', and 'profiles'. Either include them or remove the dependency array.",["906"],"React Hook useEffect has missing dependencies: 'cal.EndTime' and 'cal.StartTime'. Either include them or remove the dependency array.",["907"],"'setUsers' is assigned a value but never used.","'socketRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Subject'. Either include it or remove the dependency array.",["908"],["909"],"'resetPass' is assigned a value but never used.",["910"],"'handleResetPass' is assigned a value but never used.","'roomMeet' is assigned a value but never used.","'isTileView' is assigned a value but never used.","'displayName2' is assigned a value but never used.",["911"],"'statusNum' is assigned a value but never used.",["912"],"'ResourcesDirective' is defined but never used.","'ResourceDirective' is defined but never used.","'deleteCalendar' is defined but never used.","Duplicate key 'cancelButton'.","'setFields' is assigned a value but never used.",["913"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["914"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Select' is defined but never used.","'getProfile' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'roomId'. Either include them or remove the dependency array.",["915"],"'isTileViews' is assigned a value but never used.","'setIsTileViews' is assigned a value but never used.","'incomingMessages' is assigned a value but never used.","'availableDevices' is assigned a value but never used.","'video_Input' is assigned a value but never used.","'setVideo_Input' is assigned a value but never used.",["916"],"React Hook useEffect has missing dependencies: '_api', 'fullname', and 'user_auth.id'. Either include them or remove the dependency array.",["917"],"'handleMuteEveryone' is assigned a value but never used.","'handleLargeVideoParticipant' is assigned a value but never used.","'setAudio' is defined but never used.",["892"],["893"],"'axios' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'isFilmstrip' is assigned a value but never used.",["918"],"React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.",["919"],["920"],"'getProfiles' is defined but never used.","'USER_JOIN_CHAT_EVENT' is assigned a value but never used.","'USER_LEAVE_CHAT_EVENT' is assigned a value but never used.","'JITSI_AUDIO_ONE' is assigned a value but never used.","'JITSI_AUDIO_ALL' is assigned a value but never used.","'JITSI_VIDEO_ONE' is assigned a value but never used.","'JITSI_VIDEO_ALL' is assigned a value but never used.","'JITSI_FILMSTRIP' is assigned a value but never used.","'JITSI_TOGGLE_VIEW' is assigned a value but never used.","'JITSI_TOGGLE_DESKTOP' is assigned a value but never used.","'SVR_JITSI_TOGGLE_DESKTOP' is assigned a value but never used.","'JITSI_HANGUP' is assigned a value but never used.","'JITSI_HANGUP_ALL' is assigned a value but never used.","'JITSI_STOP_SHARE' is assigned a value but never used.","'JITSI_TILE_VIEW' is assigned a value but never used.",["921"],"'isAudioMutedAll' is assigned a value but never used.","'setIsAudioMutedAll' is assigned a value but never used.","'setIsFilmstrip' is assigned a value but never used.","'isFullDestop' is assigned a value but never used.","'setIsFullDestop' is assigned a value but never used.","'setDominantSpeaker' is assigned a value but never used.","'raiseHandNew' is assigned a value but never used.","'setRaiseHandNew' is assigned a value but never used.","'sharingParticipants' is assigned a value but never used.","'setSharingParticipants' is assigned a value but never used.","'numberOfParticipants' is assigned a value but never used.","'participants' is assigned a value but never used.","'setParticipants' is assigned a value but never used.","'idLeave' is assigned a value but never used.","'setIdLeave' is assigned a value but never used.","'setAvailableDevices' is assigned a value but never used.",["922"],["923"],"'userSelected' is assigned a value but never used.","'idSelected' is assigned a value but never used.","'dataNew' is assigned a value but never used.","'setDataNew' is assigned a value but never used.","'idPro' is assigned a value but never used.","'setIdPro' is assigned a value but never used.","'proF' is assigned a value but never used.","'setProF' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["924"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["925"],["926"],"'handleEdit' is assigned a value but never used.","'Link' is defined but never used.","'FormControl' is defined but never used.","'setUsername' is assigned a value but never used.",["892"],["893"],"'GET_PROFILE_ERROR' is defined but never used.","'Modal' is defined but never used.","'ProfileModal' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'re_password' is assigned a value but never used.","'setRe_password' is assigned a value but never used.","'email' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'profile.email', 'profile.first_name', 'profile.groups', 'profile.image', 'profile.last_name', 'profile.phone', 'profile.sort_id', 'profile.unit_id', and 'profile.user'. Either include them or remove the dependency array.",["927"],"'GET_PROFILES_REQUEST' is defined but never used.","'errorState' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Test' is assigned a value but never used.","'setGroups' is assigned a value but never used.",{"desc":"928","fix":"929"},"no-global-assign","no-unsafe-negation",{"desc":"930","fix":"931"},{"desc":"932","fix":"933"},{"desc":"934","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},{"desc":"940","fix":"941"},{"desc":"942","fix":"943"},{"desc":"932","fix":"944"},{"desc":"945","fix":"946"},{"desc":"932","fix":"947"},{"desc":"932","fix":"948"},{"desc":"936","fix":"949"},{"desc":"950","fix":"951"},{"desc":"952","fix":"953"},{"desc":"954","fix":"955"},{"desc":"938","fix":"956"},{"desc":"957","fix":"958"},{"desc":"938","fix":"959"},{"desc":"960","fix":"961"},{"desc":"932","fix":"962"},{"desc":"960","fix":"963"},{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"964","fix":"976"},{"desc":"966","fix":"977"},{"desc":"968","fix":"978"},{"desc":"979","fix":"980"},{"desc":"932","fix":"981"},{"desc":"982","fix":"983"},{"desc":"984","fix":"985"},"Update the dependencies array to be: [user_auth.user.username]",{"range":"986","text":"987"},"Update the dependencies array to be: [dispatch, stateEdit, user.id]",{"range":"988","text":"989"},"Update the dependencies array to be: [dispatch]",{"range":"990","text":"991"},"Update the dependencies array to be: [displayName, domain, jitsi, onMeetingEnd, options, parentNode, password, subject]",{"range":"992","text":"993"},"Update the dependencies array to be: [Id, dispatch]",{"range":"994","text":"995"},"Update the dependencies array to be: [startMeet]",{"range":"996","text":"997"},"Update the dependencies array to be: [Id, api, user]",{"range":"998","text":"999"},"Update the dependencies array to be: [EndTime, StartTime, calendar]",{"range":"1000","text":"1001"},{"range":"1002","text":"991"},"Update the dependencies array to be: [Id_cal, hobbies, itemCalendar.Description, itemCalendar.EndTime, itemCalendar.EventType, itemCalendar.Location, itemCalendar.StartTime, itemCalendar.Subject]",{"range":"1003","text":"1004"},{"range":"1005","text":"991"},{"range":"1006","text":"991"},{"range":"1007","text":"995"},"Update the dependencies array to be: [data, dataRoom, eventType2, profiles]",{"range":"1008","text":"1009"},"Update the dependencies array to be: [cal.EndTime, cal.StartTime, props.calendar]",{"range":"1010","text":"1011"},"Update the dependencies array to be: [Subject]",{"range":"1012","text":"1013"},{"range":"1014","text":"997"},"Update the dependencies array to be: [dispatch, user.id]",{"range":"1015","text":"1016"},{"range":"1017","text":"997"},"Update the dependencies array to be: [cal.EndTime, cal.StartTime]",{"range":"1018","text":"1019"},{"range":"1020","text":"991"},{"range":"1021","text":"1019"},"Update the dependencies array to be: [dispatch, roomId]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [profile, startMeet]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [roomId, jitsiUser, isAudioMuted, isVideoMuted, isTileView, fullname, user_auth.id, _api]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [roomId, jitsiUser, isAudioMuted, isVideoMuted, fullname, user_auth.id, _api]",{"range":"1028","text":"1029"},"Update the dependencies array to be: [handleToggleFilmStrip, roomId]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [handleToggleTileView, roomId]",{"range":"1032","text":"1033"},{"range":"1034","text":"1023"},{"range":"1035","text":"1025"},{"range":"1036","text":"1027"},"Update the dependencies array to be: [location.pathname]",{"range":"1037","text":"1038"},{"range":"1039","text":"991"},"Update the dependencies array to be: [dispatch, unitId]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [profile.email, profile.first_name, profile.groups, profile.id, profile.image, profile.last_name, profile.phone, profile.sort_id, profile.unit_id, profile.user]",{"range":"1042","text":"1043"},[1819,1821],"[user_auth.user.username]",[2166,2177],"[dispatch, stateEdit, user.id]",[2539,2541],"[dispatch]",[1501,1530],"[displayName, domain, jitsi, onMeetingEnd, options, parentNode, password, subject]",[2277,2279],"[Id, dispatch]",[8331,8333],"[startMeet]",[10504,10514],"[Id, api, user]",[1467,1477],"[EndTime, StartTime, calendar]",[1879,1881],[1442,1450],"[Id_cal, hobbies, itemCalendar.Description, itemCalendar.EndTime, itemCalendar.EventType, itemCalendar.Location, itemCalendar.StartTime, itemCalendar.Subject]",[333,335],[1900,1902],[2904,2906],[4625,4627],"[data, dataRoom, eventType2, profiles]",[1107,1123],"[cal.EndTime, cal.StartTime, props.calendar]",[1056,1058],"[Subject]",[4709,4711],[830,832],"[dispatch, user.id]",[6145,6147],[1661,1663],"[cal.EndTime, cal.StartTime]",[1457,1459],[1060,1062],[3074,3076],"[dispatch, roomId]",[13078,13087],"[profile, startMeet]",[18725,18784],"[roomId, jitsiUser, isAudioMuted, isVideoMuted, isTileView, fullname, user_auth.id, _api]",[3299,3346],"[roomId, jitsiUser, isAudioMuted, isVideoMuted, fullname, user_auth.id, _api]",[3888,3911],"[handleToggleFilmStrip, roomId]",[4134,4156],"[handleToggleTileView, roomId]",[2397,2399],[7906,7915],[9955,10014],[2067,2100],"[location.pathname]",[2195,2197],[2269,2277],"[dispatch, unitId]",[2256,2268],"[profile.email, profile.first_name, profile.groups, profile.id, profile.image, profile.last_name, profile.phone, profile.sort_id, profile.unit_id, profile.user]"]